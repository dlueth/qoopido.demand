{"version":3,"sources":["cache/dispose.js"],"names":["localStorage","provide","functionIterate","getState","key","matches","state","getItem","match","regexMatchProperties","Array","prototype","slice","call","getKey","id","PREFIX","SUFFIX","filterStates","property","regexMatchState","this","push","compareAccess","a","b","RegExp","demand","clear","path","size","states","sort","length","shift"],"mappings":";CAAA,SAAAA,GACA,aA4CAC,SAAA,4BA1CA,SAAAC,GACA,SAAAC,EAAAC,GACA,IAAAC,EAAAC,EAAAN,EAAAO,QAAAH,GACA,GAAAE,IAAAD,EAAAC,EAAAE,MAAAC,IAAA,OAAAC,MAAAC,UAAAC,MAAAC,KAAAR,EAAA,GAGA,SAAAS,EAAAC,GACA,MAAA,IAAAC,EAAA,KAAAD,EAAA,KAAAE,EAAA,IAGA,SAAAC,EAAAC,GACA,IAAAb,EAAAE,EAAAW,EAAAX,MAAAY,GACAZ,KACAF,EAAAH,EAAAW,EAAAN,EAAA,MAAA,GAAAA,EAAA,GACAa,KAAAC,KAAAhB,IAIA,SAAAiB,EAAAC,EAAAC,GACA,OAAAD,EAAA,GAAAC,EAAA,IAAA,EACAD,EAAA,GAAAC,EAAA,GAAA,EACA,EAEA,IAAAT,EAAA,SACAC,EAAA,QACAG,EAAA,IAAAM,OAAA,OAAAV,EAAA,oBAAAC,EAAA,QACAR,EAAA,kCAMA,OALAP,EAAAF,EAAA,SAAAmB,GACA,IAAAX,EAAAW,EAAAX,MAAAY,GACAZ,IACAL,EAAAW,EAAAN,EAAA,KAAA,IAAAmB,OAAAC,MAAAC,KAAArB,EAAA,OAEA,SAAAsB,GACA,IAAAxB,EAAAyB,KAGA,IAFA7B,EAAAF,EAAAkB,EAAAa,GACAA,EAAAC,KAAAT,GACAO,EAAA,GAAAC,EAAAE,QACAH,IAAAxB,EAAAyB,EAAAG,SAAA,GACAP,OAAAC,MAAAC,KAAAvB,EAAA,OAzCA,CA8CAN","file":"dispose.js","sourcesContent":["/**! Qoopido.demand 5.0.2 | https://github.com/dlueth/qoopido.demand | (c) 2018 Dirk Lueth */\n(function (localStorage) {\n\t\"use strict\";\n\n\tfunction definition(functionIterate) {\n\t\tfunction getState(key) {\n\t\t\tvar matches, state = localStorage.getItem(key);\n\t\t\tif (state && (matches = state.match(regexMatchProperties))) return Array.prototype.slice.call(matches, 1)\n\t\t}\n\n\t\tfunction getKey(id) {\n\t\t\treturn \"[\" + PREFIX + \"][\" + id + \"][\" + SUFFIX + \"]\"\n\t\t}\n\n\t\tfunction filterStates(property) {\n\t\t\tvar state, match = property.match(regexMatchState);\n\t\t\tif (match) {\n\t\t\t\t(state = getState(getKey(match[1])))[5] = match[1];\n\t\t\t\tthis.push(state)\n\t\t\t}\n\t\t}\n\n\t\tfunction compareAccess(a, b) {\n\t\t\tif (a[4] < b[4]) return -1;\n\t\t\tif (a[4] > b[4]) return 1;\n\t\t\telse return 0\n\t\t}\n\t\tvar PREFIX = \"demand\",\n\t\t\tSUFFIX = \"state\",\n\t\t\tregexMatchState = new RegExp(\"^\\\\[\" + PREFIX + \"\\\\]\\\\[(.+?)\\\\]\\\\[\" + SUFFIX + \"\\\\]$\"),\n\t\t\tregexMatchProperties = /^(.+?),(\\d+),(\\d*),(.+?),(\\d+)$/;\n\t\tfunctionIterate(localStorage, function (property) {\n\t\t\tvar match = property.match(regexMatchState);\n\t\t\tif (match)\n\t\t\t\tif (!getState(getKey(match[1]))[4]) demand.clear.path(match[1])\n\t\t});\n\t\treturn function (size) {\n\t\t\tvar state, states = [];\n\t\t\tfunctionIterate(localStorage, filterStates, states);\n\t\t\tstates.sort(compareAccess);\n\t\t\twhile (size > 0 && states.length) {\n\t\t\t\tsize -= (state = states.shift())[1];\n\t\t\t\tdemand.clear.path(state[5])\n\t\t\t}\n\t\t}\n\t}\n\tprovide([\"/demand/function/iterate\"], definition)\n})(localStorage);\n"]}