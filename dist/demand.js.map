{"version":3,"sources":["demand.js"],"names":["global","setTimeout","clearTimeout","ClassDescriptor","value","writable","configurable","enumerable","__proto__","NULL","validatorIsTypeOf","object","type","validatorIsObject","STRING_OBJECT","validatorIsPositive","STRING_NUMBER","isFinite","Math","floor","validatorIsInstanceOf","module","functionIterate","source","callback","context","property","properties","keys","i","UNDEFINED","call","FALSE","functionToArray","arrayLikeObject","start","end","arrayPrototypeSlice","AbstractUuid","this","uuid","STRING_UNDEFINED","define","functionUuid","functionGetTimestamp","Date","functionResolveUrl","url","linkElement","href","functionResolvePath","uri","path","replace","regexMatchParameter","regexIsAbsolutePath","test","regexIsAbsoluteUri","regexMatchBaseUrl","functionResolveId","parameter","match","settings","handler","ClassFailure","message","stack","self","ClassLoader","dependency","resolve","response","validate","dfd","reject","ERROR_LOAD","id","singletonEvent","emit","EVENT_POST_REQUEST","status","pattern","regexMatchEmptySearch","matches","weight","load","location","document","createElement","process","invalid","search","EVENT_PRE_REQUEST","ClassXhr","then","validatorIsArray","objectPrototypeToString","functionHash","input","length","charCodeAt","functionResolveSourcemaps","replacement","regexMatchSourcemap","exec","protocol","host","pathname","abstractHandler","assignModule","provide","demand","queue","processor","validatorIsSemver","functionMerge","functionDefer","ClassWeakmap","ClassQueue","functionIdle","functionEscapeRegex","regexMatchInternal","ClassSemver","singletonCache","ClassPledge","ClassRegistry","ClassDependency","ClassPattern","ClassProcessor","handlerModule","handlerBundle","handlerComponent","pluginGenie","regexMatchSemver","element","fallback","storage","hasSetImmediate","regexMatchRegex","XMLHttpRequest","XDomainRequest","options","version","cache","timeout","modules","DEMAND_ID","PROVIDE_ID","MODULE_PREFIX","MODULE_PREFIX_ABSTRACT","MODULE_PREFIX_HANDLER","MODULE_PREFIX_PLUGIN","MODULE_PREFIX_FUNCTION","MODULE_PREFIX_VALIDATOR","MOCK_PREFIX","STRING_STRING","STRING_FUNCTION","EVENT_POSTFIX","EVENT_POST_CONFIGURE","EVENT_CACHE","EVENT_CACHE_MISS","EVENT_CACHE_HIT","EVENT_CACHE_EXCEED","EVENT_PRE_RESOLVE","EVENT_PREFIX","EVENT_REQUEST","EVENT_PROCESS","EVENT_PRE_PROCESS","EVENT_POST_PROCESS","EVENT_QUEUE_ENQUEUE","EVENT_QUEUE","ERROR_RESOLVE","arrayPrototype","Array","prototype","slice","arrayPrototypeConcat","concat","Object","toString","objectCreate","create","objectDefineProperty","defineProperty","objectGetOwnPropertyNames","getOwnPropertyNames","objectGetOwnPropertyDescriptor","getOwnPropertyDescriptor","strPrototype","objectDefine","name","functionExtends","names","constructor","e","TypeError","Function","mergeProperties","targetPropertyIsObject","targetProperty","target","arguments","randomize","character","r","random","regex","RegExp","fn","MutationObserver","observe","attributes","setAttribute","addEventListener","event","data","postMessage","onreadystatechange","parentNode","removeChild","body","appendChild","setImmediate","addListener","events","pointer","split","shift","regexMatchEvent","listener","on","after","push","filter","Event","item","apply","WeakMap","getEntry","key","entry","set","get","delete","has","enqueue","items","dequeue","current","extends","requestIdleCallback","eventName","safari","pushNotification","didTimeout","timeRemaining","max","cancelIdleCallback","onVisibilitychange","visibilityState","removeEventListener","compareLevel","a","b","temp","parts","parseInt","parse","major","minor","patch","identifier","join","compare","pa","pb","tpa","tpb","compareIdentifier","enabled","indexOf","state","getKey","localStorage","getItem","setKey","getState","regexMatchProperties","setState","Cache","clear","expired","bind","STORAGE_PREFIX","STORAGE_SUFFIX_STATE","STORAGE_SUFFIX_VALUE","regexMatchState","supportsLocalStorage","exception","supportsRemainingSpace","cacheDispose","lifetime","spaceBefore","remainingSpace","Error","error","all","pledge","index","resolved","count","check","rejected","total","executor","PLEDGE_PENDING","handle","result","PLEDGE_RESOLVED","PLEDGE_REJECTED","catch","always","alwaysListener","resolveListener","rejectListener","defer","isPending","isResolved","isRejected","pledges","race","remove","traverse","depth","indention","setProperty","add","matchInternal","addPending","addResolved","addRejected","list","registry","register","placeholder","mock","PREFIX_INTERNAL","pending","isInternal","node","querySelector","regexMatchTrailingSlash","xhr","boundCheckState","readyState","abort","ontimeout","onerror","onabort","onprogress","onload","responseText","getResponseHeader","open","send","updateCacheSettings","updatePatternSettings","updateModuleSettings","dependencies","configure","base","min","onPostRequest","onPreRequest","onPreProcess","isFunction","definition","console","/demand","HandlerModule","getElementsByTagName","regexMatchType","script","async","text","updateDependencies","HandlerBundle","getType","HandlerComponent","suffix","container","innerHTML","firstElementChild","getAttribute","textContent","matchPattern","prefix","addPattern","resolveBundles","JSON","stringify","bundle","configuration","/demand/handler/bundle","generateConfiguration","bundles","main","parent"],"mappings":"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","file":"demand.js","sourcesContent":["/**! Qoopido.demand 5.0.5 | https://github.com/dlueth/qoopido.demand | (c) 2018 Dirk Lueth */\n(function (global, setTimeout, clearTimeout) {\n\t\"use strict\";\n\n\tfunction ClassDescriptor(value, writable, configurable, enumerable) {\n\t\treturn {\n\t\t\t__proto__: NULL,\n\t\t\tvalue: value,\n\t\t\tenumerable: !!enumerable,\n\t\t\tconfigurable: !!configurable,\n\t\t\twritable: !!writable\n\t\t}\n\t}\n\n\tfunction validatorIsTypeOf(object, type) {\n\t\treturn typeof object === type\n\t}\n\n\tfunction validatorIsObject(object) {\n\t\treturn object && validatorIsTypeOf(object, STRING_OBJECT)\n\t}\n\n\tfunction validatorIsPositive(value) {\n\t\treturn validatorIsTypeOf(value, STRING_NUMBER) && isFinite(value) && Math.floor(value) === value && value >= 0\n\t}\n\n\tfunction validatorIsInstanceOf(object, module) {\n\t\treturn object instanceof module\n\t}\n\n\tfunction functionIterate(source, callback, context) {\n\t\tfor (var property, properties = object.keys(source), i = 0;\n\t\t\t(property = properties[i]) !== UNDEFINED; i++)\n\t\t\tif (callback.call(context, property, source[property]) === FALSE) break;\n\t\treturn context\n\t}\n\n\tfunction functionToArray(arrayLikeObject, start, end) {\n\t\treturn arrayPrototypeSlice.call(arrayLikeObject, start, end)\n\t}\n\n\tfunction AbstractUuid() {\n\t\tif (validatorIsTypeOf(this.uuid, STRING_UNDEFINED)) this.define(\"uuid\", functionUuid());\n\t\treturn this\n\t}\n\n\tfunction functionGetTimestamp() {\n\t\treturn +new Date\n\t}\n\n\tfunction functionResolveUrl(url) {\n\t\tlinkElement.href = url;\n\t\treturn linkElement.href\n\t}\n\n\tfunction functionResolvePath(uri, context) {\n\t\tvar path = uri.replace(regexMatchParameter, \"\");\n\t\tif (!regexIsAbsolutePath.test(path) && !regexIsAbsoluteUri.test(path)) path = \"/\" + functionResolveUrl((context && functionResolveUrl(context + \"/../\") || \"/\") + path)\n\t\t\t.replace(regexMatchBaseUrl, \"\");\n\t\treturn path\n\t}\n\n\tfunction functionResolveId(uri, context) {\n\t\tvar parameter = uri.match(regexMatchParameter);\n\t\treturn (parameter && parameter[1] ? \"mock:\" : \"\") + (parameter && parameter[3] || settings.handler) + \"!\" + functionResolvePath(uri, context)\n\t}\n\n\tfunction ClassFailure(message, module, stack) {\n\t\tvar self = this;\n\t\tself.message = message;\n\t\tmodule && (self.module = module);\n\t\tstack && (self.stack = functionToArray(stack));\n\t\treturn self\n\t}\n\n\tfunction ClassLoader(dependency) {\n\t\tfunction resolve(response, type) {\n\t\t\tif (!type || !dependency.handler.validate || dependency.handler.validate(type)) {\n\t\t\t\tdependency.source = response;\n\t\t\t\tsingletonEvent.emit(EVENT_POST_REQUEST, dependency.type, dependency)\n\t\t\t} else dependency.dfd.reject(new ClassFailure(ERROR_LOAD + \" (content-type)\", dependency.id))\n\t\t}\n\n\t\tfunction reject(status) {\n\t\t\tdependency.dfd.reject(new ClassFailure(ERROR_LOAD + (status ? \" (status)\" : \"\"), dependency.id))\n\t\t}\n\n\t\tfunction load(location) {\n\t\t\tlocation = location || 0;\n\t\t\tdependency.url = document.createElement(\"a\");\n\t\t\tdependency.url.href = pattern ? functionResolveUrl(pattern.process(dependency.path, location)) : dependency.path;\n\t\t\tif (dependency.invalid) dependency.url.search += (regexMatchEmptySearch.test(dependency.url.search) ? \"\" : \"&\") + functionGetTimestamp();\n\t\t\tsingletonEvent.emit(EVENT_PRE_REQUEST, dependency.type, dependency);\n\t\t\tnew ClassXhr(dependency.url)\n\t\t\t\t.then(resolve, pattern ? function () {\n\t\t\t\t\tlocation++;\n\t\t\t\t\tif (pattern.location[location]) load(location);\n\t\t\t\t\telse reject()\n\t\t\t\t} : reject)\n\t\t}\n\t\tvar pattern, regexMatchEmptySearch = /^(?:\\?|)$/;\n\t\tif (!regexIsAbsoluteUri.test(dependency.path)) functionIterate(settings.pattern, function (property, value) {\n\t\t\tvalue.matches(dependency.path) && (!pattern || pattern.weight < value.weight) && (pattern = value)\n\t\t});\n\t\tload()\n\t}\n\n\tfunction validatorIsArray(value) {\n\t\treturn \"[object Array]\" === objectPrototypeToString.call(value)\n\t}\n\n\tfunction functionHash(input) {\n\t\tvar value = 5381,\n\t\t\ti = input.length;\n\t\twhile (i) value = 33 * value ^ input.charCodeAt(--i);\n\t\treturn value >>> 0\n\t}\n\n\tfunction functionResolveSourcemaps(url, source) {\n\t\tvar match, replacement;\n\t\twhile (match = regexMatchSourcemap.exec(source)) {\n\t\t\tlinkElement.href = url;\n\t\t\tif (regexIsAbsoluteUri.test(match[2])) replacement = linkElement.protocol + \"//\" + linkElement.host + match[3];\n\t\t\telse {\n\t\t\t\tlinkElement.pathname += \"/../\" + match[3];\n\t\t\t\treplacement = linkElement.protocol + \"//\" + linkElement.host + linkElement.pathname\n\t\t\t}\n\t\t\tsource = source.replace(match[0], match[1] + \" \" + match[2] + \"=\" + replacement + \".map\" + (match[4] ? \" \" + match[4] : \"\"))\n\t\t}\n\t\treturn source\n\t}\n\n\tfunction abstractHandler() {}\n\n\tfunction ClassFailure(message, module, stack) {\n\t\tvar self = this;\n\t\tself.message = message;\n\t\tmodule && (self.module = module);\n\t\tstack && (self.stack = functionToArray(stack));\n\t\treturn self\n\t}\n\n\tfunction assignModule(id, module) {\n\t\tprovide(id, function () {\n\t\t\treturn module\n\t\t})\n\t}\n\tvar demand, provide, queue, processor, validatorIsSemver, functionMerge, functionUuid, functionDefer, singletonEvent, ClassWeakmap, ClassQueue, functionIdle, functionEscapeRegex, regexIsAbsoluteUri, regexIsAbsolutePath, regexMatchSourcemap, regexMatchBaseUrl, regexMatchInternal, regexMatchParameter, ClassSemver, singletonCache, ClassPledge, ClassRegistry, ClassDependency, ClassPattern, ClassXhr, ClassProcessor, handlerModule, handlerBundle, handlerComponent, pluginGenie, document = global.document,\n\t\toptions = \"demand\" in global && global.demand,\n\t\tsettings = {\n\t\t\tversion: \"1.0.0\",\n\t\t\tcache: {},\n\t\t\ttimeout: 8e3,\n\t\t\tpattern: {},\n\t\t\tmodules: {},\n\t\t\thandler: \"module\"\n\t\t},\n\t\tDEMAND_ID = \"demand\",\n\t\tPROVIDE_ID = \"provide\",\n\t\tPATH_ID = \"path\",\n\t\tMODULE_PREFIX = \"/\" + DEMAND_ID + \"/\",\n\t\tMODULE_PREFIX_ABSTRACT = MODULE_PREFIX + \"abstract/\",\n\t\tMODULE_PREFIX_HANDLER = MODULE_PREFIX + \"handler/\",\n\t\tMODULE_PREFIX_PLUGIN = MODULE_PREFIX + \"plugin/\",\n\t\tMODULE_PREFIX_FUNCTION = MODULE_PREFIX + \"function/\",\n\t\tMODULE_PREFIX_VALIDATOR = MODULE_PREFIX + \"validator/\",\n\t\tMOCK_PREFIX = \"mock:\",\n\t\tNULL = null,\n\t\tUNDEFINED = void 0,\n\t\tFALSE = false,\n\t\tTRUE = true,\n\t\tSTRING_UNDEFINED = \"undefined\",\n\t\tSTRING_STRING = \"string\",\n\t\tSTRING_BOOLEAN = \"boolean\",\n\t\tSTRING_OBJECT = \"object\",\n\t\tSTRING_FUNCTION = \"function\",\n\t\tSTRING_NUMBER = \"number\",\n\t\tEVENT_PREFIX = \"pre\",\n\t\tEVENT_POSTFIX = \"post\",\n\t\tEVENT_CONFIGURE = \"Configure\",\n\t\tEVENT_PRE_CONFIGURE = EVENT_PREFIX + EVENT_CONFIGURE,\n\t\tEVENT_POST_CONFIGURE = EVENT_POSTFIX + EVENT_CONFIGURE,\n\t\tEVENT_CACHE = \"cache\",\n\t\tEVENT_CACHE_MISS = EVENT_CACHE + \"Miss\",\n\t\tEVENT_CACHE_HIT = EVENT_CACHE + \"Hit\",\n\t\tEVENT_CACHE_CLEAR = EVENT_CACHE + \"Clear\",\n\t\tEVENT_CACHE_EXCEED = EVENT_CACHE + \"Exceed\",\n\t\tEVENT_PRE_CACHE = EVENT_PREFIX + \"Cache\",\n\t\tEVENT_POST_CACHE = EVENT_POSTFIX + \"Cache\",\n\t\tEVENT_RESOLVE = \"Resolve\",\n\t\tEVENT_PRE_RESOLVE = EVENT_PREFIX + EVENT_RESOLVE,\n\t\tEVENT_POST_RESOLVE = EVENT_POSTFIX + EVENT_RESOLVE,\n\t\tEVENT_REQUEST = \"Request\",\n\t\tEVENT_PRE_REQUEST = EVENT_PREFIX + EVENT_REQUEST,\n\t\tEVENT_POST_REQUEST = EVENT_POSTFIX + EVENT_REQUEST,\n\t\tEVENT_PROCESS = \"Process\",\n\t\tEVENT_PRE_PROCESS = EVENT_PREFIX + EVENT_PROCESS,\n\t\tEVENT_POST_PROCESS = EVENT_POSTFIX + EVENT_PROCESS,\n\t\tEVENT_QUEUE = \"queue\",\n\t\tEVENT_QUEUE_ENQUEUE = EVENT_QUEUE + \"Enqueue\",\n\t\tEVENT_QUEUE_DEQUEUE = EVENT_QUEUE + \"Dequeue\",\n\t\tERROR_LOAD = \"error loading\",\n\t\tERROR_PROVIDE = \"error providing\",\n\t\tERROR_RESOLVE = \"error resolving\",\n\t\tERROR_PROVIDE_ANONYMOUS = \"unspecified anonymous provide\",\n\t\tarrayPrototype = Array.prototype,\n\t\tarrayPrototypeSlice = arrayPrototype.slice,\n\t\tarrayPrototypeConcat = arrayPrototype.concat,\n\t\tobject = Object,\n\t\tobjectPrototypeToString = object.prototype.toString,\n\t\tobjectCreate = object.create,\n\t\tobjectDefineProperty = object.defineProperty,\n\t\tobjectGetOwnPropertyNames = object.getOwnPropertyNames,\n\t\tobjectGetOwnPropertyDescriptor = object.getOwnPropertyDescriptor,\n\t\tlinkElement = document.createElement(\"a\");\n\t(function (strPrototype) {\n\t\tfunction objectDefine(name, value, writable, configurable, enumerable) {\n\t\t\tobjectDefineProperty(this, name, new ClassDescriptor(value, writable, configurable, enumerable))\n\t\t}\n\n\t\tfunction functionExtends(source) {\n\t\t\tfor (var property, self = this, prototype = self[strPrototype], names = objectGetOwnPropertyNames(prototype), properties = {\n\t\t\t\t\tconstructor: new ClassDescriptor(self, TRUE, TRUE)\n\t\t\t\t}, i = 0;\n\t\t\t\t(property = names[i]) && !properties[property]; i++) properties[property] = objectGetOwnPropertyDescriptor(prototype, property);\n\t\t\ttry {\n\t\t\t\tself[strPrototype] = objectCreate(source[strPrototype] || source, properties)\n\t\t\t} catch (e) {}\n\t\t\tif (self[strPrototype] === prototype) throw new TypeError(\"Unable to extend, prototype is not writable\");\n\t\t\treturn self\n\t\t}\n\t\tobjectDefine.call(Object.prototype, \"define\", objectDefine);\n\t\tobjectDefine.call(global.Object.prototype, \"define\", objectDefine);\n\t\tFunction.prototype.define(\"extends\", functionExtends);\n\t\tglobal.Function.prototype.define(\"extends\", functionExtends)\n\t})(\"prototype\");\n\tvalidatorIsSemver = function () {\n\t\tvar regexMatchSemver = /^\\bv?(?:0|[1-9]\\d*)\\.(?:0|[1-9]\\d*)\\.(?:0|[1-9]\\d*)(?:-[\\da-z-]+(?:\\.[\\da-z-]+)*)?(?:\\+[\\da-z-]+(?:\\.[\\da-z-]+)*)?\\b$/i;\n\t\treturn function (value) {\n\t\t\treturn validatorIsTypeOf(value, STRING_STRING) && regexMatchSemver.test(value)\n\t\t}\n\t}();\n\tfunctionMerge = function () {\n\t\tfunction mergeProperties(property, value) {\n\t\t\tvar targetPropertyIsObject, targetProperty = this[property];\n\t\t\tif (value !== UNDEFINED)\n\t\t\t\tif (validatorIsObject(value)) {\n\t\t\t\t\ttargetPropertyIsObject = validatorIsObject(targetProperty);\n\t\t\t\t\tif (value.length !== UNDEFINED) targetProperty = targetPropertyIsObject && targetProperty.length !== UNDEFINED ? targetProperty : [];\n\t\t\t\t\telse targetProperty = targetPropertyIsObject && targetProperty.length === UNDEFINED ? targetProperty : {};\n\t\t\t\t\tthis[property] = functionMerge(targetProperty, value)\n\t\t\t\t} else this[property] = value\n\t\t}\n\t\treturn function () {\n\t\t\tfor (var properties, target = arguments[0], i = 1;\n\t\t\t\t(properties = arguments[i]) !== UNDEFINED; i++) functionIterate(properties, mergeProperties, target);\n\t\t\treturn target\n\t\t}\n\t}();\n\tfunctionUuid = function () {\n\t\tfunction randomize(character) {\n\t\t\tvar r = 16 * Math.random() | 0;\n\t\t\treturn (\"x\" === character ? r : 3 & r | 8)\n\t\t\t\t.toString(16)\n\t\t}\n\t\tvar regex = new RegExp(\"[xy]\", \"g\");\n\t\treturn function () {\n\t\t\treturn \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(regex, randomize)\n\t\t}\n\t}();\n\tfunctionDefer = function () {\n\t\tvar element, fallback, hasSetImmediate = \"setImmediate\" in global;\n\t\tif (\"MutationObserver\" in global) return function (fn) {\n\t\t\telement = document.createElement(\"div\");\n\t\t\tnew MutationObserver(function () {\n\t\t\t\t\tfn()\n\t\t\t\t})\n\t\t\t\t.observe(element, {\n\t\t\t\t\tattributes: TRUE\n\t\t\t\t});\n\t\t\telement.setAttribute(\"i\", \"1\")\n\t\t};\n\t\tif (!hasSetImmediate && \"postMessage\" in global && !(\"importScripts\" in global) && \"addEventListener\" in global) return function () {\n\t\t\tfunction onMessage(event) {\n\t\t\t\tvar fn;\n\t\t\t\tif (event.source === global && event.data && (fn = storage[event.data])) {\n\t\t\t\t\tfn();\n\t\t\t\t\tdelete storage[event.data]\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar storage = {};\n\t\t\tglobal.addEventListener(\"message\", onMessage, FALSE);\n\t\t\treturn function (fn) {\n\t\t\t\tvar uuid = functionUuid();\n\t\t\t\tstorage[uuid] = fn;\n\t\t\t\tglobal.postMessage(uuid, \"*\")\n\t\t\t}\n\t\t}();\n\t\tif (!hasSetImmediate && \"onreadystatechange\" in (element = document.createElement(\"script\"))) return function (fn) {\n\t\t\telement.onreadystatechange = function () {\n\t\t\t\telement.onreadystatechange = NULL;\n\t\t\t\telement.parentNode.removeChild(element);\n\t\t\t\tfn()\n\t\t\t};\n\t\t\tdocument.body.appendChild(element)\n\t\t};\n\t\tfallback = hasSetImmediate ? setImmediate : setTimeout;\n\t\treturn function (fn) {\n\t\t\tfallback(fn)\n\t\t}\n\t}();\n\tsingletonEvent = function () {\n\t\tfunction addListener(type, events, callback) {\n\t\t\tvar event, pointer;\n\t\t\tif (validatorIsTypeOf(events, STRING_STRING) && validatorIsTypeOf(callback, STRING_FUNCTION)) {\n\t\t\t\tevents = events.split(\" \");\n\t\t\t\twhile (event = events.shift()) {\n\t\t\t\t\tevent = event.split(\":\");\n\t\t\t\t\tif (regexMatchEvent.test(event[0])) {\n\t\t\t\t\t\t(listener[event[0]] || (listener[event[0]] = {\n\t\t\t\t\t\t\ton: [],\n\t\t\t\t\t\t\tafter: []\n\t\t\t\t\t\t}))[type].push({\n\t\t\t\t\t\t\tcallback: callback,\n\t\t\t\t\t\t\tfilter: event[1]\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (type === TYPE_ON && event[0] === EVENT_POST_CONFIGURE && (pointer = settings.modules[event[1]])) callback(pointer)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction Event() {}\n\t\tvar TYPE_ON = \"on\",\n\t\t\tTYPE_AFTER = \"after\",\n\t\t\tregexMatchEvent = /^cache(Miss|Hit|Clear|Exceed)|queue(En|De)queue|(pre|post)(Resolve|Configure|Request|Process|Cache)$/,\n\t\t\tlistener = {};\n\t\tEvent.prototype = {\n\t\t\temit: function (event, filter) {\n\t\t\t\tvar parameter, i, item, pointer = listener[event];\n\t\t\t\tif (pointer) {\n\t\t\t\t\tparameter = functionToArray(arguments, 2);\n\t\t\t\t\tfor (i = 0; item = pointer[TYPE_ON][i]; i++)\n\t\t\t\t\t\tif (!item.filter || item.filter === filter) item.callback.apply(NULL, parameter);\n\t\t\t\t\tfor (i = 0; item = pointer[TYPE_AFTER][i]; i++)\n\t\t\t\t\t\tif (!item.filter || item.filter === filter) item.callback.apply(NULL, parameter)\n\t\t\t\t}\n\t\t\t\treturn this\n\t\t\t},\n\t\t\ton: function (events, callback) {\n\t\t\t\taddListener(TYPE_ON, events, callback);\n\t\t\t\treturn this\n\t\t\t},\n\t\t\tafter: function (events, callback) {\n\t\t\t\taddListener(TYPE_AFTER, events, callback);\n\t\t\t\treturn this\n\t\t\t}\n\t\t};\n\t\treturn new Event\n\t}();\n\tClassWeakmap = \"WeakMap\" in global ? global.WeakMap : function () {\n\t\tfunction getEntry(context, key) {\n\t\t\tvar entry;\n\t\t\tif ((entry = key[context.id]) && entry[0] === key) return entry\n\t\t}\n\n\t\tfunction ClassWeakmap() {\n\t\t\tthis.define(\"id\", prefix + functionUuid())\n\t\t}\n\t\tvar prefix = \"weakmap-\";\n\t\tClassWeakmap.prototype = {\n\t\t\tset: function (key, value) {\n\t\t\t\tvar entry = getEntry(this, key);\n\t\t\t\tif (entry) entry[1] = value;\n\t\t\t\telse key.define(this.id, [key, value]);\n\t\t\t\treturn this\n\t\t\t},\n\t\t\tget: function (key) {\n\t\t\t\tvar entry = getEntry(this, key);\n\t\t\t\tif (entry) return entry[1]\n\t\t\t},\n\t\t\tdelete: function (key) {\n\t\t\t\tvar entry = getEntry(this, key);\n\t\t\t\tif (entry) {\n\t\t\t\t\tentry.length = 0;\n\t\t\t\t\tdelete key[this.id]\n\t\t\t\t}\n\t\t\t},\n\t\t\thas: function (key) {\n\t\t\t\treturn !!getEntry(this, key)\n\t\t\t}\n\t\t};\n\t\treturn ClassWeakmap\n\t}();\n\tClassQueue = function () {\n\t\tfunction ClassQueue() {\n\t\t\tvar self = AbstractUuid.call(this);\n\t\t\tstorage.set(self, []);\n\t\t\treturn self\n\t\t}\n\t\tvar storage = new ClassWeakmap;\n\t\tClassQueue.prototype = {\n\t\t\tenqueue: function () {\n\t\t\t\tvar items = functionToArray(arguments);\n\t\t\t\tstorage.set(this, storage.get(this)\n\t\t\t\t\t.concat(items));\n\t\t\t\tsingletonEvent.emit(EVENT_QUEUE_ENQUEUE, this.uuid, items)\n\t\t\t},\n\t\t\tdequeue: function () {\n\t\t\t\tvar item = storage.get(this)\n\t\t\t\t\t.shift();\n\t\t\t\tsingletonEvent.emit(EVENT_QUEUE_DEQUEUE, this.uuid, item);\n\t\t\t\treturn item\n\t\t\t},\n\t\t\tget current() {\n\t\t\t\treturn storage.get(this)[0]\n\t\t\t},\n\t\t\tget length() {\n\t\t\t\treturn storage.get(this)\n\t\t\t\t\t.length\n\t\t\t}\n\t\t};\n\t\treturn ClassQueue.extends(AbstractUuid)\n\t}();\n\tfunctionIdle = function () {\n\t\tfunction onVisibilitychange(event) {\n\t\t\tvar fn;\n\t\t\tif (queue.length && (\"visibilitychange\" !== event.type || \"hidden\" === document.visibilityState)) {\n\t\t\t\tglobal.removeEventListener(eventName, onVisibilitychange, TRUE);\n\t\t\t\tcurrent = cancelIdleCallback(current);\n\t\t\t\tdo {\n\t\t\t\t\tfn && fn()\n\t\t\t\t} while (fn = queue.dequeue())\n\t\t\t}\n\t\t}\n\n\t\tfunction requestIdleCallbackShim(fn) {\n\t\t\tvar start = +new Date;\n\t\t\treturn setTimeout(function () {\n\t\t\t\tfn({\n\t\t\t\t\tdidTimeout: FALSE,\n\t\t\t\t\ttimeRemaining: function () {\n\t\t\t\t\t\treturn Math.max(0, 50 - (+new Date - start))\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\n\t\tfunction cancelIdleCallbackShim(id) {\n\t\t\tclearTimeout(id)\n\t\t}\n\n\t\tfunction process() {\n\t\t\tqueue.dequeue()();\n\t\t\tqueue.length && (current = requestIdleCallback(process))\n\t\t}\n\t\tvar current, eventName = \"object\" === typeof global.safari && global.safari.pushNotification ? \"beforeunload\" : \"visibilitychange\",\n\t\t\trequestIdleCallback = global.requestIdleCallback || requestIdleCallbackShim,\n\t\t\tcancelIdleCallback = global.cancelIdleCallback || cancelIdleCallbackShim,\n\t\t\tqueue = new ClassQueue;\n\t\tglobal.addEventListener(eventName, onVisibilitychange, TRUE);\n\t\treturn function (fn) {\n\t\t\tqueue.enqueue(fn);\n\t\t\t!current && queue.length && (current = requestIdleCallback(process))\n\t\t}\n\t}();\n\tfunctionEscapeRegex = function () {\n\t\tvar regexMatchRegex = /[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;\n\t\treturn function (value) {\n\t\t\treturn value.replace(regexMatchRegex, \"\\\\$&\")\n\t\t}\n\t}();\n\tregexIsAbsoluteUri = /^(http(s?):)?\\/\\//i, regexIsAbsolutePath = /^\\//, regexMatchSourcemap = /((?:\\/\\/|\\/\\*)#)\\s*(sourceMappingURL)\\s*=\\s*(?!(?:http[s]?:)?\\/\\/)(.+?)\\.map(?:\\s+)?(\\*\\/)?/g, regexMatchBaseUrl = new RegExp(\"^\" + functionEscapeRegex(functionResolveUrl(\"/\"))), regexMatchInternal = new RegExp(\"^\" + DEMAND_ID + \"|\" + PROVIDE_ID + \"|\" + PATH_ID + \"$\"), regexMatchParameter = /^(mock:)?([+-])?((?:[-\\w]+\\/?)+)?(?:@(.+?))?(?:#(\\d+))?!/;\n\tClassSemver = function () {\n\t\tfunction parse(version) {\n\t\t\tvar temp, parts = version.split(\"-\"),\n\t\t\t\ti = 0;\n\t\t\tparts = !parts[1] ? parts[0].split(\".\") : Array.prototype.concat(parts[0].split(\".\"), parts[1].split(\".\"));\n\t\t\tfor (; temp = parts[i]; i++) parts[i] = parseInt(temp, 10)\n\t\t\t\t.toString() === temp ? parseInt(temp, 10) : temp;\n\t\t\treturn parts\n\t\t}\n\n\t\tfunction compareLevel(a, b) {\n\t\t\treturn a < b ? -1 : a > b ? 1 : 0\n\t\t}\n\n\t\tfunction compareIdentifier(a, b) {\n\t\t\tvar pa, pb, tpa, tpb, i = 0;\n\t\t\tif (a.length && !b.length) return -1;\n\t\t\telse if (!a.length && b.length) return 1;\n\t\t\telse if (!a.length && !b.length) return 0;\n\t\t\tdo {\n\t\t\t\tpa = a[i];\n\t\t\t\ttpb = typeof (pb = b[i]);\n\t\t\t\tif ((tpa = typeof pa) === STRING_UNDEFINED && tpb === STRING_UNDEFINED) return 0;\n\t\t\t\telse if (tpb === STRING_UNDEFINED) return 1;\n\t\t\t\telse if (tpa === STRING_UNDEFINED) return -1;\n\t\t\t\telse if (pa === pb);\n\t\t\t\telse if (tpa === STRING_STRING && tpb !== STRING_STRING) return 1;\n\t\t\t\telse if (tpa !== STRING_STRING && tpb === STRING_STRING) return -1;\n\t\t\t\telse if (pa > pb) return 1;\n\t\t\t\telse if (pa < pb) return -1\n\t\t\t} while (++i)\n\t\t}\n\n\t\tfunction ClassSemver(version) {\n\t\t\tif (!validatorIsSemver(version)) throw new TypeError('\"version\" must be a valid semver version string');\n\t\t\tversion = parse(version);\n\t\t\tthis.major = version.slice(0, 1);\n\t\t\tthis.minor = version.slice(1, 2);\n\t\t\tthis.patch = version.slice(2, 3);\n\t\t\tthis.identifier = version.slice(3)\n\t\t}\n\t\tClassSemver.prototype = {\n\t\t\ttoString: function () {\n\t\t\t\treturn this.major + \".\" + this.minor + \".\" + this.patch + (this.identifier.length ? \"-\" + this.identifier.join(\".\") : \"\")\n\t\t\t},\n\t\t\tcompare: function (version) {\n\t\t\t\treturn compareLevel(this.major, version.major) || compareLevel(this.minor, version.minor) || compareLevel(this.patch, version.patch) || compareIdentifier(this.identifier, version.identifier)\n\t\t\t}\n\t\t};\n\t\treturn ClassSemver\n\t}();\n\tsingletonCache = function () {\n\t\tfunction enabled(dependency) {\n\t\t\tvar match;\n\t\t\tif (dependency.cache !== NULL) return dependency.cache;\n\t\t\tfunctionIterate(settings.cache, function (property, value) {\n\t\t\t\tif (0 === dependency.path.indexOf(property) && (!match || value.weight > match.weight)) match = value\n\t\t\t});\n\t\t\treturn match ? match.state : FALSE\n\t\t}\n\n\t\tfunction getKey(key) {\n\t\t\treturn localStorage.getItem(key)\n\t\t}\n\n\t\tfunction setKey(key, value) {\n\t\t\tlocalStorage[value ? \"setItem\" : \"removeItem\"](key, value)\n\t\t}\n\n\t\tfunction getState(key) {\n\t\t\tvar matches, state = getKey(key);\n\t\t\tif (state && (matches = state.match(regexMatchProperties))) return functionToArray(matches, 1)\n\t\t}\n\n\t\tfunction setState(key, state) {\n\t\t\tstate[4] = functionGetTimestamp();\n\t\t\tsetKey(key, state.join(\",\"))\n\t\t}\n\n\t\tfunction emit(event, dependency, state) {\n\t\t\tsingletonEvent.emit(event, dependency.id, dependency, state)\n\t\t}\n\n\t\tfunction Cache() {\n\t\t\tfunctionIdle(this.clear.expired.bind(this.clear))\n\t\t}\n\t\tvar cache, STORAGE_PREFIX = \"[\" + DEMAND_ID + \"]\",\n\t\t\tSTORAGE_SUFFIX_STATE = \"[state]\",\n\t\t\tSTORAGE_SUFFIX_VALUE = \"[value]\",\n\t\t\tregexMatchState = new RegExp(\"^\" + functionEscapeRegex(STORAGE_PREFIX) + \"\\\\[(.+?)\\\\]\" + functionEscapeRegex(STORAGE_SUFFIX_STATE) + \"$\"),\n\t\t\tregexMatchProperties = /^(.+?),(\\d+),(\\d*),(.+?),(\\d+)$/,\n\t\t\tsupportsLocalStorage = function () {\n\t\t\t\ttry {\n\t\t\t\t\treturn \"localStorage\" in global && global.localStorage\n\t\t\t\t} catch (exception) {\n\t\t\t\t\treturn FALSE\n\t\t\t\t}\n\t\t\t}(),\n\t\t\tlocalStorage = supportsLocalStorage ? global.localStorage : NULL,\n\t\t\tsupportsRemainingSpace = supportsLocalStorage && \"remainingSpace\" in localStorage,\n\t\t\tstorage = {};\n\t\tsingletonEvent.on(EVENT_CACHE_MISS, function (dependency) {\n\t\t\t\tfunctionIdle(function () {\n\t\t\t\t\tcache.clear(dependency.id)\n\t\t\t\t})\n\t\t\t})\n\t\t\t.on(EVENT_CACHE_EXCEED, function (dependency) {\n\t\t\t\tdemand(\"-!/\" + DEMAND_ID + \"/cache/dispose\")\n\t\t\t\t\t.then(function (cacheDispose) {\n\t\t\t\t\t\tfunctionIdle(function () {\n\t\t\t\t\t\t\tcacheDispose(dependency.source.length);\n\t\t\t\t\t\t\tcache.set(dependency)\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t})\n\t\t\t.on(EVENT_POST_REQUEST, function (dependency) {\n\t\t\t\tif (dependency.source && enabled(dependency)) storage[dependency.id] = TRUE\n\t\t\t})\n\t\t\t.after(EVENT_POST_PROCESS, function (dependency) {\n\t\t\t\tif (storage[dependency.id]) functionIdle(function () {\n\t\t\t\t\tcache.set(dependency)\n\t\t\t\t})\n\t\t\t});\n\t\tCache.prototype = {\n\t\t\tget: supportsLocalStorage ? function (dependency) {\n\t\t\t\tvar id, state;\n\t\t\t\tif (enabled(dependency)) {\n\t\t\t\t\tid = STORAGE_PREFIX + \"[\" + dependency.id + \"]\";\n\t\t\t\t\tif (!(state = getState(id + STORAGE_SUFFIX_STATE))) return;\n\t\t\t\t\tif (1 === dependency.version.compare(new ClassSemver(state[0])) || state[2] && dependency.lifetime && state[2] <= functionGetTimestamp()) {\n\t\t\t\t\t\tdependency.invalid = true;\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\tdependency.source = getKey(id + STORAGE_SUFFIX_VALUE);\n\t\t\t\t\tfunctionIdle(function () {\n\t\t\t\t\t\tsetState(id + STORAGE_SUFFIX_STATE, state)\n\t\t\t\t\t});\n\t\t\t\t\treturn TRUE\n\t\t\t\t}\n\t\t\t} : function () {},\n\t\t\tresolve: supportsLocalStorage ? function (dependency) {\n\t\t\t\tif (this.get(dependency)) emit(EVENT_CACHE_HIT, dependency);\n\t\t\t\telse emit(EVENT_CACHE_MISS, dependency)\n\t\t\t} : function (dependency) {\n\t\t\t\temit(EVENT_CACHE_MISS, dependency)\n\t\t\t},\n\t\t\tset: supportsLocalStorage ? function (dependency) {\n\t\t\t\tvar state, id, spaceBefore;\n\t\t\t\tif (enabled(dependency)) {\n\t\t\t\t\tstate = [dependency.version, dependency.source.length, dependency.lifetime ? functionGetTimestamp() + dependency.lifetime : NULL, demand.version];\n\t\t\t\t\tid = STORAGE_PREFIX + \"[\" + dependency.id + \"]\";\n\t\t\t\t\temit(EVENT_PRE_CACHE, dependency, state);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tspaceBefore = supportsRemainingSpace ? localStorage.remainingSpace : NULL;\n\t\t\t\t\t\tsetKey(id + STORAGE_SUFFIX_VALUE, dependency.source);\n\t\t\t\t\t\tsetState(id + STORAGE_SUFFIX_STATE, state);\n\t\t\t\t\t\tif (spaceBefore !== NULL && localStorage.remainingSpace === spaceBefore) throw new Error;\n\t\t\t\t\t\temit(EVENT_POST_CACHE, dependency, state)\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\temit(EVENT_CACHE_EXCEED, dependency)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} : function () {},\n\t\t\tclear: supportsLocalStorage ? function (path) {\n\t\t\t\tvar id = functionResolveId(path),\n\t\t\t\t\tkey = STORAGE_PREFIX + \"[\" + id + \"]\";\n\t\t\t\tif (getKey(key + STORAGE_SUFFIX_STATE)) {\n\t\t\t\t\tsetKey(key + STORAGE_SUFFIX_STATE);\n\t\t\t\t\tsetKey(key + STORAGE_SUFFIX_VALUE);\n\t\t\t\t\temit(EVENT_CACHE_CLEAR, ClassDependency.get(id) || new ClassDependency(id, NULL, FALSE))\n\t\t\t\t}\n\t\t\t} : function () {}\n\t\t};\n\t\tCache.prototype.clear.all = supportsLocalStorage ? function () {\n\t\t\tvar match;\n\t\t\tfunctionIterate(localStorage, function (property) {\n\t\t\t\t(match = property.match(regexMatchState)) && this(match[1])\n\t\t\t}, this)\n\t\t} : function () {};\n\t\tCache.prototype.clear.expired = supportsLocalStorage ? function () {\n\t\t\tvar match, state;\n\t\t\tfunctionIterate(localStorage, function (property) {\n\t\t\t\tif (match = property.match(regexMatchState))\n\t\t\t\t\tif ((state = getState(STORAGE_PREFIX + \"[\" + match[1] + \"]\" + STORAGE_SUFFIX_STATE)) && state[2] > 0 && state[2] <= functionGetTimestamp()) this(match[1])\n\t\t\t}, this)\n\t\t} : function () {};\n\t\treturn cache = new Cache\n\t}();\n\tClassPledge = function () {\n\t\tfunction resolve() {\n\t\t\tstorage.get(this)\n\t\t\t\t.handle(PLEDGE_RESOLVED, arguments)\n\t\t}\n\n\t\tfunction reject() {\n\t\t\tstorage.get(this)\n\t\t\t\t.handle(PLEDGE_REJECTED, arguments)\n\t\t}\n\n\t\tfunction handle(state, parameter) {\n\t\t\tvar pointer, result, properties = storage.get(this);\n\t\t\tif (properties.state === PLEDGE_PENDING) {\n\t\t\t\tproperties.state = state;\n\t\t\t\tproperties.value = parameter\n\t\t\t}\n\t\t\twhile (pointer = properties[properties.state].shift())\n\t\t\t\tif ((result = pointer.handler.apply(NULL, properties.value)) && \"function\" === typeof result.then) result.then(pointer.dfd.resolve, pointer.dfd.reject);\n\t\t\t\telse pointer.dfd[properties.state === PLEDGE_RESOLVED ? \"resolve\" : \"reject\"].apply(NULL, properties.value);\n\t\t\tproperties[PLEDGE_RESOLVED].length = 0;\n\t\t\tproperties[PLEDGE_REJECTED].length = 0\n\t\t}\n\n\t\tfunction observe(pledge, index, properties) {\n\t\t\tpledge.then(function () {\n\t\t\t\tproperties.resolved[index] = functionToArray(arguments);\n\t\t\t\tproperties.count++;\n\t\t\t\tcheck(properties)\n\t\t\t}, function () {\n\t\t\t\tproperties.rejected.push(functionToArray(arguments));\n\t\t\t\tcheck(properties)\n\t\t\t})\n\t\t}\n\n\t\tfunction check(properties) {\n\t\t\tif (properties.count === properties.total) properties.dfd.resolve.apply(NULL, arrayPrototypeConcat.apply([], properties.resolved));\n\t\t\telse if (properties.rejected.length + properties.count === properties.total) properties.dfd.reject.apply(NULL, arrayPrototypeConcat.apply([], properties.rejected))\n\t\t}\n\n\t\tfunction ClassPledge(executor) {\n\t\t\tvar self = this;\n\t\t\tstorage.set(self, {\n\t\t\t\tstate: PLEDGE_PENDING,\n\t\t\t\thandle: handle.bind(self),\n\t\t\t\tvalue: NULL,\n\t\t\t\tresolved: [],\n\t\t\t\trejected: [],\n\t\t\t\tcount: 0\n\t\t\t});\n\t\t\texecutor(resolve.bind(self), reject.bind(self));\n\t\t\treturn self\n\t\t}\n\t\tvar PLEDGE_PENDING = \"pending\",\n\t\t\tPLEDGE_RESOLVED = \"resolved\",\n\t\t\tPLEDGE_REJECTED = \"rejected\",\n\t\t\tstorage = new ClassWeakmap;\n\t\tClassPledge.prototype = {\n\t\t\tcatch: function (listener) {\n\t\t\t\treturn this.then(function () {}, listener)\n\t\t\t},\n\t\t\talways: function (alwaysListener) {\n\t\t\t\treturn this.then(alwaysListener, alwaysListener)\n\t\t\t},\n\t\t\tthen: function (resolveListener, rejectListener) {\n\t\t\t\tvar properties = storage.get(this),\n\t\t\t\t\tdfd = ClassPledge.defer();\n\t\t\t\tresolveListener && properties[PLEDGE_RESOLVED].push({\n\t\t\t\t\thandler: resolveListener,\n\t\t\t\t\tdfd: dfd\n\t\t\t\t});\n\t\t\t\trejectListener && properties[PLEDGE_REJECTED].push({\n\t\t\t\t\thandler: rejectListener,\n\t\t\t\t\tdfd: dfd\n\t\t\t\t});\n\t\t\t\tif (properties.state !== PLEDGE_PENDING) functionDefer(properties.handle);\n\t\t\t\treturn dfd.pledge\n\t\t\t},\n\t\t\tisPending: function () {\n\t\t\t\treturn storage.get(this)\n\t\t\t\t\t.state === PLEDGE_PENDING\n\t\t\t},\n\t\t\tisResolved: function () {\n\t\t\t\treturn storage.get(this)\n\t\t\t\t\t.state === PLEDGE_RESOLVED\n\t\t\t},\n\t\t\tisRejected: function () {\n\t\t\t\treturn storage.get(this)\n\t\t\t\t\t.state === PLEDGE_REJECTED\n\t\t\t}\n\t\t};\n\t\tClassPledge.defer = function () {\n\t\t\tvar self = {};\n\t\t\tself.pledge = new ClassPledge(function (resolveListener, rejectListener) {\n\t\t\t\tself.resolve = resolveListener;\n\t\t\t\tself.reject = rejectListener\n\t\t\t});\n\t\t\treturn self\n\t\t};\n\t\tClassPledge.all = function (pledges) {\n\t\t\tvar properties, pledge, dfd = ClassPledge.defer(),\n\t\t\t\ti = 0;\n\t\t\tif (pledges.length) {\n\t\t\t\tproperties = {\n\t\t\t\t\tdfd: dfd,\n\t\t\t\t\tresolved: [],\n\t\t\t\t\trejected: [],\n\t\t\t\t\ttotal: pledges.length,\n\t\t\t\t\tcount: 0\n\t\t\t\t};\n\t\t\t\tfor (; pledge = pledges[i]; i++) observe(pledge, i, properties)\n\t\t\t} else dfd.resolve();\n\t\t\treturn dfd.pledge\n\t\t};\n\t\tClassPledge.race = function (pledges) {\n\t\t\tfor (var pledge, dfd = ClassPledge.defer(), i = 0; pledge = pledges[i]; i++) pledge.then(dfd.resolve, dfd.reject);\n\t\t\tif (!pledges.length) dfd.resolve();\n\t\t\treturn dfd.pledge\n\t\t};\n\t\treturn ClassPledge\n\t}();\n\tClassRegistry = function () {\n\t\tfunction ClassRegistry() {\n\t\t\tstorage.set(this, {})\n\t\t}\n\t\tvar storage = new ClassWeakmap;\n\t\tClassRegistry.prototype = {\n\t\t\tget: function (key) {\n\t\t\t\treturn key ? storage.get(this)[key] : storage.get(this)\n\t\t\t},\n\t\t\tset: function (key, value) {\n\t\t\t\tstorage.get(this)[key] = value\n\t\t\t},\n\t\t\tremove: function (key) {\n\t\t\t\tdelete storage.get(this)[key]\n\t\t\t}\n\t\t};\n\t\treturn ClassRegistry\n\t}();\n\tClassFailure.prototype = {\n\t\ttoString: function () {\n\t\t\tvar self = this,\n\t\t\t\tresult = DEMAND_ID + \": \" + self.message + \" \" + (self.module ? '\"' + self.module + '\"' : \"\");\n\t\t\tif (self.stack) result = ClassFailure.traverse(self.stack, result, 1);\n\t\t\treturn result\n\t\t}\n\t};\n\tClassFailure.traverse = function (stack, value, depth) {\n\t\tfor (var item, indention = new Array(depth + 1)\n\t\t\t\t.join(\" \"), i = 0; item = stack[i]; i++) {\n\t\t\tvalue += \"\\n\" + indention + \"> \" + item.message + \" \" + (item.module ? '\"' + item.module + '\"' : \"\");\n\t\t\tif (item.stack) value = ClassFailure.traverse(item.stack, value, depth + 1)\n\t\t}\n\t\treturn value\n\t};\n\tClassDependency = function () {\n\t\tfunction setProperty(property, value) {\n\t\t\tthis[property] = value\n\t\t}\n\n\t\tfunction add(id) {\n\t\t\tif (!matchInternal.test(id)) this.push(id)\n\t\t}\n\n\t\tfunction addPending(id, dependency) {\n\t\t\tif (!matchInternal.test(id) && dependency.pledge.isPending()) this.push(id)\n\t\t}\n\n\t\tfunction addResolved(id, dependency) {\n\t\t\tif (!matchInternal.test(id) && dependency.pledge.isResolved()) this.push(id)\n\t\t}\n\n\t\tfunction addRejected(id, dependency) {\n\t\t\tif (!matchInternal.test(id) && dependency.pledge.isRejected()) this.push(id)\n\t\t}\n\n\t\tfunction list() {\n\t\t\treturn functionIterate(registry.get(), add, [])\n\t\t}\n\n\t\tfunction ClassDependency(uri, context, register) {\n\t\t\tvar self = this,\n\t\t\t\tparameter = uri.match(regexMatchParameter) || placeholder;\n\t\t\tself.path = functionResolvePath(uri, context);\n\t\t\tself.mock = parameter[1] ? TRUE : FALSE;\n\t\t\tself.cache = parameter[2] ? \"+\" === parameter[1] : NULL;\n\t\t\tself.type = parameter[3] || settings.handler;\n\t\t\tself.version = new ClassSemver(parameter[4] || settings.version);\n\t\t\tself.lifetime = parameter[5] && 1e3 * parameter[5] || settings.lifetime;\n\t\t\tself.id = (self.mock ? MOCK_PREFIX : \"\") + self.type + \"!\" + self.path;\n\t\t\tself.uri = (self.mock ? MOCK_PREFIX : \"\") + self.type + \"@\" + self.version + (validatorIsPositive(self.lifetime) && self.lifetime > 0 ? \"#\" + self.lifetime : \"\") + \"!\" + self.path;\n\t\t\tself.dfd = ClassPledge.defer();\n\t\t\tself.pledge = self.dfd.pledge;\n\t\t\tself.invalid = false;\n\t\t\tself.pledge.then(function () {\n\t\t\t\tself.value = functionToArray(arguments)\n\t\t\t});\n\t\t\tregister !== FALSE && registry.set(self.id, self);\n\t\t\treturn self\n\t\t}\n\t\tvar PREFIX_INTERNAL = \"internal!\",\n\t\t\tregistry = new ClassRegistry,\n\t\t\tmatchInternal = /^(?:mock:|internal!)/i,\n\t\t\tplaceholder = [];\n\t\tlist.pending = function () {\n\t\t\treturn functionIterate(registry.get(), addPending, [])\n\t\t};\n\t\tlist.resolved = function () {\n\t\t\treturn functionIterate(registry.get(), addResolved, [])\n\t\t};\n\t\tlist.rejected = function () {\n\t\t\treturn functionIterate(registry.get(), addRejected, [])\n\t\t};\n\t\tClassDependency.prototype = {\n\t\t\tenqueue: true\n\t\t};\n\t\tClassDependency.get = function (uri, context) {\n\t\t\treturn registry.get(functionResolveId(uri, context))\n\t\t};\n\t\tClassDependency.resolve = function (uri, context) {\n\t\t\tvar value, isInternal = context && regexMatchInternal.test(uri),\n\t\t\t\tdependency = isInternal ? this.get(PREFIX_INTERNAL + context + \"/\" + uri) : this.get(uri, context);\n\t\t\tif (!dependency)\n\t\t\t\tif (isInternal) {\n\t\t\t\t\tdependency = new ClassDependency(PREFIX_INTERNAL + context + \"/\" + uri);\n\t\t\t\t\tswitch (uri) {\n\t\t\t\t\tcase DEMAND_ID:\n\t\t\t\t\t\tvalue = function () {\n\t\t\t\t\t\t\treturn functionIterate(demand, setProperty, demand.bind(context))\n\t\t\t\t\t\t}();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase PROVIDE_ID:\n\t\t\t\t\t\tvalue = provide.bind(context);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase PATH_ID:\n\t\t\t\t\t\tvalue = context\n\t\t\t\t\t}\n\t\t\t\t\tdependency.dfd.resolve(value)\n\t\t\t\t} else {\n\t\t\t\t\tdependency = new ClassDependency(uri, context);\n\t\t\t\t\tdemand(MODULE_PREFIX_HANDLER + dependency.type)\n\t\t\t\t\t\t.then(function (handler) {\n\t\t\t\t\t\t\tdependency.handler = handler;\n\t\t\t\t\t\t\tif (dependency.mock) dependency.dfd.resolve(handler);\n\t\t\t\t\t\t\telse singletonCache.resolve(dependency)\n\t\t\t\t\t\t}, function () {\n\t\t\t\t\t\t\tdependency.dfd.reject(new ClassFailure(ERROR_LOAD + \" (handler)\", self.id))\n\t\t\t\t\t\t})\n\t\t\t\t} return dependency\n\t\t};\n\t\tClassDependency.remove = function (uri, context, cache) {\n\t\t\tvar id = functionResolveId(uri, context),\n\t\t\t\tnode = document.querySelector(\"[\" + DEMAND_ID + '-id=\"' + id + '\"]');\n\t\t\tregistry.remove(id);\n\t\t\tregistry.remove(MOCK_PREFIX + id);\n\t\t\tnode && node.parentNode.removeChild(node);\n\t\t\tcache !== FALSE && singletonCache.clear(id)\n\t\t};\n\t\tClassDependency.list = list;\n\t\treturn ClassDependency\n\t}();\n\tClassPattern = function () {\n\t\tfunction setProperty(property, value) {\n\t\t\tthis[property] = {\n\t\t\t\turl: functionResolveUrl(value)\n\t\t\t\t\t.replace(regexMatchTrailingSlash, \"$1\"),\n\t\t\t\tmatch: new RegExp(\"^\" + functionEscapeRegex(value))\n\t\t\t}\n\t\t}\n\n\t\tfunction ClassPattern(pattern, url) {\n\t\t\tvar self = this;\n\t\t\tself.weight = pattern.length;\n\t\t\tself.match = new RegExp(\"^\" + functionEscapeRegex(pattern));\n\t\t\tself.location = [].concat(url);\n\t\t\tfunctionIterate(self.location, setProperty, self.location)\n\t\t}\n\t\tvar regexMatchTrailingSlash = /(.+)\\/$/;\n\t\tClassPattern.prototype = {\n\t\t\tmatches: function (path) {\n\t\t\t\treturn this.match.test(path)\n\t\t\t},\n\t\t\tprocess: function (path, index) {\n\t\t\t\tvar current = this.location[index];\n\t\t\t\tif (current) return path.replace(this.match, current.url)\n\t\t\t}\n\t\t};\n\t\treturn ClassPattern\n\t}();\n\tClassXhr = function (XMLHttpRequest) {\n\t\tfunction checkState() {\n\t\t\tif (this.readyState < 4) this.abort()\n\t\t}\n\t\tvar XDomainRequest = \"XDomainRequest\" in global && global.XDomainRequest || XMLHttpRequest;\n\t\treturn function (url) {\n\t\t\tvar pointer, dfd = ClassPledge.defer(),\n\t\t\t\txhr = regexMatchBaseUrl.test(url) ? new XMLHttpRequest : new XDomainRequest,\n\t\t\t\tboundCheckState = checkState.bind(xhr),\n\t\t\t\ttimeout = settings.timeout;\n\t\t\txhr.ontimeout = xhr.onerror = xhr.onabort = function () {\n\t\t\t\tdfd.reject(xhr.status)\n\t\t\t};\n\t\t\txhr.onprogress = xhr.onreadystatechange = function () {\n\t\t\t\tclearTimeout(pointer);\n\t\t\t\tpointer = setTimeout(boundCheckState, timeout)\n\t\t\t};\n\t\t\txhr.onload = function () {\n\t\t\t\tpointer = clearTimeout(pointer);\n\t\t\t\tif (!(\"status\" in xhr) || 200 === xhr.status) dfd.resolve(xhr.responseText, xhr.getResponseHeader && xhr.getResponseHeader(\"content-type\"));\n\t\t\t\telse dfd.reject(xhr.status)\n\t\t\t};\n\t\t\txhr.open(\"GET\", url, TRUE);\n\t\t\txhr.send();\n\t\t\tpointer = setTimeout(boundCheckState, timeout);\n\t\t\treturn dfd.pledge\n\t\t}\n\t}(XMLHttpRequest);\n\tdemand = function () {\n\t\tfunction updateCacheSettings(property, value) {\n\t\t\tthis[property] = {\n\t\t\t\tweight: property.length,\n\t\t\t\tstate: value\n\t\t\t}\n\t\t}\n\n\t\tfunction updatePatternSettings(property, value) {\n\t\t\t\"base\" !== property && (this[property] = new ClassPattern(property, value))\n\t\t}\n\n\t\tfunction updateModuleSettings(property, value) {\n\t\t\tvar temp = this[property] = this[property] || {};\n\t\t\tsingletonEvent.emit(EVENT_PRE_CONFIGURE, property, temp);\n\t\t\tfunctionMerge(temp, value);\n\t\t\tsingletonEvent.emit(EVENT_POST_CONFIGURE, property, temp)\n\t\t}\n\n\t\tfunction demand() {\n\t\t\tvar uri, dfd, result, dependencies = functionToArray(arguments),\n\t\t\t\tcontext = this !== global ? this : NULL,\n\t\t\t\ti = 0;\n\t\t\tsingletonEvent.emit(EVENT_PRE_RESOLVE, NULL, dependencies, context);\n\t\t\tfor (; uri = dependencies[i]; i++)\n\t\t\t\tif (validatorIsTypeOf(uri, STRING_STRING)) dependencies[i] = ClassDependency.resolve(uri, context)\n\t\t\t\t\t.pledge;\n\t\t\t\telse {\n\t\t\t\t\tdependencies[i] = (dfd = ClassPledge.defer())\n\t\t\t\t\t\t.pledge;\n\t\t\t\t\tdfd.resolve(uri)\n\t\t\t\t} if (dependencies.length > 1) result = ClassPledge.all(dependencies);\n\t\t\telse result = dependencies[0];\n\t\t\treturn result.always(function () {\n\t\t\t\tsingletonEvent.emit(EVENT_POST_RESOLVE, NULL, dependencies, context)\n\t\t\t})\n\t\t}\n\t\tdemand.configure = function (options) {\n\t\t\tvar cache = options.cache,\n\t\t\t\tversion = options.version,\n\t\t\t\ttimeout = options.timeout,\n\t\t\t\tlifetime = options.lifetime,\n\t\t\t\tbase = options.base,\n\t\t\t\tpattern = options.pattern,\n\t\t\t\tmodules = options.modules,\n\t\t\t\tpointer = settings.modules;\n\t\t\tif (validatorIsTypeOf(cache, STRING_BOOLEAN)) settings.cache[\"\"] = {\n\t\t\t\tweight: 0,\n\t\t\t\tstate: cache\n\t\t\t};\n\t\t\telse if (validatorIsObject(cache)) functionIterate(cache, updateCacheSettings, settings.cache);\n\t\t\tif (validatorIsSemver(version)) settings.version = version;\n\t\t\tif (validatorIsPositive(timeout)) settings.timeout = 1e3 * Math.min(Math.max(timeout, 2), 20);\n\t\t\tif (validatorIsPositive(lifetime) && lifetime > 0) settings.lifetime = 1e3 * lifetime;\n\t\t\tif (validatorIsTypeOf(base, STRING_STRING) && \"\" !== base) settings.pattern.base = new ClassPattern(\"\", base);\n\t\t\tif (validatorIsObject(pattern)) functionIterate(pattern, updatePatternSettings, settings.pattern);\n\t\t\tif (validatorIsObject(modules)) functionIterate(modules, updateModuleSettings, pointer);\n\t\t\treturn demand\n\t\t};\n\t\tdemand.version = \"5.0.5\";\n\t\tdemand.on = singletonEvent.on.bind(demand);\n\t\tdemand.get = function (uri, context) {\n\t\t\tvar dependency = ClassDependency.get(uri, context);\n\t\t\treturn dependency && dependency.value\n\t\t};\n\t\tdemand.list = ClassDependency.list;\n\t\tdemand.remove = ClassDependency.remove;\n\t\tdemand.cache = {\n\t\t\tclear: singletonCache.clear\n\t\t};\n\t\tsingletonEvent.after(EVENT_CACHE_MISS, function (dependency) {\n\t\t\t\tnew ClassLoader(dependency)\n\t\t\t})\n\t\t\t.after(EVENT_POST_REQUEST, function (dependency) {\n\t\t\t\tvar pointer = dependency.handler.onPostRequest;\n\t\t\t\tpointer && pointer(dependency)\n\t\t\t})\n\t\t\t.after(EVENT_CACHE_HIT + \" \" + EVENT_POST_REQUEST, function (dependency) {\n\t\t\t\tsingletonEvent.emit(EVENT_PRE_PROCESS, dependency.id, dependency)\n\t\t\t})\n\t\t\t.after(EVENT_PRE_REQUEST, function (dependency) {\n\t\t\t\tvar pointer = dependency.handler.onPreRequest;\n\t\t\t\tpointer && pointer(dependency)\n\t\t\t})\n\t\t\t.after(EVENT_PRE_PROCESS, function (dependency) {\n\t\t\t\tvar pointer = dependency.handler.onPreProcess;\n\t\t\t\tpointer && pointer(dependency);\n\t\t\t\tdependency.pledge.then(function () {\n\t\t\t\t\tsingletonEvent.emit(EVENT_POST_PROCESS, dependency.id, dependency)\n\t\t\t\t});\n\t\t\t\tif (true === dependency.enqueue) queue.enqueue(dependency);\n\t\t\t\telse if (validatorIsInstanceOf(dependency.enqueue, ClassPledge)) dependency.enqueue.then(function () {\n\t\t\t\t\tqueue.enqueue(dependency)\n\t\t\t\t})\n\t\t\t});\n\t\treturn demand\n\t}();\n\tglobal.define(\"demand\", demand);\n\tprovide = function () {\n\t\tvar module, isFunction, uri = validatorIsTypeOf(arguments[0], STRING_STRING) ? arguments[0] : NULL,\n\t\t\tcontext = this !== global ? this : NULL,\n\t\t\tdependencies = validatorIsArray(arguments[uri ? 1 : 0]) ? arguments[uri ? 1 : 0] : NULL,\n\t\t\tdefinition = dependencies ? arguments[uri ? 2 : 1] : arguments[uri ? 1 : 0];\n\t\tif (!uri && processor.current) {\n\t\t\turi = (module = processor.current)\n\t\t\t\t.uri;\n\t\t\tprocessor.process()\n\t\t}\n\t\tif (uri) {\n\t\t\tmodule = module || new ClassDependency(uri, context);\n\t\t\tisFunction = validatorIsTypeOf(definition, STRING_FUNCTION);\n\t\t\tif (dependencies) demand.apply(module.path, dependencies)\n\t\t\t\t.then(function () {\n\t\t\t\t\tmodule.dfd.resolve(isFunction ? definition.apply(NULL, arguments) : definition)\n\t\t\t\t}, function () {\n\t\t\t\t\tmodule.dfd.reject(new ClassFailure(ERROR_PROVIDE, module.id, arguments))\n\t\t\t\t});\n\t\t\telse module.dfd.resolve(isFunction ? definition() : definition);\n\t\t\treturn module.dfd.pledge\n\t\t} else !validatorIsTypeOf(console, STRING_UNDEFINED) && console.error(new ClassFailure(ERROR_PROVIDE_ANONYMOUS))\n\t};\n\tglobal.define(\"provide\", provide);\n\tdemand.configure({\n\t\tcache: TRUE,\n\t\tbase: \"/\",\n\t\tpattern: {\n\t\t\t\"/demand\": functionResolveUrl((options && options.url || location.href) + \"/../\")\n\t\t\t\t.slice(0, -1)\n\t\t}\n\t});\n\toptions && options.settings && demand.configure(options.settings);\n\tClassProcessor = function () {\n\t\tfunction ClassProcessor(queue) {\n\t\t\tvar self = this,\n\t\t\t\tproperties = {\n\t\t\t\t\tqueue: queue,\n\t\t\t\t\tcurrent: NULL\n\t\t\t\t};\n\t\t\tstorage.set(self, properties);\n\t\t\tdemand.on(EVENT_QUEUE_ENQUEUE + \":\" + queue.uuid, function () {\n\t\t\t\t!properties.current && self.process()\n\t\t\t})\n\t\t}\n\t\tvar storage = new ClassWeakmap;\n\t\tClassProcessor.prototype = {\n\t\t\tprocess: function () {\n\t\t\t\tvar current, properties = storage.get(this);\n\t\t\t\tif (properties.queue.length)\n\t\t\t\t\tif (!(current = properties.current = properties.queue.dequeue())\n\t\t\t\t\t\t.pledge.isRejected()) {\n\t\t\t\t\t\tcurrent.handler.process && current.handler.process(current);\n\t\t\t\t\t\treturn\n\t\t\t\t\t} properties.current = NULL\n\t\t\t},\n\t\t\tget current() {\n\t\t\t\treturn storage.get(this)\n\t\t\t\t\t.current\n\t\t\t}\n\t\t};\n\t\treturn ClassProcessor\n\t}();\n\tabstractHandler.prototype = {\n\t\tvalidate: NULL,\n\t\tonPreRequest: NULL,\n\t\tonPostRequest: NULL,\n\t\tonPreProcess: NULL,\n\t\tprocess: NULL\n\t};\n\thandlerModule = function () {\n\t\tfunction HandlerModule() {}\n\t\tvar suffix = \".js\",\n\t\t\ttarget = document.getElementsByTagName(\"head\")[0],\n\t\t\tregexMatchType = /^(application|text)\\/(x-)?javascript/;\n\t\tHandlerModule.prototype = {\n\t\t\tvalidate: function (type) {\n\t\t\t\treturn regexMatchType.test(type)\n\t\t\t},\n\t\t\tonPreRequest: function (dependency) {\n\t\t\t\tvar pathname = dependency.url.pathname;\n\t\t\t\tdependency.url.pathname = pathname.slice(-suffix.length) !== suffix ? pathname + suffix : pathname\n\t\t\t},\n\t\t\tonPostRequest: function (dependency) {\n\t\t\t\tdependency.source = functionResolveSourcemaps(dependency.url, dependency.source)\n\t\t\t},\n\t\t\tprocess: function (dependency) {\n\t\t\t\tvar script;\n\t\t\t\tif (dependency.source) {\n\t\t\t\t\t(script = document.createElement(\"script\"))\n\t\t\t\t\t.async = TRUE;\n\t\t\t\t\tscript.text = dependency.source;\n\t\t\t\t\tscript.setAttribute(DEMAND_ID + \"-id\", dependency.id);\n\t\t\t\t\ttarget.appendChild(script)\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn new(HandlerModule.extends(abstractHandler))\n\t}();\n\tClassFailure.prototype = {\n\t\ttoString: function () {\n\t\t\tvar self = this,\n\t\t\t\tresult = DEMAND_ID + \": \" + self.message + \" \" + (self.module ? '\"' + self.module + '\"' : \"\");\n\t\t\tif (self.stack) result = ClassFailure.traverse(self.stack, result, 1);\n\t\t\treturn result\n\t\t}\n\t};\n\tClassFailure.traverse = function (stack, value, depth) {\n\t\tfor (var item, indention = new Array(depth + 1)\n\t\t\t\t.join(\" \"), i = 0; item = stack[i]; i++) {\n\t\t\tvalue += \"\\n\" + indention + \"> \" + item.message + \" \" + (item.module ? '\"' + item.module + '\"' : \"\");\n\t\t\tif (item.stack) value = ClassFailure.traverse(item.stack, value, depth + 1)\n\t\t}\n\t\treturn value\n\t};\n\thandlerBundle = function () {\n\t\tfunction updateDependencies(uri, dependencies) {\n\t\t\tvar i, dependency;\n\t\t\tfor (i = 0; dependency = dependencies[i]; i++)\n\t\t\t\tif (validatorIsTypeOf(dependency, STRING_STRING)) dependencies[i] = functionResolveId(dependency)\n\t\t}\n\n\t\tfunction getType(dependencies) {\n\t\t\tfor (var type, temp, i = 0; temp = dependencies[i]; i++) {\n\t\t\t\ttemp = (temp = temp.match(regexMatchParameter)) && temp[3] || settings.handler;\n\t\t\t\tif (type) {\n\t\t\t\t\tif (temp !== type) return FALSE\n\t\t\t\t} else type = temp\n\t\t\t}\n\t\t\treturn type\n\t\t}\n\n\t\tfunction HandlerBundle() {}\n\t\tvar path = MODULE_PREFIX_HANDLER + \"bundle\",\n\t\t\tsettings = {};\n\t\tdemand.on(EVENT_POST_CONFIGURE + \":\" + path, function (options) {\n\t\t\tif (validatorIsObject(options)) functionIterate(settings = options, updateDependencies)\n\t\t});\n\t\tHandlerBundle.prototype = {\n\t\t\tvalidate: handlerModule.validate,\n\t\t\tonPreProcess: function (dependency) {\n\t\t\t\tfunction reject() {\n\t\t\t\t\tdfd.reject(new ClassFailure(ERROR_RESOLVE, dependency.id, arguments))\n\t\t\t\t}\n\t\t\t\tvar type, match, pledges, temp, i, source = dependency.source,\n\t\t\t\t\tdfd = dependency.dfd,\n\t\t\t\t\tdependencies = settings[dependency.path];\n\t\t\t\tdependency.enqueue = FALSE;\n\t\t\t\tif (dependencies && (type = getType(dependencies))) {\n\t\t\t\t\twhile (match = regexMatchSourcemap.exec(source)) source = source.replace(match[0], \"\");\n\t\t\t\t\tdependency.source = source;\n\t\t\t\t\tpledges = [];\n\t\t\t\t\tfor (i = 0; temp = dependencies[i]; i++) pledges.push(ClassDependency.resolve(MOCK_PREFIX + temp)\n\t\t\t\t\t\t.pledge);\n\t\t\t\t\tClassPledge.all(pledges)\n\t\t\t\t\t\t.then(function () {\n\t\t\t\t\t\t\tpledges.length = 0;\n\t\t\t\t\t\t\tfor (i = 0; temp = dependencies[i]; i++) {\n\t\t\t\t\t\t\t\t(temp = dependencies[i] = ClassDependency.get(temp) || new ClassDependency(temp))\n\t\t\t\t\t\t\t\t.handler = arguments[i];\n\t\t\t\t\t\t\t\tpledges.push(temp.pledge)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (\"module\" === type) {\n\t\t\t\t\t\t\t\tqueue.enqueue.apply(queue, dependencies);\n\t\t\t\t\t\t\t\thandlerModule.process(dependency)\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\thandlerModule.process(dependency);\n\t\t\t\t\t\t\t\tqueue.enqueue.apply(queue, dependencies)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tClassPledge.all(pledges)\n\t\t\t\t\t\t\t\t.then(dfd.resolve, reject)\n\t\t\t\t\t\t}, reject)\n\t\t\t\t} else reject()\n\t\t\t}\n\t\t};\n\t\treturn new(HandlerBundle.extends(abstractHandler))\n\t}();\n\thandlerComponent = function () {\n\t\tfunction HandlerComponent() {}\n\t\tvar suffix = \".html\",\n\t\t\tregexMatchType = /^text\\/.+$/;\n\t\tHandlerComponent.prototype = {\n\t\t\tvalidate: function (type) {\n\t\t\t\treturn regexMatchType.test(type)\n\t\t\t},\n\t\t\tonPreRequest: function (dependency) {\n\t\t\t\tvar pathname = dependency.url.pathname;\n\t\t\t\tdependency.url.pathname = pathname.slice(-suffix.length) !== suffix ? pathname + suffix : pathname\n\t\t\t},\n\t\t\tonPostRequest: function (dependency) {\n\t\t\t\tdependency.source = functionResolveSourcemaps(dependency.url, dependency.source)\n\t\t\t},\n\t\t\tonPreProcess: function (dependency) {\n\t\t\t\tfunction reject() {\n\t\t\t\t\tdfd.reject(new ClassFailure(ERROR_RESOLVE, dependency.id, arguments))\n\t\t\t\t}\n\t\t\t\tvar node, handler, path, uri, context = dependency.path,\n\t\t\t\t\tdfd = dependency.dfd,\n\t\t\t\t\tcontainer = document.createElement(\"body\"),\n\t\t\t\t\tmodules = [],\n\t\t\t\t\tpledges = [];\n\t\t\t\tdependency.enqueue = FALSE;\n\t\t\t\tcontainer.innerHTML = dependency.source;\n\t\t\t\twhile (node = container.firstElementChild)\n\t\t\t\t\tif (handler = node.getAttribute(\"type\")) {\n\t\t\t\t\t\turi = handler + \"!\" + context + ((path = node.getAttribute(\"path\")) ? \"/\" + path : \"\");\n\t\t\t\t\t\tnode.parentNode.removeChild(node);\n\t\t\t\t\t\tmodules.push({\n\t\t\t\t\t\t\tsource: node.textContent,\n\t\t\t\t\t\t\turi: uri\n\t\t\t\t\t\t});\n\t\t\t\t\t\tpledges.push(ClassDependency.resolve(\"mock:\" + uri)\n\t\t\t\t\t\t\t.pledge)\n\t\t\t\t\t} ClassPledge.all(pledges)\n\t\t\t\t\t.then(function () {\n\t\t\t\t\t\tvar module, dependency, i = 0;\n\t\t\t\t\t\tpledges.length = 0;\n\t\t\t\t\t\tfor (; module = modules[i]; i++) {\n\t\t\t\t\t\t\t(dependency = ClassDependency.get(module.uri) || new ClassDependency(module.uri))\n\t\t\t\t\t\t\t.source = functionResolveSourcemaps(dependency.url, module.source);\n\t\t\t\t\t\t\tdependency.handler = arguments[i];\n\t\t\t\t\t\t\tpledges.push(dependency.pledge);\n\t\t\t\t\t\t\tqueue.enqueue(dependency)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tClassPledge.all(pledges)\n\t\t\t\t\t\t\t.then(dfd.resolve, reject)\n\t\t\t\t\t}, reject)\n\t\t\t}\n\t\t};\n\t\treturn new(HandlerComponent.extends(abstractHandler))\n\t}();\n\tpluginGenie = function () {\n\t\tfunction matchPattern(path) {\n\t\t\tfor (var pointer, match, i = 0; pointer = pattern[i]; i++)\n\t\t\t\tif (0 === path.indexOf(pointer.prefix) && (!match || pointer.weight > match.weight)) match = pointer;\n\t\t\treturn match\n\t\t}\n\n\t\tfunction generateConfiguration(bundle) {\n\t\t\tvar pointer, dependency, matches = bundle.matches,\n\t\t\t\tconfiguration = {\n\t\t\t\t\tpattern: {},\n\t\t\t\t\tmodules: {\n\t\t\t\t\t\t\"/demand/handler/bundle\": {}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\ti = 0;\n\t\t\tconfiguration.pattern[bundle.id] = bundle.fn(matches);\n\t\t\tconfiguration.modules[MODULE_PREFIX_HANDLER + \"bundle\"][bundle.id] = pointer = [];\n\t\t\tfor (; dependency = matches[i]; i++) pointer.push(dependency.path);\n\t\t\treturn configuration\n\t\t}\n\n\t\tfunction resolveDependencies() {\n\t\t\tfor (var dependency, i = 0; dependency = this[i]; i++) dependency.dfd.resolve(arguments[i])\n\t\t}\n\n\t\tfunction rejectDependencies() {\n\t\t\tfor (var dependency, i = 0; dependency = this[i]; i++) dependency.dfd.reject(new ClassFailure(ERROR_RESOLVE, dependency.id))\n\t\t}\n\n\t\tfunction addPattern(property, value) {\n\t\t\tpattern.push({\n\t\t\t\tprefix: property,\n\t\t\t\tweight: property.length,\n\t\t\t\tfn: value\n\t\t\t})\n\t\t}\n\n\t\tfunction resolveBundles(property, value) {\n\t\t\tvar dependency, matches = value.matches,\n\t\t\t\ti = 0;\n\t\t\tif (matches.length > 1) {\n\t\t\t\tvalue.id = path + \"/\" + functionHash(JSON.stringify(value.matches));\n\t\t\t\tfor (; dependency = matches[i]; i++) matches[i] = new ClassDependency(dependency.uri);\n\t\t\t\tdemand.configure(generateConfiguration(value));\n\t\t\t\tdemand(\"bundle!\" + value.id)\n\t\t\t\t\t.then(resolveDependencies.bind(matches), rejectDependencies.bind(matches))\n\t\t\t}\n\t\t}\n\t\tvar path = MODULE_PREFIX_PLUGIN + \"genie\",\n\t\t\tpattern = [];\n\t\tdemand.on(EVENT_POST_CONFIGURE + \":\" + path, function (options) {\n\t\t\t\tif (validatorIsObject(options)) {\n\t\t\t\t\tpattern.length = 0;\n\t\t\t\t\tfunctionIterate(options, addPattern)\n\t\t\t\t}\n\t\t\t})\n\t\t\t.on(EVENT_PRE_RESOLVE, function (dependencies, context) {\n\t\t\t\tfor (var dependency, pattern, bundles = {}, i = 0; dependency = dependencies[i]; i++)\n\t\t\t\t\tif (validatorIsTypeOf(dependency, STRING_STRING) && !regexMatchInternal.test(dependency) && !ClassDependency.get(dependency, context))\n\t\t\t\t\t\tif (\"module\" === (dependency = new ClassDependency(dependency, context, FALSE))\n\t\t\t\t\t\t\t.type && (pattern = matchPattern(dependency.path)) && !singletonCache.get(dependency))(bundles[pattern.prefix] || (bundles[pattern.prefix] = {\n\t\t\t\t\t\t\t\tfn: pattern.fn,\n\t\t\t\t\t\t\t\tmatches: []\n\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t\t.matches.push(dependency);\n\t\t\t\tfunctionIterate(bundles, resolveBundles)\n\t\t\t});\n\t\treturn TRUE\n\t}();\n\tqueue = new ClassQueue;\n\tprocessor = new ClassProcessor(queue);\n\tassignModule(MODULE_PREFIX_ABSTRACT + \"uuid\", AbstractUuid);\n\tassignModule(MODULE_PREFIX_ABSTRACT + \"handler\", abstractHandler);\n\tassignModule(MODULE_PREFIX_HANDLER + \"module\", handlerModule);\n\tassignModule(MODULE_PREFIX_HANDLER + \"bundle\", handlerBundle);\n\tassignModule(MODULE_PREFIX_HANDLER + \"component\", handlerComponent);\n\tassignModule(MODULE_PREFIX_PLUGIN + \"genie\", pluginGenie);\n\tassignModule(MODULE_PREFIX_VALIDATOR + \"isTypeOf\", validatorIsTypeOf);\n\tassignModule(MODULE_PREFIX_VALIDATOR + \"isArray\", validatorIsArray);\n\tassignModule(MODULE_PREFIX_VALIDATOR + \"isObject\", validatorIsObject);\n\tassignModule(MODULE_PREFIX_VALIDATOR + \"isInstanceOf\", validatorIsInstanceOf);\n\tassignModule(MODULE_PREFIX_VALIDATOR + \"isSemver\", validatorIsSemver);\n\tassignModule(MODULE_PREFIX_FUNCTION + \"resolveUrl\", functionResolveUrl);\n\tassignModule(MODULE_PREFIX_FUNCTION + \"resolveSourcemaps\", functionResolveSourcemaps);\n\tassignModule(MODULE_PREFIX_FUNCTION + \"merge\", functionMerge);\n\tassignModule(MODULE_PREFIX_FUNCTION + \"iterate\", functionIterate);\n\tassignModule(MODULE_PREFIX_FUNCTION + \"hash\", functionHash);\n\tassignModule(MODULE_PREFIX_FUNCTION + \"defer\", functionDefer);\n\tassignModule(MODULE_PREFIX_FUNCTION + \"idle\", functionIdle);\n\tassignModule(MODULE_PREFIX_FUNCTION + \"uuid\", functionUuid);\n\tassignModule(MODULE_PREFIX + \"weakmap\", ClassWeakmap);\n\tassignModule(MODULE_PREFIX + \"descriptor\", ClassDescriptor);\n\tassignModule(MODULE_PREFIX + \"pledge\", ClassPledge);\n\tassignModule(MODULE_PREFIX + \"queue\", ClassQueue);\n\tassignModule(MODULE_PREFIX + \"xhr\", ClassXhr);\n\tassignModule(MODULE_PREFIX + \"failure\", ClassFailure);\n\tassignModule(MODULE_PREFIX + \"semver\", ClassSemver);\n\tif (options && options.main) switch (typeof options.main) {\n\tcase STRING_STRING:\n\t\tdemand(options.main);\n\t\tbreak;\n\tcase STRING_FUNCTION:\n\t\tprovide(\"main\", options.main())\n\t}\n})(\"demand-loader\" === this.name ? parent : this, setTimeout, clearTimeout);\n"]}