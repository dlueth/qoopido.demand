{"version":3,"sources":["demand.js"],"names":["global","setTimeout","clearTimeout","ClassDescriptor","value","writable","configurable","enumerable","__proto__","NULL","validatorIsTypeOf","object","type","validatorIsObject","STRING_OBJECT","validatorIsPositive","STRING_NUMBER","isFinite","Math","floor","validatorIsInstanceOf","module","functionIterate","source","callback","context","property","properties","keys","i","UNDEFINED","call","FALSE","functionToArray","arrayLikeObject","start","end","arrayPrototypeSlice","functionGetTimestamp","Date","functionResolveUrl","url","linkElement","href","functionResolvePath","uri","path","replace","regexMatchParameter","regexIsAbsolutePath","test","regexIsAbsoluteUri","regexMatchBaseUrl","functionResolveId","parameter","match","settings","handler","ClassFailure","message","stack","this","validatorIsArray","objectPrototypeToString","functionHash","input","length","charCodeAt","AbstractUuid","uuid","STRING_UNDEFINED","define","functionUuid","functionResolveSourcemaps","replacement","regexMatchSourcemap","exec","protocol","host","pathname","abstractHandler","assignModule","id","provide","demand","queue","processor","validatorIsSemver","functionMerge","functionDefer","singletonEvent","functionEscapeRegex","regexMatchInternal","ClassSemver","singletonCache","ClassWeakmap","ClassPledge","ClassRegistry","ClassDependency","ClassPattern","ClassXhr","ClassQueue","ClassProcessor","handlerModule","handlerBundle","handlerComponent","pluginGenie","regexMatchSemver","storage","element","fallback","hasSetImmediate","regexMatchRegex","XMLHttpRequest","XDomainRequest","document","options","version","cache","timeout","pattern","modules","DEMAND_ID","PROVIDE_ID","MODULE_PREFIX","MODULE_PREFIX_ABSTRACT","MODULE_PREFIX_HANDLER","MODULE_PREFIX_PLUGIN","MODULE_PREFIX_FUNCTION","MODULE_PREFIX_VALIDATOR","MOCK_PREFIX","TRUE","STRING_STRING","STRING_FUNCTION","EVENT_PREFIX","EVENT_POSTFIX","EVENT_CONFIGURE","EVENT_PRE_CONFIGURE","EVENT_POST_CONFIGURE","EVENT_CACHE","EVENT_CACHE_MISS","EVENT_CACHE_HIT","EVENT_CACHE_EXCEED","EVENT_RESOLVE","EVENT_PRE_RESOLVE","EVENT_POST_RESOLVE","EVENT_REQUEST","EVENT_PRE_REQUEST","EVENT_POST_REQUEST","EVENT_PROCESS","EVENT_PRE_PROCESS","EVENT_POST_PROCESS","EVENT_QUEUE_ENQUEUE","EVENT_QUEUE","ERROR_LOAD","ERROR_RESOLVE","arrayPrototype","Array","prototype","slice","arrayPrototypeConcat","concat","Object","toString","objectCreate","create","objectDefineProperty","defineProperty","objectGetOwnPropertyNames","getOwnPropertyNames","objectGetOwnPropertyDescriptor","getOwnPropertyDescriptor","createElement","strPrototype","objectDefine","name","functionExtends","self","names","constructor","e","TypeError","Function","mergeProperties","targetPropertyIsObject","targetProperty","target","arguments","randomize","character","r","random","regex","RegExp","fn","MutationObserver","observe","attributes","setAttribute","addEventListener","event","data","postMessage","onreadystatechange","parentNode","removeChild","body","appendChild","setImmediate","addListener","events","pointer","split","shift","regexMatchEvent","listener","on","after","push","filter","TYPE_ON","Event","emit","item","apply","compareLevel","a","b","temp","parts","parseInt","parse","major","minor","patch","identifier","join","compare","pa","pb","tpa","tpb","compareIdentifier","enabled","dependency","indexOf","weight","state","getKey","key","localStorage","getItem","setKey","getState","matches","regexMatchProperties","setState","Cache","clear","expired","bind","STORAGE_PREFIX","STORAGE_SUFFIX_STATE","STORAGE_SUFFIX_VALUE","regexMatchState","supportsLocalStorage","exception","supportsRemainingSpace","then","cacheDispose","set","get","lifetime","invalid","resolve","spaceBefore","remainingSpace","Error","error","all","WeakMap","getEntry","entry","prefix","delete","has","pledge","index","resolved","count","check","rejected","total","dfd","reject","executor","PLEDGE_PENDING","handle","result","PLEDGE_RESOLVED","PLEDGE_REJECTED","catch","always","alwaysListener","resolveListener","rejectListener","defer","isPending","isResolved","isRejected","pledges","race","remove","traverse","depth","indention","setProperty","add","matchInternal","addPending","addResolved","addRejected","list","registry","register","placeholder","mock","PREFIX_INTERNAL","pending","enqueue","isInternal","node","querySelector","regexMatchTrailingSlash","location","process","current","xhr","boundCheckState","readyState","abort","ontimeout","onerror","onabort","status","onprogress","onload","responseText","getResponseHeader","open","send","updateCacheSettings","updatePatternSettings","updateModuleSettings","dependencies","configure","base","min","max","response","validate","regexMatchEmptySearch","load","search","onPostRequest","onPreRequest","onPreProcess","isFunction","definition","console","/demand","dequeue","extends","HandlerModule","getElementsByTagName","regexMatchType","script","async","text","updateDependencies","HandlerBundle","getType","HandlerComponent","suffix","container","innerHTML","firstElementChild","getAttribute","textContent","matchPattern","addPattern","resolveBundles","JSON","stringify","bundle","configuration","/demand/handler/bundle","generateConfiguration","bundles","main","parent"],"mappings":"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","file":"demand.js","sourcesContent":["/**! Qoopido.demand 5.0.3 | https://github.com/dlueth/qoopido.demand | (c) 2018 Dirk Lueth */\n(function (global, setTimeout, clearTimeout) {\n\t\"use strict\";\n\n\tfunction ClassDescriptor(value, writable, configurable, enumerable) {\n\t\treturn {\n\t\t\t__proto__: NULL,\n\t\t\tvalue: value,\n\t\t\tenumerable: !!enumerable,\n\t\t\tconfigurable: !!configurable,\n\t\t\twritable: !!writable\n\t\t}\n\t}\n\n\tfunction validatorIsTypeOf(object, type) {\n\t\treturn typeof object === type\n\t}\n\n\tfunction validatorIsObject(object) {\n\t\treturn object && validatorIsTypeOf(object, STRING_OBJECT)\n\t}\n\n\tfunction validatorIsPositive(value) {\n\t\treturn validatorIsTypeOf(value, STRING_NUMBER) && isFinite(value) && Math.floor(value) === value && value >= 0\n\t}\n\n\tfunction validatorIsInstanceOf(object, module) {\n\t\treturn object instanceof module\n\t}\n\n\tfunction functionIterate(source, callback, context) {\n\t\tfor (var property, properties = object.keys(source), i = 0;\n\t\t\t(property = properties[i]) !== UNDEFINED; i++)\n\t\t\tif (callback.call(context, property, source[property]) === FALSE) break;\n\t\treturn context\n\t}\n\n\tfunction functionToArray(arrayLikeObject, start, end) {\n\t\treturn arrayPrototypeSlice.call(arrayLikeObject, start, end)\n\t}\n\n\tfunction functionGetTimestamp() {\n\t\treturn +new Date\n\t}\n\n\tfunction functionResolveUrl(url) {\n\t\tlinkElement.href = url;\n\t\treturn linkElement.href\n\t}\n\n\tfunction functionResolvePath(uri, context) {\n\t\tvar path = uri.replace(regexMatchParameter, \"\");\n\t\tif (!regexIsAbsolutePath.test(path) && !regexIsAbsoluteUri.test(path)) path = \"/\" + functionResolveUrl((context && functionResolveUrl(context + \"/../\") || \"/\") + path)\n\t\t\t.replace(regexMatchBaseUrl, \"\");\n\t\treturn path\n\t}\n\n\tfunction functionResolveId(uri, context) {\n\t\tvar parameter = uri.match(regexMatchParameter);\n\t\treturn (parameter && parameter[1] ? \"mock:\" : \"\") + (parameter && parameter[3] || settings.handler) + \"!\" + functionResolvePath(uri, context)\n\t}\n\n\tfunction ClassFailure(message, module, stack) {\n\t\tvar self = this;\n\t\tself.message = message;\n\t\tmodule && (self.module = module);\n\t\tstack && (self.stack = functionToArray(stack));\n\t\treturn self\n\t}\n\n\tfunction ClassLoader(dependency) {\n\t\tfunction resolve(response, type) {\n\t\t\tif (!type || !dependency.handler.validate || dependency.handler.validate(type)) {\n\t\t\t\tdependency.source = response;\n\t\t\t\tsingletonEvent.emit(EVENT_POST_REQUEST, dependency.type, dependency)\n\t\t\t} else dependency.dfd.reject(new ClassFailure(ERROR_LOAD + \" (content-type)\", dependency.id))\n\t\t}\n\n\t\tfunction reject(status) {\n\t\t\tdependency.dfd.reject(new ClassFailure(ERROR_LOAD + (status ? \" (status)\" : \"\"), dependency.id))\n\t\t}\n\n\t\tfunction load(location) {\n\t\t\tlocation = location || 0;\n\t\t\tdependency.url = document.createElement(\"a\");\n\t\t\tdependency.url.href = pattern ? functionResolveUrl(pattern.process(dependency.path, location)) : dependency.path;\n\t\t\tif (dependency.invalid) dependency.url.search += (regexMatchEmptySearch.test(dependency.url.search) ? \"\" : \"&\") + functionGetTimestamp();\n\t\t\tsingletonEvent.emit(EVENT_PRE_REQUEST, dependency.type, dependency);\n\t\t\tnew ClassXhr(dependency.url)\n\t\t\t\t.then(resolve, pattern ? function () {\n\t\t\t\t\tlocation++;\n\t\t\t\t\tif (pattern.location[location]) load(location);\n\t\t\t\t\telse reject()\n\t\t\t\t} : reject)\n\t\t}\n\t\tvar pattern, regexMatchEmptySearch = /^(?:\\?|)$/;\n\t\tif (!regexIsAbsoluteUri.test(dependency.path)) functionIterate(settings.pattern, function (property, value) {\n\t\t\tvalue.matches(dependency.path) && (!pattern || pattern.weight < value.weight) && (pattern = value)\n\t\t});\n\t\tload()\n\t}\n\n\tfunction validatorIsArray(value) {\n\t\treturn \"[object Array]\" === objectPrototypeToString.call(value)\n\t}\n\n\tfunction functionHash(input) {\n\t\tvar value = 5381,\n\t\t\ti = input.length;\n\t\twhile (i) value = 33 * value ^ input.charCodeAt(--i);\n\t\treturn value >>> 0\n\t}\n\n\tfunction AbstractUuid() {\n\t\tif (validatorIsTypeOf(this.uuid, STRING_UNDEFINED)) this.define(\"uuid\", functionUuid());\n\t\treturn this\n\t}\n\n\tfunction functionResolveSourcemaps(url, source) {\n\t\tvar match, replacement;\n\t\twhile (match = regexMatchSourcemap.exec(source)) {\n\t\t\tlinkElement.href = url;\n\t\t\tif (regexIsAbsoluteUri.test(match[2])) replacement = linkElement.protocol + \"//\" + linkElement.host + match[3];\n\t\t\telse {\n\t\t\t\tlinkElement.pathname += \"/../\" + match[3];\n\t\t\t\treplacement = linkElement.protocol + \"//\" + linkElement.host + linkElement.pathname\n\t\t\t}\n\t\t\tsource = source.replace(match[0], match[1] + \" \" + match[2] + \"=\" + replacement + \".map\" + (match[4] ? \" \" + match[4] : \"\"))\n\t\t}\n\t\treturn source\n\t}\n\n\tfunction abstractHandler() {}\n\n\tfunction ClassFailure(message, module, stack) {\n\t\tvar self = this;\n\t\tself.message = message;\n\t\tmodule && (self.module = module);\n\t\tstack && (self.stack = functionToArray(stack));\n\t\treturn self\n\t}\n\n\tfunction assignModule(id, module) {\n\t\tprovide(id, function () {\n\t\t\treturn module\n\t\t})\n\t}\n\tvar demand, provide, queue, processor, validatorIsSemver, functionMerge, functionUuid, functionDefer, singletonEvent, functionEscapeRegex, regexIsAbsoluteUri, regexIsAbsolutePath, regexMatchSourcemap, regexMatchBaseUrl, regexMatchInternal, regexMatchParameter, ClassSemver, singletonCache, ClassWeakmap, ClassPledge, ClassRegistry, ClassDependency, ClassPattern, ClassXhr, ClassQueue, ClassProcessor, handlerModule, handlerBundle, handlerComponent, pluginGenie, document = global.document,\n\t\toptions = \"demand\" in global && global.demand,\n\t\tsettings = {\n\t\t\tversion: \"1.0.0\",\n\t\t\tcache: {},\n\t\t\ttimeout: 8e3,\n\t\t\tpattern: {},\n\t\t\tmodules: {},\n\t\t\thandler: \"module\"\n\t\t},\n\t\tDEMAND_ID = \"demand\",\n\t\tPROVIDE_ID = \"provide\",\n\t\tPATH_ID = \"path\",\n\t\tMODULE_PREFIX = \"/\" + DEMAND_ID + \"/\",\n\t\tMODULE_PREFIX_ABSTRACT = MODULE_PREFIX + \"abstract/\",\n\t\tMODULE_PREFIX_HANDLER = MODULE_PREFIX + \"handler/\",\n\t\tMODULE_PREFIX_PLUGIN = MODULE_PREFIX + \"plugin/\",\n\t\tMODULE_PREFIX_FUNCTION = MODULE_PREFIX + \"function/\",\n\t\tMODULE_PREFIX_VALIDATOR = MODULE_PREFIX + \"validator/\",\n\t\tMOCK_PREFIX = \"mock:\",\n\t\tNULL = null,\n\t\tUNDEFINED = void 0,\n\t\tFALSE = false,\n\t\tTRUE = true,\n\t\tSTRING_UNDEFINED = \"undefined\",\n\t\tSTRING_STRING = \"string\",\n\t\tSTRING_BOOLEAN = \"boolean\",\n\t\tSTRING_OBJECT = \"object\",\n\t\tSTRING_FUNCTION = \"function\",\n\t\tSTRING_NUMBER = \"number\",\n\t\tEVENT_PREFIX = \"pre\",\n\t\tEVENT_POSTFIX = \"post\",\n\t\tEVENT_CONFIGURE = \"Configure\",\n\t\tEVENT_PRE_CONFIGURE = EVENT_PREFIX + EVENT_CONFIGURE,\n\t\tEVENT_POST_CONFIGURE = EVENT_POSTFIX + EVENT_CONFIGURE,\n\t\tEVENT_CACHE = \"cache\",\n\t\tEVENT_CACHE_MISS = EVENT_CACHE + \"Miss\",\n\t\tEVENT_CACHE_HIT = EVENT_CACHE + \"Hit\",\n\t\tEVENT_CACHE_CLEAR = EVENT_CACHE + \"Clear\",\n\t\tEVENT_CACHE_EXCEED = EVENT_CACHE + \"Exceed\",\n\t\tEVENT_PRE_CACHE = EVENT_PREFIX + \"Cache\",\n\t\tEVENT_POST_CACHE = EVENT_POSTFIX + \"Cache\",\n\t\tEVENT_RESOLVE = \"Resolve\",\n\t\tEVENT_PRE_RESOLVE = EVENT_PREFIX + EVENT_RESOLVE,\n\t\tEVENT_POST_RESOLVE = EVENT_POSTFIX + EVENT_RESOLVE,\n\t\tEVENT_REQUEST = \"Request\",\n\t\tEVENT_PRE_REQUEST = EVENT_PREFIX + EVENT_REQUEST,\n\t\tEVENT_POST_REQUEST = EVENT_POSTFIX + EVENT_REQUEST,\n\t\tEVENT_PROCESS = \"Process\",\n\t\tEVENT_PRE_PROCESS = EVENT_PREFIX + EVENT_PROCESS,\n\t\tEVENT_POST_PROCESS = EVENT_POSTFIX + EVENT_PROCESS,\n\t\tEVENT_QUEUE = \"queue\",\n\t\tEVENT_QUEUE_ENQUEUE = EVENT_QUEUE + \"Enqueue\",\n\t\tEVENT_QUEUE_DEQUEUE = EVENT_QUEUE + \"Dequeue\",\n\t\tERROR_LOAD = \"error loading\",\n\t\tERROR_PROVIDE = \"error providing\",\n\t\tERROR_RESOLVE = \"error resolving\",\n\t\tERROR_PROVIDE_ANONYMOUS = \"unspecified anonymous provide\",\n\t\tarrayPrototype = Array.prototype,\n\t\tarrayPrototypeSlice = arrayPrototype.slice,\n\t\tarrayPrototypeConcat = arrayPrototype.concat,\n\t\tobject = Object,\n\t\tobjectPrototypeToString = object.prototype.toString,\n\t\tobjectCreate = object.create,\n\t\tobjectDefineProperty = object.defineProperty,\n\t\tobjectGetOwnPropertyNames = object.getOwnPropertyNames,\n\t\tobjectGetOwnPropertyDescriptor = object.getOwnPropertyDescriptor,\n\t\tlinkElement = document.createElement(\"a\");\n\t(function (strPrototype) {\n\t\tfunction objectDefine(name, value, writable, configurable, enumerable) {\n\t\t\tobjectDefineProperty(this, name, new ClassDescriptor(value, writable, configurable, enumerable))\n\t\t}\n\n\t\tfunction functionExtends(source) {\n\t\t\tfor (var property, self = this, prototype = self[strPrototype], names = objectGetOwnPropertyNames(prototype), properties = {\n\t\t\t\t\tconstructor: new ClassDescriptor(self, TRUE, TRUE)\n\t\t\t\t}, i = 0;\n\t\t\t\t(property = names[i]) && !properties[property]; i++) properties[property] = objectGetOwnPropertyDescriptor(prototype, property);\n\t\t\ttry {\n\t\t\t\tself[strPrototype] = objectCreate(source[strPrototype] || source, properties)\n\t\t\t} catch (e) {}\n\t\t\tif (self[strPrototype] === prototype) throw new TypeError(\"Unable to extend, prototype is not writable\");\n\t\t\treturn self\n\t\t}\n\t\tobjectDefine.call(Object.prototype, \"define\", objectDefine);\n\t\tobjectDefine.call(global.Object.prototype, \"define\", objectDefine);\n\t\tFunction.prototype.define(\"extends\", functionExtends);\n\t\tglobal.Function.prototype.define(\"extends\", functionExtends)\n\t})(\"prototype\");\n\tvalidatorIsSemver = function () {\n\t\tvar regexMatchSemver = /^\\bv?(?:0|[1-9]\\d*)\\.(?:0|[1-9]\\d*)\\.(?:0|[1-9]\\d*)(?:-[\\da-z-]+(?:\\.[\\da-z-]+)*)?(?:\\+[\\da-z-]+(?:\\.[\\da-z-]+)*)?\\b$/i;\n\t\treturn function (value) {\n\t\t\treturn validatorIsTypeOf(value, STRING_STRING) && regexMatchSemver.test(value)\n\t\t}\n\t}();\n\tfunctionMerge = function () {\n\t\tfunction mergeProperties(property, value) {\n\t\t\tvar targetPropertyIsObject, targetProperty = this[property];\n\t\t\tif (value !== UNDEFINED)\n\t\t\t\tif (validatorIsObject(value)) {\n\t\t\t\t\ttargetPropertyIsObject = validatorIsObject(targetProperty);\n\t\t\t\t\tif (value.length !== UNDEFINED) targetProperty = targetPropertyIsObject && targetProperty.length !== UNDEFINED ? targetProperty : [];\n\t\t\t\t\telse targetProperty = targetPropertyIsObject && targetProperty.length === UNDEFINED ? targetProperty : {};\n\t\t\t\t\tthis[property] = functionMerge(targetProperty, value)\n\t\t\t\t} else this[property] = value\n\t\t}\n\t\treturn function () {\n\t\t\tfor (var properties, target = arguments[0], i = 1;\n\t\t\t\t(properties = arguments[i]) !== UNDEFINED; i++) functionIterate(properties, mergeProperties, target);\n\t\t\treturn target\n\t\t}\n\t}();\n\tfunctionUuid = function () {\n\t\tfunction randomize(character) {\n\t\t\tvar r = 16 * Math.random() | 0;\n\t\t\treturn (\"x\" === character ? r : 3 & r | 8)\n\t\t\t\t.toString(16)\n\t\t}\n\t\tvar regex = new RegExp(\"[xy]\", \"g\");\n\t\treturn function () {\n\t\t\treturn \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(regex, randomize)\n\t\t}\n\t}();\n\tfunctionDefer = function () {\n\t\tvar element, fallback, hasSetImmediate = \"setImmediate\" in global;\n\t\tif (\"MutationObserver\" in global) return function (fn) {\n\t\t\telement = document.createElement(\"div\");\n\t\t\tnew MutationObserver(function () {\n\t\t\t\t\tfn()\n\t\t\t\t})\n\t\t\t\t.observe(element, {\n\t\t\t\t\tattributes: TRUE\n\t\t\t\t});\n\t\t\telement.setAttribute(\"i\", \"1\")\n\t\t};\n\t\tif (!hasSetImmediate && \"postMessage\" in global && !(\"importScripts\" in global) && \"addEventListener\" in global) return function () {\n\t\t\tfunction onMessage(event) {\n\t\t\t\tvar fn;\n\t\t\t\tif (event.source === global && event.data && (fn = storage[event.data])) {\n\t\t\t\t\tfn();\n\t\t\t\t\tdelete storage[event.data]\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar storage = {};\n\t\t\tglobal.addEventListener(\"message\", onMessage, FALSE);\n\t\t\treturn function (fn) {\n\t\t\t\tvar uuid = functionUuid();\n\t\t\t\tstorage[uuid] = fn;\n\t\t\t\tglobal.postMessage(uuid, \"*\")\n\t\t\t}\n\t\t}();\n\t\tif (!hasSetImmediate && \"onreadystatechange\" in (element = document.createElement(\"script\"))) return function (fn) {\n\t\t\telement.onreadystatechange = function () {\n\t\t\t\telement.onreadystatechange = NULL;\n\t\t\t\telement.parentNode.removeChild(element);\n\t\t\t\tfn()\n\t\t\t};\n\t\t\tdocument.body.appendChild(element)\n\t\t};\n\t\tfallback = hasSetImmediate ? setImmediate : setTimeout;\n\t\treturn function (fn) {\n\t\t\tfallback(fn)\n\t\t}\n\t}();\n\tsingletonEvent = function () {\n\t\tfunction addListener(type, events, callback) {\n\t\t\tvar event, pointer;\n\t\t\tif (validatorIsTypeOf(events, STRING_STRING) && validatorIsTypeOf(callback, STRING_FUNCTION)) {\n\t\t\t\tevents = events.split(\" \");\n\t\t\t\twhile (event = events.shift()) {\n\t\t\t\t\tevent = event.split(\":\");\n\t\t\t\t\tif (regexMatchEvent.test(event[0])) {\n\t\t\t\t\t\t(listener[event[0]] || (listener[event[0]] = {\n\t\t\t\t\t\t\ton: [],\n\t\t\t\t\t\t\tafter: []\n\t\t\t\t\t\t}))[type].push({\n\t\t\t\t\t\t\tcallback: callback,\n\t\t\t\t\t\t\tfilter: event[1]\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (type === TYPE_ON && event[0] === EVENT_POST_CONFIGURE && (pointer = settings.modules[event[1]])) callback(pointer)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction Event() {}\n\t\tvar TYPE_ON = \"on\",\n\t\t\tTYPE_AFTER = \"after\",\n\t\t\tregexMatchEvent = /^cache(Miss|Hit|Clear|Exceed)|queue(En|De)queue|(pre|post)(Resolve|Configure|Request|Process|Cache)$/,\n\t\t\tlistener = {};\n\t\tEvent.prototype = {\n\t\t\temit: function (event, filter) {\n\t\t\t\tvar parameter, i, item, pointer = listener[event];\n\t\t\t\tif (pointer) {\n\t\t\t\t\tparameter = functionToArray(arguments, 2);\n\t\t\t\t\tfor (i = 0; item = pointer[TYPE_ON][i]; i++)\n\t\t\t\t\t\tif (!item.filter || item.filter === filter) item.callback.apply(NULL, parameter);\n\t\t\t\t\tfor (i = 0; item = pointer[TYPE_AFTER][i]; i++)\n\t\t\t\t\t\tif (!item.filter || item.filter === filter) item.callback.apply(NULL, parameter)\n\t\t\t\t}\n\t\t\t\treturn this\n\t\t\t},\n\t\t\ton: function (events, callback) {\n\t\t\t\taddListener(TYPE_ON, events, callback);\n\t\t\t\treturn this\n\t\t\t},\n\t\t\tafter: function (events, callback) {\n\t\t\t\taddListener(TYPE_AFTER, events, callback);\n\t\t\t\treturn this\n\t\t\t}\n\t\t};\n\t\treturn new Event\n\t}();\n\tfunctionEscapeRegex = function () {\n\t\tvar regexMatchRegex = /[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;\n\t\treturn function (value) {\n\t\t\treturn value.replace(regexMatchRegex, \"\\\\$&\")\n\t\t}\n\t}();\n\tregexIsAbsoluteUri = /^(http(s?):)?\\/\\//i, regexIsAbsolutePath = /^\\//, regexMatchSourcemap = /((?:\\/\\/|\\/\\*)#)\\s*(sourceMappingURL)\\s*=\\s*(?!(?:http[s]?:)?\\/\\/)(.+?)\\.map(?:\\s+)?(\\*\\/)?/g, regexMatchBaseUrl = new RegExp(\"^\" + functionEscapeRegex(functionResolveUrl(\"/\"))), regexMatchInternal = new RegExp(\"^\" + DEMAND_ID + \"|\" + PROVIDE_ID + \"|\" + PATH_ID + \"$\"), regexMatchParameter = /^(mock:)?([+-])?((?:[-\\w]+\\/?)+)?(?:@(.+?))?(?:#(\\d+))?!/;\n\tClassSemver = function () {\n\t\tfunction parse(version) {\n\t\t\tvar temp, parts = version.split(\"-\"),\n\t\t\t\ti = 0;\n\t\t\tparts = !parts[1] ? parts[0].split(\".\") : Array.prototype.concat(parts[0].split(\".\"), parts[1].split(\".\"));\n\t\t\tfor (; temp = parts[i]; i++) parts[i] = parseInt(temp, 10)\n\t\t\t\t.toString() === temp ? parseInt(temp, 10) : temp;\n\t\t\treturn parts\n\t\t}\n\n\t\tfunction compareLevel(a, b) {\n\t\t\treturn a < b ? -1 : a > b ? 1 : 0\n\t\t}\n\n\t\tfunction compareIdentifier(a, b) {\n\t\t\tvar pa, pb, tpa, tpb, i = 0;\n\t\t\tif (a.length && !b.length) return -1;\n\t\t\telse if (!a.length && b.length) return 1;\n\t\t\telse if (!a.length && !b.length) return 0;\n\t\t\tdo {\n\t\t\t\tpa = a[i];\n\t\t\t\ttpb = typeof (pb = b[i]);\n\t\t\t\tif ((tpa = typeof pa) === STRING_UNDEFINED && tpb === STRING_UNDEFINED) return 0;\n\t\t\t\telse if (tpb === STRING_UNDEFINED) return 1;\n\t\t\t\telse if (tpa === STRING_UNDEFINED) return -1;\n\t\t\t\telse if (pa === pb) continue;\n\t\t\t\telse if (tpa === STRING_STRING && tpb !== STRING_STRING) return 1;\n\t\t\t\telse if (tpa !== STRING_STRING && tpb === STRING_STRING) return -1;\n\t\t\t\telse if (pa > pb) return 1;\n\t\t\t\telse if (pa < pb) return -1\n\t\t\t} while (++i)\n\t\t}\n\n\t\tfunction ClassSemver(version) {\n\t\t\tif (!validatorIsSemver(version)) throw new TypeError('\"version\" must be a valid semver version string');\n\t\t\tversion = parse(version);\n\t\t\tthis.major = version.slice(0, 1);\n\t\t\tthis.minor = version.slice(1, 2);\n\t\t\tthis.patch = version.slice(2, 3);\n\t\t\tthis.identifier = version.slice(3)\n\t\t}\n\t\tClassSemver.prototype = {\n\t\t\ttoString: function () {\n\t\t\t\treturn this.major + \".\" + this.minor + \".\" + this.patch + (this.identifier.length ? \"-\" + this.identifier.join(\".\") : \"\")\n\t\t\t},\n\t\t\tcompare: function (version) {\n\t\t\t\treturn compareLevel(this.major, version.major) || compareLevel(this.minor, version.minor) || compareLevel(this.patch, version.patch) || compareIdentifier(this.identifier, version.identifier)\n\t\t\t}\n\t\t};\n\t\treturn ClassSemver\n\t}();\n\tsingletonCache = function () {\n\t\tfunction enabled(dependency) {\n\t\t\tvar match;\n\t\t\tif (dependency.cache !== NULL) return dependency.cache;\n\t\t\tfunctionIterate(settings.cache, function (property, value) {\n\t\t\t\tif (0 === dependency.path.indexOf(property) && (!match || value.weight > match.weight)) match = value\n\t\t\t});\n\t\t\treturn match ? match.state : FALSE\n\t\t}\n\n\t\tfunction getKey(key) {\n\t\t\treturn localStorage.getItem(key)\n\t\t}\n\n\t\tfunction setKey(key, value) {\n\t\t\tlocalStorage[value ? \"setItem\" : \"removeItem\"](key, value)\n\t\t}\n\n\t\tfunction getState(key) {\n\t\t\tvar matches, state = getKey(key);\n\t\t\tif (state && (matches = state.match(regexMatchProperties))) return functionToArray(matches, 1)\n\t\t}\n\n\t\tfunction setState(key, state) {\n\t\t\tstate[4] = functionGetTimestamp();\n\t\t\tsetKey(key, state.join(\",\"))\n\t\t}\n\n\t\tfunction emit(event, dependency, state) {\n\t\t\tsingletonEvent.emit(event, dependency.id, dependency, state)\n\t\t}\n\n\t\tfunction Cache() {\n\t\t\tfunctionDefer(this.clear.expired.bind(this.clear))\n\t\t}\n\t\tvar cache, STORAGE_PREFIX = \"[\" + DEMAND_ID + \"]\",\n\t\t\tSTORAGE_SUFFIX_STATE = \"[state]\",\n\t\t\tSTORAGE_SUFFIX_VALUE = \"[value]\",\n\t\t\tregexMatchState = new RegExp(\"^\" + functionEscapeRegex(STORAGE_PREFIX) + \"\\\\[(.+?)\\\\]\" + functionEscapeRegex(STORAGE_SUFFIX_STATE) + \"$\"),\n\t\t\tregexMatchProperties = /^(.+?),(\\d+),(\\d*),(.+?),(\\d+)$/,\n\t\t\tsupportsLocalStorage = function () {\n\t\t\t\ttry {\n\t\t\t\t\treturn \"localStorage\" in global && global.localStorage\n\t\t\t\t} catch (exception) {\n\t\t\t\t\treturn FALSE\n\t\t\t\t}\n\t\t\t}(),\n\t\t\tlocalStorage = supportsLocalStorage ? global.localStorage : NULL,\n\t\t\tsupportsRemainingSpace = supportsLocalStorage && \"remainingSpace\" in localStorage,\n\t\t\tstorage = {};\n\t\tsingletonEvent.on(EVENT_CACHE_MISS, function (dependency) {\n\t\t\t\tfunctionDefer(function () {\n\t\t\t\t\tcache.clear(dependency.id)\n\t\t\t\t})\n\t\t\t})\n\t\t\t.on(EVENT_CACHE_EXCEED, function (dependency) {\n\t\t\t\tdemand(\"-!/\" + DEMAND_ID + \"/cache/dispose\")\n\t\t\t\t\t.then(function (cacheDispose) {\n\t\t\t\t\t\tfunctionDefer(function () {\n\t\t\t\t\t\t\tcacheDispose(dependency.source.length);\n\t\t\t\t\t\t\tcache.set(dependency)\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t})\n\t\t\t.on(EVENT_POST_REQUEST, function (dependency) {\n\t\t\t\tif (dependency.source && enabled(dependency)) storage[dependency.id] = TRUE\n\t\t\t})\n\t\t\t.after(EVENT_POST_PROCESS, function (dependency) {\n\t\t\t\tif (storage[dependency.id]) functionDefer(function () {\n\t\t\t\t\tcache.set(dependency)\n\t\t\t\t})\n\t\t\t});\n\t\tCache.prototype = {\n\t\t\tget: supportsLocalStorage ? function (dependency) {\n\t\t\t\tvar id, state;\n\t\t\t\tif (enabled(dependency)) {\n\t\t\t\t\tid = STORAGE_PREFIX + \"[\" + dependency.id + \"]\";\n\t\t\t\t\tif (!(state = getState(id + STORAGE_SUFFIX_STATE))) return;\n\t\t\t\t\tif (1 === dependency.version.compare(new ClassSemver(state[0])) || state[2] && dependency.lifetime && state[2] <= functionGetTimestamp()) {\n\t\t\t\t\t\tdependency.invalid = true;\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\tdependency.source = getKey(id + STORAGE_SUFFIX_VALUE);\n\t\t\t\t\tfunctionDefer(function () {\n\t\t\t\t\t\tsetState(id + STORAGE_SUFFIX_STATE, state)\n\t\t\t\t\t});\n\t\t\t\t\treturn TRUE\n\t\t\t\t}\n\t\t\t} : function () {},\n\t\t\tresolve: supportsLocalStorage ? function (dependency) {\n\t\t\t\tif (this.get(dependency)) emit(EVENT_CACHE_HIT, dependency);\n\t\t\t\telse emit(EVENT_CACHE_MISS, dependency)\n\t\t\t} : function (dependency) {\n\t\t\t\temit(EVENT_CACHE_MISS, dependency)\n\t\t\t},\n\t\t\tset: supportsLocalStorage ? function (dependency) {\n\t\t\t\tvar state, id, spaceBefore;\n\t\t\t\tif (enabled(dependency)) {\n\t\t\t\t\tstate = [dependency.version, dependency.source.length, dependency.lifetime ? functionGetTimestamp() + dependency.lifetime : NULL, demand.version];\n\t\t\t\t\tid = STORAGE_PREFIX + \"[\" + dependency.id + \"]\";\n\t\t\t\t\temit(EVENT_PRE_CACHE, dependency, state);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tspaceBefore = supportsRemainingSpace ? localStorage.remainingSpace : NULL;\n\t\t\t\t\t\tsetKey(id + STORAGE_SUFFIX_VALUE, dependency.source);\n\t\t\t\t\t\tsetState(id + STORAGE_SUFFIX_STATE, state);\n\t\t\t\t\t\tif (spaceBefore !== NULL && localStorage.remainingSpace === spaceBefore) throw new Error;\n\t\t\t\t\t\temit(EVENT_POST_CACHE, dependency, state)\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\temit(EVENT_CACHE_EXCEED, dependency)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} : function () {},\n\t\t\tclear: supportsLocalStorage ? function (path) {\n\t\t\t\tvar id = functionResolveId(path),\n\t\t\t\t\tkey = STORAGE_PREFIX + \"[\" + id + \"]\";\n\t\t\t\tif (getKey(key + STORAGE_SUFFIX_STATE)) {\n\t\t\t\t\tsetKey(key + STORAGE_SUFFIX_STATE);\n\t\t\t\t\tsetKey(key + STORAGE_SUFFIX_VALUE);\n\t\t\t\t\temit(EVENT_CACHE_CLEAR, ClassDependency.get(id) || new ClassDependency(id, NULL, FALSE))\n\t\t\t\t}\n\t\t\t} : function () {}\n\t\t};\n\t\tCache.prototype.clear.all = supportsLocalStorage ? function () {\n\t\t\tvar match;\n\t\t\tfunctionIterate(localStorage, function (property) {\n\t\t\t\t(match = property.match(regexMatchState)) && this(match[1])\n\t\t\t}, this)\n\t\t} : function () {};\n\t\tCache.prototype.clear.expired = supportsLocalStorage ? function () {\n\t\t\tvar match, state;\n\t\t\tfunctionIterate(localStorage, function (property) {\n\t\t\t\tif (match = property.match(regexMatchState))\n\t\t\t\t\tif ((state = getState(STORAGE_PREFIX + \"[\" + match[1] + \"]\" + STORAGE_SUFFIX_STATE)) && state[2] > 0 && state[2] <= functionGetTimestamp()) this(match[1])\n\t\t\t}, this)\n\t\t} : function () {};\n\t\treturn cache = new Cache\n\t}();\n\tClassWeakmap = \"WeakMap\" in global ? global.WeakMap : function () {\n\t\tfunction getEntry(context, key) {\n\t\t\tvar entry;\n\t\t\tif ((entry = key[context.id]) && entry[0] === key) return entry\n\t\t}\n\n\t\tfunction ClassWeakmap() {\n\t\t\tthis.define(\"id\", prefix + functionUuid())\n\t\t}\n\t\tvar prefix = \"weakmap-\";\n\t\tClassWeakmap.prototype = {\n\t\t\tset: function (key, value) {\n\t\t\t\tvar entry = getEntry(this, key);\n\t\t\t\tif (entry) entry[1] = value;\n\t\t\t\telse key.define(this.id, [key, value]);\n\t\t\t\treturn this\n\t\t\t},\n\t\t\tget: function (key) {\n\t\t\t\tvar entry = getEntry(this, key);\n\t\t\t\tif (entry) return entry[1]\n\t\t\t},\n\t\t\tdelete: function (key) {\n\t\t\t\tvar entry = getEntry(this, key);\n\t\t\t\tif (entry) {\n\t\t\t\t\tentry.length = 0;\n\t\t\t\t\tdelete key[this.id]\n\t\t\t\t}\n\t\t\t},\n\t\t\thas: function (key) {\n\t\t\t\treturn !!getEntry(this, key)\n\t\t\t}\n\t\t};\n\t\treturn ClassWeakmap\n\t}();\n\tClassPledge = function () {\n\t\tfunction resolve() {\n\t\t\tstorage.get(this)\n\t\t\t\t.handle(PLEDGE_RESOLVED, arguments)\n\t\t}\n\n\t\tfunction reject() {\n\t\t\tstorage.get(this)\n\t\t\t\t.handle(PLEDGE_REJECTED, arguments)\n\t\t}\n\n\t\tfunction handle(state, parameter) {\n\t\t\tvar pointer, result, properties = storage.get(this);\n\t\t\tif (properties.state === PLEDGE_PENDING) {\n\t\t\t\tproperties.state = state;\n\t\t\t\tproperties.value = parameter\n\t\t\t}\n\t\t\twhile (pointer = properties[properties.state].shift())\n\t\t\t\tif ((result = pointer.handler.apply(NULL, properties.value)) && \"function\" === typeof result.then) result.then(pointer.dfd.resolve, pointer.dfd.reject);\n\t\t\t\telse pointer.dfd[properties.state === PLEDGE_RESOLVED ? \"resolve\" : \"reject\"].apply(NULL, properties.value);\n\t\t\tproperties[PLEDGE_RESOLVED].length = 0;\n\t\t\tproperties[PLEDGE_REJECTED].length = 0\n\t\t}\n\n\t\tfunction observe(pledge, index, properties) {\n\t\t\tpledge.then(function () {\n\t\t\t\tproperties.resolved[index] = functionToArray(arguments);\n\t\t\t\tproperties.count++;\n\t\t\t\tcheck(properties)\n\t\t\t}, function () {\n\t\t\t\tproperties.rejected.push(functionToArray(arguments));\n\t\t\t\tcheck(properties)\n\t\t\t})\n\t\t}\n\n\t\tfunction check(properties) {\n\t\t\tif (properties.count === properties.total) properties.dfd.resolve.apply(NULL, arrayPrototypeConcat.apply([], properties.resolved));\n\t\t\telse if (properties.rejected.length + properties.count === properties.total) properties.dfd.reject.apply(NULL, arrayPrototypeConcat.apply([], properties.rejected))\n\t\t}\n\n\t\tfunction ClassPledge(executor) {\n\t\t\tvar self = this;\n\t\t\tstorage.set(self, {\n\t\t\t\tstate: PLEDGE_PENDING,\n\t\t\t\thandle: handle.bind(self),\n\t\t\t\tvalue: NULL,\n\t\t\t\tresolved: [],\n\t\t\t\trejected: [],\n\t\t\t\tcount: 0\n\t\t\t});\n\t\t\texecutor(resolve.bind(self), reject.bind(self));\n\t\t\treturn self\n\t\t}\n\t\tvar PLEDGE_PENDING = \"pending\",\n\t\t\tPLEDGE_RESOLVED = \"resolved\",\n\t\t\tPLEDGE_REJECTED = \"rejected\",\n\t\t\tstorage = new ClassWeakmap;\n\t\tClassPledge.prototype = {\n\t\t\tcatch: function (listener) {\n\t\t\t\treturn this.then(function () {}, listener)\n\t\t\t},\n\t\t\talways: function (alwaysListener) {\n\t\t\t\treturn this.then(alwaysListener, alwaysListener)\n\t\t\t},\n\t\t\tthen: function (resolveListener, rejectListener) {\n\t\t\t\tvar properties = storage.get(this),\n\t\t\t\t\tdfd = ClassPledge.defer();\n\t\t\t\tresolveListener && properties[PLEDGE_RESOLVED].push({\n\t\t\t\t\thandler: resolveListener,\n\t\t\t\t\tdfd: dfd\n\t\t\t\t});\n\t\t\t\trejectListener && properties[PLEDGE_REJECTED].push({\n\t\t\t\t\thandler: rejectListener,\n\t\t\t\t\tdfd: dfd\n\t\t\t\t});\n\t\t\t\tif (properties.state !== PLEDGE_PENDING) functionDefer(properties.handle);\n\t\t\t\treturn dfd.pledge\n\t\t\t},\n\t\t\tisPending: function () {\n\t\t\t\treturn storage.get(this)\n\t\t\t\t\t.state === PLEDGE_PENDING\n\t\t\t},\n\t\t\tisResolved: function () {\n\t\t\t\treturn storage.get(this)\n\t\t\t\t\t.state === PLEDGE_RESOLVED\n\t\t\t},\n\t\t\tisRejected: function () {\n\t\t\t\treturn storage.get(this)\n\t\t\t\t\t.state === PLEDGE_REJECTED\n\t\t\t}\n\t\t};\n\t\tClassPledge.defer = function () {\n\t\t\tvar self = {};\n\t\t\tself.pledge = new ClassPledge(function (resolveListener, rejectListener) {\n\t\t\t\tself.resolve = resolveListener;\n\t\t\t\tself.reject = rejectListener\n\t\t\t});\n\t\t\treturn self\n\t\t};\n\t\tClassPledge.all = function (pledges) {\n\t\t\tvar properties, pledge, dfd = ClassPledge.defer(),\n\t\t\t\ti = 0;\n\t\t\tif (pledges.length) {\n\t\t\t\tproperties = {\n\t\t\t\t\tdfd: dfd,\n\t\t\t\t\tresolved: [],\n\t\t\t\t\trejected: [],\n\t\t\t\t\ttotal: pledges.length,\n\t\t\t\t\tcount: 0\n\t\t\t\t};\n\t\t\t\tfor (; pledge = pledges[i]; i++) observe(pledge, i, properties)\n\t\t\t} else dfd.resolve();\n\t\t\treturn dfd.pledge\n\t\t};\n\t\tClassPledge.race = function (pledges) {\n\t\t\tfor (var pledge, dfd = ClassPledge.defer(), i = 0; pledge = pledges[i]; i++) pledge.then(dfd.resolve, dfd.reject);\n\t\t\tif (!pledges.length) dfd.resolve();\n\t\t\treturn dfd.pledge\n\t\t};\n\t\treturn ClassPledge\n\t}();\n\tClassRegistry = function () {\n\t\tfunction ClassRegistry() {\n\t\t\tstorage.set(this, {})\n\t\t}\n\t\tvar storage = new ClassWeakmap;\n\t\tClassRegistry.prototype = {\n\t\t\tget: function (key) {\n\t\t\t\treturn key ? storage.get(this)[key] : storage.get(this)\n\t\t\t},\n\t\t\tset: function (key, value) {\n\t\t\t\tstorage.get(this)[key] = value\n\t\t\t},\n\t\t\tremove: function (key) {\n\t\t\t\tdelete storage.get(this)[key]\n\t\t\t}\n\t\t};\n\t\treturn ClassRegistry\n\t}();\n\tClassFailure.prototype = {\n\t\ttoString: function () {\n\t\t\tvar self = this,\n\t\t\t\tresult = DEMAND_ID + \": \" + self.message + \" \" + (self.module ? '\"' + self.module + '\"' : \"\");\n\t\t\tif (self.stack) result = ClassFailure.traverse(self.stack, result, 1);\n\t\t\treturn result\n\t\t}\n\t};\n\tClassFailure.traverse = function (stack, value, depth) {\n\t\tfor (var item, indention = new Array(depth + 1)\n\t\t\t\t.join(\" \"), i = 0; item = stack[i]; i++) {\n\t\t\tvalue += \"\\n\" + indention + \"> \" + item.message + \" \" + (item.module ? '\"' + item.module + '\"' : \"\");\n\t\t\tif (item.stack) value = ClassFailure.traverse(item.stack, value, depth + 1)\n\t\t}\n\t\treturn value\n\t};\n\tClassDependency = function () {\n\t\tfunction setProperty(property, value) {\n\t\t\tthis[property] = value\n\t\t}\n\n\t\tfunction add(id) {\n\t\t\tif (!matchInternal.test(id)) this.push(id)\n\t\t}\n\n\t\tfunction addPending(id, dependency) {\n\t\t\tif (!matchInternal.test(id) && dependency.pledge.isPending()) this.push(id)\n\t\t}\n\n\t\tfunction addResolved(id, dependency) {\n\t\t\tif (!matchInternal.test(id) && dependency.pledge.isResolved()) this.push(id)\n\t\t}\n\n\t\tfunction addRejected(id, dependency) {\n\t\t\tif (!matchInternal.test(id) && dependency.pledge.isRejected()) this.push(id)\n\t\t}\n\n\t\tfunction list() {\n\t\t\treturn functionIterate(registry.get(), add, [])\n\t\t}\n\n\t\tfunction ClassDependency(uri, context, register) {\n\t\t\tvar self = this,\n\t\t\t\tparameter = uri.match(regexMatchParameter) || placeholder;\n\t\t\tself.path = functionResolvePath(uri, context);\n\t\t\tself.mock = parameter[1] ? TRUE : FALSE;\n\t\t\tself.cache = parameter[2] ? \"+\" === parameter[1] : NULL;\n\t\t\tself.type = parameter[3] || settings.handler;\n\t\t\tself.version = new ClassSemver(parameter[4] || settings.version);\n\t\t\tself.lifetime = parameter[5] && 1e3 * parameter[5] || settings.lifetime;\n\t\t\tself.id = (self.mock ? MOCK_PREFIX : \"\") + self.type + \"!\" + self.path;\n\t\t\tself.uri = (self.mock ? MOCK_PREFIX : \"\") + self.type + \"@\" + self.version + (validatorIsPositive(self.lifetime) && self.lifetime > 0 ? \"#\" + self.lifetime : \"\") + \"!\" + self.path;\n\t\t\tself.dfd = ClassPledge.defer();\n\t\t\tself.pledge = self.dfd.pledge;\n\t\t\tself.invalid = false;\n\t\t\tself.pledge.then(function () {\n\t\t\t\tself.value = functionToArray(arguments)\n\t\t\t});\n\t\t\tregister !== FALSE && registry.set(self.id, self);\n\t\t\treturn self\n\t\t}\n\t\tvar PREFIX_INTERNAL = \"internal!\",\n\t\t\tregistry = new ClassRegistry,\n\t\t\tmatchInternal = /^(?:mock:|internal!)/i,\n\t\t\tplaceholder = [];\n\t\tlist.prototype = {\n\t\t\tpending: function () {\n\t\t\t\treturn functionIterate(registry.get(), addPending, [])\n\t\t\t},\n\t\t\tresolved: function () {\n\t\t\t\treturn functionIterate(registry.get(), addResolved, [])\n\t\t\t},\n\t\t\trejected: function () {\n\t\t\t\treturn functionIterate(registry.get(), addRejected, [])\n\t\t\t}\n\t\t};\n\t\tClassDependency.prototype = {\n\t\t\tenqueue: true\n\t\t};\n\t\tClassDependency.get = function (uri, context) {\n\t\t\treturn registry.get(functionResolveId(uri, context))\n\t\t};\n\t\tClassDependency.resolve = function (uri, context) {\n\t\t\tvar value, isInternal = context && regexMatchInternal.test(uri),\n\t\t\t\tdependency = isInternal ? this.get(PREFIX_INTERNAL + context + \"/\" + uri) : this.get(uri, context);\n\t\t\tif (!dependency)\n\t\t\t\tif (isInternal) {\n\t\t\t\t\tdependency = new ClassDependency(PREFIX_INTERNAL + context + \"/\" + uri);\n\t\t\t\t\tswitch (uri) {\n\t\t\t\t\tcase DEMAND_ID:\n\t\t\t\t\t\tvalue = function () {\n\t\t\t\t\t\t\treturn functionIterate(demand, setProperty, demand.bind(context))\n\t\t\t\t\t\t}();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase PROVIDE_ID:\n\t\t\t\t\t\tvalue = provide.bind(context);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase PATH_ID:\n\t\t\t\t\t\tvalue = context\n\t\t\t\t\t}\n\t\t\t\t\tdependency.dfd.resolve(value)\n\t\t\t\t} else {\n\t\t\t\t\tdependency = new ClassDependency(uri, context);\n\t\t\t\t\tdemand(MODULE_PREFIX_HANDLER + dependency.type)\n\t\t\t\t\t\t.then(function (handler) {\n\t\t\t\t\t\t\tdependency.handler = handler;\n\t\t\t\t\t\t\tif (dependency.mock) dependency.dfd.resolve(handler);\n\t\t\t\t\t\t\telse singletonCache.resolve(dependency)\n\t\t\t\t\t\t}, function () {\n\t\t\t\t\t\t\tdependency.dfd.reject(new ClassFailure(ERROR_LOAD + \" (handler)\", self.id))\n\t\t\t\t\t\t})\n\t\t\t\t}\n\t\t\treturn dependency\n\t\t};\n\t\tClassDependency.remove = function (uri, context, cache) {\n\t\t\tvar id = functionResolveId(uri, context),\n\t\t\t\tnode = document.querySelector(\"[\" + DEMAND_ID + '-id=\"' + id + '\"]');\n\t\t\tregistry.remove(id);\n\t\t\tregistry.remove(MOCK_PREFIX + id);\n\t\t\tnode && node.parentNode.removeChild(node);\n\t\t\tcache !== FALSE && singletonCache.clear(id)\n\t\t};\n\t\tClassDependency.list = list;\n\t\treturn ClassDependency\n\t}();\n\tClassPattern = function () {\n\t\tfunction setProperty(property, value) {\n\t\t\tthis[property] = {\n\t\t\t\turl: functionResolveUrl(value)\n\t\t\t\t\t.replace(regexMatchTrailingSlash, \"$1\"),\n\t\t\t\tmatch: new RegExp(\"^\" + functionEscapeRegex(value))\n\t\t\t}\n\t\t}\n\n\t\tfunction ClassPattern(pattern, url) {\n\t\t\tvar self = this;\n\t\t\tself.weight = pattern.length;\n\t\t\tself.match = new RegExp(\"^\" + functionEscapeRegex(pattern));\n\t\t\tself.location = [].concat(url);\n\t\t\tfunctionIterate(self.location, setProperty, self.location)\n\t\t}\n\t\tvar regexMatchTrailingSlash = /(.+)\\/$/;\n\t\tClassPattern.prototype = {\n\t\t\tmatches: function (path) {\n\t\t\t\treturn this.match.test(path)\n\t\t\t},\n\t\t\tprocess: function (path, index) {\n\t\t\t\tvar current = this.location[index];\n\t\t\t\tif (current) return path.replace(this.match, current.url)\n\t\t\t}\n\t\t};\n\t\treturn ClassPattern\n\t}();\n\tClassXhr = function (XMLHttpRequest) {\n\t\tfunction checkState() {\n\t\t\tif (this.readyState < 4) this.abort()\n\t\t}\n\t\tvar XDomainRequest = \"XDomainRequest\" in global && global.XDomainRequest || XMLHttpRequest;\n\t\treturn function (url) {\n\t\t\tvar pointer, dfd = ClassPledge.defer(),\n\t\t\t\txhr = regexMatchBaseUrl.test(url) ? new XMLHttpRequest : new XDomainRequest,\n\t\t\t\tboundCheckState = checkState.bind(xhr),\n\t\t\t\ttimeout = settings.timeout;\n\t\t\txhr.ontimeout = xhr.onerror = xhr.onabort = function () {\n\t\t\t\tdfd.reject(xhr.status)\n\t\t\t};\n\t\t\txhr.onprogress = xhr.onreadystatechange = function () {\n\t\t\t\tclearTimeout(pointer);\n\t\t\t\tpointer = setTimeout(boundCheckState, timeout)\n\t\t\t};\n\t\t\txhr.onload = function () {\n\t\t\t\tpointer = clearTimeout(pointer);\n\t\t\t\tif (!(\"status\" in xhr) || 200 === xhr.status) dfd.resolve(xhr.responseText, xhr.getResponseHeader && xhr.getResponseHeader(\"content-type\"));\n\t\t\t\telse dfd.reject(xhr.status)\n\t\t\t};\n\t\t\txhr.open(\"GET\", url, TRUE);\n\t\t\txhr.send();\n\t\t\tpointer = setTimeout(boundCheckState, timeout);\n\t\t\treturn dfd.pledge\n\t\t}\n\t}(XMLHttpRequest);\n\tdemand = function () {\n\t\tfunction updateCacheSettings(property, value) {\n\t\t\tthis[property] = {\n\t\t\t\tweight: property.length,\n\t\t\t\tstate: value\n\t\t\t}\n\t\t}\n\n\t\tfunction updatePatternSettings(property, value) {\n\t\t\t\"base\" !== property && (this[property] = new ClassPattern(property, value))\n\t\t}\n\n\t\tfunction updateModuleSettings(property, value) {\n\t\t\tvar temp = this[property] = this[property] || {};\n\t\t\tsingletonEvent.emit(EVENT_PRE_CONFIGURE, property, temp);\n\t\t\tfunctionMerge(temp, value);\n\t\t\tsingletonEvent.emit(EVENT_POST_CONFIGURE, property, temp)\n\t\t}\n\n\t\tfunction demand() {\n\t\t\tvar uri, dfd, result, dependencies = functionToArray(arguments),\n\t\t\t\tcontext = this !== global ? this : NULL,\n\t\t\t\ti = 0;\n\t\t\tsingletonEvent.emit(EVENT_PRE_RESOLVE, NULL, dependencies, context);\n\t\t\tfor (; uri = dependencies[i]; i++)\n\t\t\t\tif (validatorIsTypeOf(uri, STRING_STRING)) dependencies[i] = ClassDependency.resolve(uri, context)\n\t\t\t\t\t.pledge;\n\t\t\t\telse {\n\t\t\t\t\tdependencies[i] = (dfd = ClassPledge.defer())\n\t\t\t\t\t\t.pledge;\n\t\t\t\t\tdfd.resolve(uri)\n\t\t\t\t}\n\t\t\tif (dependencies.length > 1) result = ClassPledge.all(dependencies);\n\t\t\telse result = dependencies[0];\n\t\t\treturn result.always(function () {\n\t\t\t\tsingletonEvent.emit(EVENT_POST_RESOLVE, NULL, dependencies, context)\n\t\t\t})\n\t\t}\n\t\tdemand.configure = function (options) {\n\t\t\tvar cache = options.cache,\n\t\t\t\tversion = options.version,\n\t\t\t\ttimeout = options.timeout,\n\t\t\t\tlifetime = options.lifetime,\n\t\t\t\tbase = options.base,\n\t\t\t\tpattern = options.pattern,\n\t\t\t\tmodules = options.modules,\n\t\t\t\tpointer = settings.modules;\n\t\t\tif (validatorIsTypeOf(cache, STRING_BOOLEAN)) settings.cache[\"\"] = {\n\t\t\t\tweight: 0,\n\t\t\t\tstate: cache\n\t\t\t};\n\t\t\telse if (validatorIsObject(cache)) functionIterate(cache, updateCacheSettings, settings.cache);\n\t\t\tif (validatorIsSemver(version)) settings.version = version;\n\t\t\tif (validatorIsPositive(timeout)) settings.timeout = 1e3 * Math.min(Math.max(timeout, 2), 20);\n\t\t\tif (validatorIsPositive(lifetime) && lifetime > 0) settings.lifetime = 1e3 * lifetime;\n\t\t\tif (validatorIsTypeOf(base, STRING_STRING) && \"\" !== base) settings.pattern.base = new ClassPattern(\"\", base);\n\t\t\tif (validatorIsObject(pattern)) functionIterate(pattern, updatePatternSettings, settings.pattern);\n\t\t\tif (validatorIsObject(modules)) functionIterate(modules, updateModuleSettings, pointer);\n\t\t\treturn demand\n\t\t};\n\t\tdemand.version = \"5.0.3\";\n\t\tdemand.on = singletonEvent.on.bind(demand);\n\t\tdemand.get = function (uri, context) {\n\t\t\tvar dependency = ClassDependency.get(uri, context);\n\t\t\treturn dependency && dependency.value\n\t\t};\n\t\tdemand.list = ClassDependency.list;\n\t\tdemand.remove = ClassDependency.remove;\n\t\tdemand.cache = {\n\t\t\tclear: singletonCache.clear\n\t\t};\n\t\tsingletonEvent.after(EVENT_CACHE_MISS, function (dependency) {\n\t\t\t\tnew ClassLoader(dependency)\n\t\t\t})\n\t\t\t.after(EVENT_POST_REQUEST, function (dependency) {\n\t\t\t\tvar pointer = dependency.handler.onPostRequest;\n\t\t\t\tpointer && pointer(dependency)\n\t\t\t})\n\t\t\t.after(EVENT_CACHE_HIT + \" \" + EVENT_POST_REQUEST, function (dependency) {\n\t\t\t\tsingletonEvent.emit(EVENT_PRE_PROCESS, dependency.id, dependency)\n\t\t\t})\n\t\t\t.after(EVENT_PRE_REQUEST, function (dependency) {\n\t\t\t\tvar pointer = dependency.handler.onPreRequest;\n\t\t\t\tpointer && pointer(dependency)\n\t\t\t})\n\t\t\t.after(EVENT_PRE_PROCESS, function (dependency) {\n\t\t\t\tvar pointer = dependency.handler.onPreProcess;\n\t\t\t\tpointer && pointer(dependency);\n\t\t\t\tdependency.pledge.then(function () {\n\t\t\t\t\tsingletonEvent.emit(EVENT_POST_PROCESS, dependency.id, dependency)\n\t\t\t\t});\n\t\t\t\tif (true === dependency.enqueue) queue.enqueue(dependency);\n\t\t\t\telse if (validatorIsInstanceOf(dependency.enqueue, ClassPledge)) dependency.enqueue.then(function () {\n\t\t\t\t\tqueue.enqueue(dependency)\n\t\t\t\t})\n\t\t\t});\n\t\treturn demand\n\t}();\n\tglobal.define(\"demand\", demand);\n\tprovide = function () {\n\t\tvar module, isFunction, uri = validatorIsTypeOf(arguments[0], STRING_STRING) ? arguments[0] : NULL,\n\t\t\tcontext = this !== global ? this : NULL,\n\t\t\tdependencies = validatorIsArray(arguments[uri ? 1 : 0]) ? arguments[uri ? 1 : 0] : NULL,\n\t\t\tdefinition = dependencies ? arguments[uri ? 2 : 1] : arguments[uri ? 1 : 0];\n\t\tif (!uri && processor.current) {\n\t\t\turi = (module = processor.current)\n\t\t\t\t.uri;\n\t\t\tprocessor.process()\n\t\t}\n\t\tif (uri) {\n\t\t\tmodule = module || new ClassDependency(uri, context);\n\t\t\tisFunction = validatorIsTypeOf(definition, STRING_FUNCTION);\n\t\t\tif (dependencies) demand.apply(module.path, dependencies)\n\t\t\t\t.then(function () {\n\t\t\t\t\tmodule.dfd.resolve(isFunction ? definition.apply(NULL, arguments) : definition)\n\t\t\t\t}, function () {\n\t\t\t\t\tmodule.dfd.reject(new ClassFailure(ERROR_PROVIDE, module.id, arguments))\n\t\t\t\t});\n\t\t\telse module.dfd.resolve(isFunction ? definition() : definition);\n\t\t\treturn module.dfd.pledge\n\t\t} else !validatorIsTypeOf(console, STRING_UNDEFINED) && console.error(new ClassFailure(ERROR_PROVIDE_ANONYMOUS))\n\t};\n\tglobal.define(\"provide\", provide);\n\tdemand.configure({\n\t\tcache: TRUE,\n\t\tbase: \"/\",\n\t\tpattern: {\n\t\t\t\"/demand\": functionResolveUrl((options && options.url || location.href) + \"/../\")\n\t\t\t\t.slice(0, -1)\n\t\t}\n\t});\n\toptions && options.settings && demand.configure(options.settings);\n\tClassQueue = function () {\n\t\tfunction ClassQueue() {\n\t\t\tvar self = AbstractUuid.call(this);\n\t\t\tstorage.set(self, []);\n\t\t\treturn self\n\t\t}\n\t\tvar storage = new ClassWeakmap;\n\t\tClassQueue.prototype = {\n\t\t\tenqueue: function () {\n\t\t\t\tstorage.set(this, storage.get(this)\n\t\t\t\t\t.concat(functionToArray(arguments)));\n\t\t\t\tsingletonEvent.emit(EVENT_QUEUE_ENQUEUE, this.uuid)\n\t\t\t},\n\t\t\tdequeue: function () {\n\t\t\t\tsingletonEvent.emit(EVENT_QUEUE_DEQUEUE, this.uuid);\n\t\t\t\treturn storage.get(this)\n\t\t\t\t\t.shift()\n\t\t\t},\n\t\t\tget current() {\n\t\t\t\treturn storage.get(this)[0]\n\t\t\t},\n\t\t\tget length() {\n\t\t\t\treturn storage.get(this)\n\t\t\t\t\t.length\n\t\t\t}\n\t\t};\n\t\treturn ClassQueue.extends(AbstractUuid)\n\t}();\n\tClassProcessor = function () {\n\t\tfunction ClassProcessor(queue) {\n\t\t\tvar self = this,\n\t\t\t\tproperties = {\n\t\t\t\t\tqueue: queue,\n\t\t\t\t\tcurrent: NULL\n\t\t\t\t};\n\t\t\tstorage.set(self, properties);\n\t\t\tdemand.on(EVENT_QUEUE_ENQUEUE + \":\" + queue.uuid, function () {\n\t\t\t\t!properties.current && self.process()\n\t\t\t})\n\t\t}\n\t\tvar storage = new ClassWeakmap;\n\t\tClassProcessor.prototype = {\n\t\t\tprocess: function () {\n\t\t\t\tvar current, properties = storage.get(this);\n\t\t\t\tif (properties.queue.length)\n\t\t\t\t\tif (!(current = properties.current = properties.queue.dequeue())\n\t\t\t\t\t\t.pledge.isRejected()) {\n\t\t\t\t\t\tcurrent.handler.process && current.handler.process(current);\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\tproperties.current = NULL\n\t\t\t},\n\t\t\tget current() {\n\t\t\t\treturn storage.get(this)\n\t\t\t\t\t.current\n\t\t\t}\n\t\t};\n\t\treturn ClassProcessor\n\t}();\n\tabstractHandler.prototype = {\n\t\tvalidate: NULL,\n\t\tonPreRequest: NULL,\n\t\tonPostRequest: NULL,\n\t\tonPreProcess: NULL,\n\t\tprocess: NULL\n\t};\n\thandlerModule = function () {\n\t\tfunction HandlerModule() {}\n\t\tvar suffix = \".js\",\n\t\t\ttarget = document.getElementsByTagName(\"head\")[0],\n\t\t\tregexMatchType = /^(application|text)\\/(x-)?javascript/;\n\t\tHandlerModule.prototype = {\n\t\t\tvalidate: function (type) {\n\t\t\t\treturn regexMatchType.test(type)\n\t\t\t},\n\t\t\tonPreRequest: function (dependency) {\n\t\t\t\tvar pathname = dependency.url.pathname;\n\t\t\t\tdependency.url.pathname = pathname.slice(-suffix.length) !== suffix ? pathname + suffix : pathname\n\t\t\t},\n\t\t\tonPostRequest: function (dependency) {\n\t\t\t\tdependency.source = functionResolveSourcemaps(dependency.url, dependency.source)\n\t\t\t},\n\t\t\tprocess: function (dependency) {\n\t\t\t\tvar script;\n\t\t\t\tif (dependency.source) {\n\t\t\t\t\t(script = document.createElement(\"script\"))\n\t\t\t\t\t.async = TRUE;\n\t\t\t\t\tscript.text = dependency.source;\n\t\t\t\t\tscript.setAttribute(DEMAND_ID + \"-id\", dependency.id);\n\t\t\t\t\ttarget.appendChild(script)\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn new(HandlerModule.extends(abstractHandler))\n\t}();\n\tClassFailure.prototype = {\n\t\ttoString: function () {\n\t\t\tvar self = this,\n\t\t\t\tresult = DEMAND_ID + \": \" + self.message + \" \" + (self.module ? '\"' + self.module + '\"' : \"\");\n\t\t\tif (self.stack) result = ClassFailure.traverse(self.stack, result, 1);\n\t\t\treturn result\n\t\t}\n\t};\n\tClassFailure.traverse = function (stack, value, depth) {\n\t\tfor (var item, indention = new Array(depth + 1)\n\t\t\t\t.join(\" \"), i = 0; item = stack[i]; i++) {\n\t\t\tvalue += \"\\n\" + indention + \"> \" + item.message + \" \" + (item.module ? '\"' + item.module + '\"' : \"\");\n\t\t\tif (item.stack) value = ClassFailure.traverse(item.stack, value, depth + 1)\n\t\t}\n\t\treturn value\n\t};\n\thandlerBundle = function () {\n\t\tfunction updateDependencies(uri, dependencies) {\n\t\t\tvar i, dependency;\n\t\t\tfor (i = 0; dependency = dependencies[i]; i++)\n\t\t\t\tif (validatorIsTypeOf(dependency, STRING_STRING)) dependencies[i] = functionResolveId(dependency)\n\t\t}\n\n\t\tfunction getType(dependencies) {\n\t\t\tfor (var type, temp, i = 0; temp = dependencies[i]; i++) {\n\t\t\t\ttemp = (temp = temp.match(regexMatchParameter)) && temp[3] || settings.handler;\n\t\t\t\tif (type) {\n\t\t\t\t\tif (temp !== type) return FALSE\n\t\t\t\t} else type = temp\n\t\t\t}\n\t\t\treturn type\n\t\t}\n\n\t\tfunction HandlerBundle() {}\n\t\tvar path = MODULE_PREFIX_HANDLER + \"bundle\",\n\t\t\tsettings = {};\n\t\tdemand.on(EVENT_POST_CONFIGURE + \":\" + path, function (options) {\n\t\t\tif (validatorIsObject(options)) functionIterate(settings = options, updateDependencies)\n\t\t});\n\t\tHandlerBundle.prototype = {\n\t\t\tvalidate: handlerModule.validate,\n\t\t\tonPreProcess: function (dependency) {\n\t\t\t\tfunction reject() {\n\t\t\t\t\tdfd.reject(new ClassFailure(ERROR_RESOLVE, dependency.id, arguments))\n\t\t\t\t}\n\t\t\t\tvar type, match, pledges, temp, i, source = dependency.source,\n\t\t\t\t\tdfd = dependency.dfd,\n\t\t\t\t\tdependencies = settings[dependency.path];\n\t\t\t\tdependency.enqueue = FALSE;\n\t\t\t\tif (dependencies && (type = getType(dependencies))) {\n\t\t\t\t\twhile (match = regexMatchSourcemap.exec(source)) source = source.replace(match[0], \"\");\n\t\t\t\t\tdependency.source = source;\n\t\t\t\t\tpledges = [];\n\t\t\t\t\tfor (i = 0; temp = dependencies[i]; i++) pledges.push(ClassDependency.resolve(MOCK_PREFIX + temp)\n\t\t\t\t\t\t.pledge);\n\t\t\t\t\tClassPledge.all(pledges)\n\t\t\t\t\t\t.then(function () {\n\t\t\t\t\t\t\tpledges.length = 0;\n\t\t\t\t\t\t\tfor (i = 0; temp = dependencies[i]; i++) {\n\t\t\t\t\t\t\t\t(temp = dependencies[i] = ClassDependency.get(temp) || new ClassDependency(temp))\n\t\t\t\t\t\t\t\t.handler = arguments[i];\n\t\t\t\t\t\t\t\tpledges.push(temp.pledge)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (\"module\" === type) {\n\t\t\t\t\t\t\t\tqueue.enqueue.apply(queue, dependencies);\n\t\t\t\t\t\t\t\thandlerModule.process(dependency)\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\thandlerModule.process(dependency);\n\t\t\t\t\t\t\t\tqueue.enqueue.apply(queue, dependencies)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tClassPledge.all(pledges)\n\t\t\t\t\t\t\t\t.then(dfd.resolve, reject)\n\t\t\t\t\t\t}, reject)\n\t\t\t\t} else reject()\n\t\t\t}\n\t\t};\n\t\treturn new(HandlerBundle.extends(abstractHandler))\n\t}();\n\thandlerComponent = function () {\n\t\tfunction HandlerComponent() {}\n\t\tvar suffix = \".html\",\n\t\t\tregexMatchType = /^text\\/.+$/;\n\t\tHandlerComponent.prototype = {\n\t\t\tvalidate: function (type) {\n\t\t\t\treturn regexMatchType.test(type)\n\t\t\t},\n\t\t\tonPreRequest: function (dependency) {\n\t\t\t\tvar pathname = dependency.url.pathname;\n\t\t\t\tdependency.url.pathname = pathname.slice(-suffix.length) !== suffix ? pathname + suffix : pathname\n\t\t\t},\n\t\t\tonPostRequest: function (dependency) {\n\t\t\t\tdependency.source = functionResolveSourcemaps(dependency.url, dependency.source)\n\t\t\t},\n\t\t\tonPreProcess: function (dependency) {\n\t\t\t\tfunction reject() {\n\t\t\t\t\tdfd.reject(new ClassFailure(ERROR_RESOLVE, dependency.id, arguments))\n\t\t\t\t}\n\t\t\t\tvar node, handler, path, uri, context = dependency.path,\n\t\t\t\t\tdfd = dependency.dfd,\n\t\t\t\t\tcontainer = document.createElement(\"body\"),\n\t\t\t\t\tmodules = [],\n\t\t\t\t\tpledges = [];\n\t\t\t\tdependency.enqueue = FALSE;\n\t\t\t\tcontainer.innerHTML = dependency.source;\n\t\t\t\twhile (node = container.firstElementChild)\n\t\t\t\t\tif (handler = node.getAttribute(\"type\")) {\n\t\t\t\t\t\turi = handler + \"!\" + context + ((path = node.getAttribute(\"path\")) ? \"/\" + path : \"\");\n\t\t\t\t\t\tnode.parentNode.removeChild(node);\n\t\t\t\t\t\tmodules.push({\n\t\t\t\t\t\t\tsource: node.textContent,\n\t\t\t\t\t\t\turi: uri\n\t\t\t\t\t\t});\n\t\t\t\t\t\tpledges.push(ClassDependency.resolve(\"mock:\" + uri)\n\t\t\t\t\t\t\t.pledge)\n\t\t\t\t\t}\n\t\t\t\tClassPledge.all(pledges)\n\t\t\t\t\t.then(function () {\n\t\t\t\t\t\tvar module, dependency, i = 0;\n\t\t\t\t\t\tpledges.length = 0;\n\t\t\t\t\t\tfor (; module = modules[i]; i++) {\n\t\t\t\t\t\t\t(dependency = ClassDependency.get(module.uri) || new ClassDependency(module.uri))\n\t\t\t\t\t\t\t.source = functionResolveSourcemaps(dependency.url, module.source);\n\t\t\t\t\t\t\tdependency.handler = arguments[i];\n\t\t\t\t\t\t\tpledges.push(dependency.pledge);\n\t\t\t\t\t\t\tqueue.enqueue(dependency)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tClassPledge.all(pledges)\n\t\t\t\t\t\t\t.then(dfd.resolve, reject)\n\t\t\t\t\t}, reject)\n\t\t\t}\n\t\t};\n\t\treturn new(HandlerComponent.extends(abstractHandler))\n\t}();\n\tpluginGenie = function () {\n\t\tfunction matchPattern(path) {\n\t\t\tfor (var pointer, match, i = 0; pointer = pattern[i]; i++)\n\t\t\t\tif (0 === path.indexOf(pointer.prefix) && (!match || pointer.weight > match.weight)) match = pointer;\n\t\t\treturn match\n\t\t}\n\n\t\tfunction generateConfiguration(bundle) {\n\t\t\tvar pointer, dependency, matches = bundle.matches,\n\t\t\t\tconfiguration = {\n\t\t\t\t\tpattern: {},\n\t\t\t\t\tmodules: {\n\t\t\t\t\t\t\"/demand/handler/bundle\": {}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\ti = 0;\n\t\t\tconfiguration.pattern[bundle.id] = bundle.fn(matches);\n\t\t\tconfiguration.modules[MODULE_PREFIX_HANDLER + \"bundle\"][bundle.id] = pointer = [];\n\t\t\tfor (; dependency = matches[i]; i++) pointer.push(dependency.path);\n\t\t\treturn configuration\n\t\t}\n\n\t\tfunction resolveDependencies() {\n\t\t\tfor (var dependency, i = 0; dependency = this[i]; i++) dependency.dfd.resolve(arguments[i])\n\t\t}\n\n\t\tfunction rejectDependencies() {\n\t\t\tfor (var dependency, i = 0; dependency = this[i]; i++) dependency.dfd.reject(new ClassFailure(ERROR_RESOLVE, dependency.id))\n\t\t}\n\n\t\tfunction addPattern(property, value) {\n\t\t\tpattern.push({\n\t\t\t\tprefix: property,\n\t\t\t\tweight: property.length,\n\t\t\t\tfn: value\n\t\t\t})\n\t\t}\n\n\t\tfunction resolveBundles(property, value) {\n\t\t\tvar dependency, matches = value.matches,\n\t\t\t\ti = 0;\n\t\t\tif (matches.length > 1) {\n\t\t\t\tvalue.id = path + \"/\" + functionHash(JSON.stringify(value.matches));\n\t\t\t\tfor (; dependency = matches[i]; i++) matches[i] = new ClassDependency(dependency.uri);\n\t\t\t\tdemand.configure(generateConfiguration(value));\n\t\t\t\tdemand(\"bundle!\" + value.id)\n\t\t\t\t\t.then(resolveDependencies.bind(matches), rejectDependencies.bind(matches))\n\t\t\t}\n\t\t}\n\t\tvar path = MODULE_PREFIX_PLUGIN + \"genie\",\n\t\t\tpattern = [];\n\t\tdemand.on(EVENT_POST_CONFIGURE + \":\" + path, function (options) {\n\t\t\t\tif (validatorIsObject(options)) {\n\t\t\t\t\tpattern.length = 0;\n\t\t\t\t\tfunctionIterate(options, addPattern)\n\t\t\t\t}\n\t\t\t})\n\t\t\t.on(EVENT_PRE_RESOLVE, function (dependencies, context) {\n\t\t\t\tfor (var dependency, pattern, bundles = {}, i = 0; dependency = dependencies[i]; i++)\n\t\t\t\t\tif (validatorIsTypeOf(dependency, STRING_STRING) && !regexMatchInternal.test(dependency) && !ClassDependency.get(dependency, context))\n\t\t\t\t\t\tif (\"module\" === (dependency = new ClassDependency(dependency, context, FALSE))\n\t\t\t\t\t\t\t.type && (pattern = matchPattern(dependency.path)) && !singletonCache.get(dependency))(bundles[pattern.prefix] || (bundles[pattern.prefix] = {\n\t\t\t\t\t\t\t\tfn: pattern.fn,\n\t\t\t\t\t\t\t\tmatches: []\n\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t\t.matches.push(dependency);\n\t\t\t\tfunctionIterate(bundles, resolveBundles)\n\t\t\t});\n\t\treturn TRUE\n\t}();\n\tqueue = new ClassQueue;\n\tprocessor = new ClassProcessor(queue);\n\tassignModule(MODULE_PREFIX_ABSTRACT + \"uuid\", AbstractUuid);\n\tassignModule(MODULE_PREFIX_ABSTRACT + \"handler\", abstractHandler);\n\tassignModule(MODULE_PREFIX_HANDLER + \"module\", handlerModule);\n\tassignModule(MODULE_PREFIX_HANDLER + \"bundle\", handlerBundle);\n\tassignModule(MODULE_PREFIX_HANDLER + \"component\", handlerComponent);\n\tassignModule(MODULE_PREFIX_PLUGIN + \"genie\", pluginGenie);\n\tassignModule(MODULE_PREFIX_VALIDATOR + \"isTypeOf\", validatorIsTypeOf);\n\tassignModule(MODULE_PREFIX_VALIDATOR + \"isArray\", validatorIsArray);\n\tassignModule(MODULE_PREFIX_VALIDATOR + \"isObject\", validatorIsObject);\n\tassignModule(MODULE_PREFIX_VALIDATOR + \"isInstanceOf\", validatorIsInstanceOf);\n\tassignModule(MODULE_PREFIX_VALIDATOR + \"isSemver\", validatorIsSemver);\n\tassignModule(MODULE_PREFIX_FUNCTION + \"resolveUrl\", functionResolveUrl);\n\tassignModule(MODULE_PREFIX_FUNCTION + \"resolveSourcemaps\", functionResolveSourcemaps);\n\tassignModule(MODULE_PREFIX_FUNCTION + \"merge\", functionMerge);\n\tassignModule(MODULE_PREFIX_FUNCTION + \"iterate\", functionIterate);\n\tassignModule(MODULE_PREFIX_FUNCTION + \"hash\", functionHash);\n\tassignModule(MODULE_PREFIX_FUNCTION + \"defer\", functionDefer);\n\tassignModule(MODULE_PREFIX_FUNCTION + \"uuid\", functionUuid);\n\tassignModule(MODULE_PREFIX + \"weakmap\", ClassWeakmap);\n\tassignModule(MODULE_PREFIX + \"descriptor\", ClassDescriptor);\n\tassignModule(MODULE_PREFIX + \"pledge\", ClassPledge);\n\tassignModule(MODULE_PREFIX + \"queue\", ClassQueue);\n\tassignModule(MODULE_PREFIX + \"xhr\", ClassXhr);\n\tassignModule(MODULE_PREFIX + \"failure\", ClassFailure);\n\tassignModule(MODULE_PREFIX + \"semver\", ClassSemver);\n\tif (options && options.main) switch (typeof options.main) {\n\tcase STRING_STRING:\n\t\tdemand(options.main);\n\t\tbreak;\n\tcase STRING_FUNCTION:\n\t\tprovide(\"main\", options.main())\n\t}\n})(\"demand-loader\" === this.name ? parent : this, setTimeout, clearTimeout);\n"]}