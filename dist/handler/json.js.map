{"version":3,"sources":["handler/json.js"],"names":["provide","path","abstractHandler","Task","Failure","isObject","merge","regexMatchType","settings","suffix","parseJson","resolve","reject","source","JSON","parse","error","HandlerJson","demand","on","options","prototype","validate","type","test","onPreRequest","dependency","pathname","url","slice","length","process","then","data","catch","dfd","extends"],"mappings":";CAAC,WACA,aAmDAA,QAAQ,CAAE,OAAQ,2BAA4B,eAAgB,kBAAmB,6BAA8B,2BAjD/G,SAAoBC,EAAMC,EAAiBC,EAAMC,EAASC,EAAUC,GACnE,IAAIC,EAAiB,qBACpBC,EAAiB,CAAEC,OAAQ,SAC3BC,EAAiB,IAAIP,GAAK,SAASQ,EAASC,EAAQC,GACnD,IACCF,EAAQG,KAAKC,MAAMF,IAClB,MAAMG,GACPJ,EAAOI,OAWV,SAASC,KA4BT,OAnCAC,OACEC,GAAG,iBAAmBlB,GAAM,SAASmB,GAClCf,EAASe,IACXd,EAAME,EAAUY,MAMnBH,EAAYI,UAAY,CACvBC,SAAU,SAASC,GAClB,OAAOhB,EAAeiB,KAAKD,IAE5BE,aAAc,SAASC,EAAYjB,GAClC,IAAIkB,GAEJlB,EAA4B,oBAAXA,EAA0BA,EAASD,EAASC,UAG5DkB,EAAWD,EAAWE,IAAID,SAE1BD,EAAWE,IAAID,SAAWA,EAASE,OAAOpB,EAAOqB,UAAYrB,EAASkB,EAAWlB,EAASkB,IAG5FI,QAAS,SAASL,GACjBhB,EAAUgB,EAAWb,QACnBmB,MAAK,SAASC,GACdjC,SAAQ,WAAa,OAAOiC,QAE5BC,OAAM,WACNR,EAAWS,IAAIvB,OAAO,IAAIR,EAAQ,gBAAiBsB,EAAWzB,YAK3D,IAAKgB,EAAYmB,QAAQlC,OAjDlC","file":"json.js","sourcesContent":["(function() {\n\t'use strict';\n\n\tfunction definition(path, abstractHandler, Task, Failure, isObject, merge) {\n\t\tvar regexMatchType = /^application\\/json/,\n\t\t\tsettings       = { suffix: '.json' },\n\t\t\tparseJson      = new Task(function(resolve, reject, source) {\n\t\t\t\ttry {\n\t\t\t\t\tresolve(JSON.parse(source));\n\t\t\t\t} catch(error) {\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\t\t\t});\n\n\t\tdemand\n\t\t\t.on('postConfigure:' + path, function(options) {\n\t\t\t\tif(isObject(options)) {\n\t\t\t\t\tmerge(settings, options);\n\t\t\t\t}\n\t\t\t});\n\n\t\tfunction HandlerJson() {}\n\n\t\tHandlerJson.prototype = {\n\t\t\tvalidate: function(type) {\n\t\t\t\treturn regexMatchType.test(type);\n\t\t\t},\n\t\t\tonPreRequest: function(dependency, suffix) {\n\t\t\t\tvar pathname;\n\n\t\t\t\tsuffix = (typeof suffix !== 'undefined') ? suffix : settings.suffix;\n\n\t\t\t\tif(suffix) {\n\t\t\t\t\tpathname = dependency.url.pathname;\n\n\t\t\t\t\tdependency.url.pathname = pathname.slice(-suffix.length) !== suffix ? pathname + suffix : pathname;\n\t\t\t\t}\n\t\t\t},\n\t\t\tprocess: function(dependency) {\n\t\t\t\tparseJson(dependency.source)\n\t\t\t\t\t.then(function(data) {\n\t\t\t\t\t\tprovide(function() { return data; });\n\t\t\t\t\t})\n\t\t\t\t\t.catch(function() {\n\t\t\t\t\t\tdependency.dfd.reject(new Failure('error parsing', dependency.path));\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\treturn new (HandlerJson.extends(abstractHandler));\n\t}\n\n\tprovide([ 'path', '/demand/abstract/handler', '/demand/task', '/demand/failure', '/demand/validator/isObject', '/demand/function/merge' ], definition);\n}());\n"]}