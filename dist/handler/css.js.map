{"version":3,"sources":["handler/css.js"],"names":["document","provide","path","abstractHandler","functionResolveSourcemaps","isObject","merge","target","getElementsByTagName","resolver","createElement","regexMatchUrl","regexMatchImport","regexIsAbsolutePath","regexIsAbsoluteUri","regexMatchType","settings","suffix","resolveUrl","url","href","replaceUri","source","match","replacement","test","replace","HandlerCss","demand","on","options","prototype","validate","type","onPreRequest","dependency","pathname","slice","length","onPostRequest","base","host","exec","process","element","querySelector","id","setAttribute","appendChild","tagName","styleSheet","cssText","textContent","extends"],"mappings":";CAAC,SAASA,GACT,aA6FAC,QAAQ,CAAE,OAAQ,2BAA4B,qCAAsC,6BAA8B,2BA3FlH,SAAoBC,EAAMC,EAAiBC,EAA2BC,EAAUC,GAC/E,IAAIC,EAAsBP,EAASQ,qBAAqB,QAAQ,GAC/DC,EAAsBT,EAASU,cAAc,KAC7CC,EAAsB,oCACtBC,EAAsB,4BACtBC,EAAsB,OACtBC,EAAsB,yBACtBC,EAAsB,aACtBC,EAAsB,CAAEC,OAAQ,QASjC,SAASC,EAAWC,GAGnB,OAFAV,EAASW,KAAOD,EAETV,EAGR,SAASY,EAAWC,EAAQC,EAAOC,GAKlC,OAJIV,EAAmBW,KAAKF,EAAM,MACjCD,EAASA,EAAOI,QAAQH,EAAM,GAAIC,IAG5BF,EAGR,SAASK,KAyDT,OA9EAC,OACEC,GAAG,iBAAmB3B,GAAM,SAAS4B,GAClCzB,EAASyB,IACXxB,EAAMU,EAAUc,MAoBnBH,EAAWI,UAAY,CACtBC,SAAU,SAASC,GAClB,OAAOlB,EAAeU,KAAKQ,IAE5BC,aAAc,SAASC,EAAYlB,GAClC,IAAImB,GAEJnB,EAA4B,oBAAXA,EAA0BA,EAASD,EAASC,UAG5DmB,EAAWD,EAAWhB,IAAIiB,SAE1BD,EAAWhB,IAAIiB,SAAWA,EAASC,OAAOpB,EAAOqB,UAAYrB,EAASmB,EAAWnB,EAASmB,IAG5FG,cAAe,SAASJ,GAOvB,IANA,IAICZ,EAJGJ,EAAUD,EAAWiB,EAAWhB,IAAM,OACzCqB,EAAUrB,EAAIC,KACdqB,EAAU,KAAOtB,EAAIsB,KACrBnB,EAAUa,EAAWb,OAGfC,EAAQZ,EAAc+B,KAAKpB,IACjCA,EAASD,EAAWC,EAAQC,EAAO,QAAUL,EAAWL,EAAoBY,KAAKF,EAAM,IAAMkB,EAAOlB,EAAM,GAAKiB,EAAOjB,EAAM,IAAIH,KAAO,MAGxI,KAAOG,EAAQX,EAAiB8B,KAAKpB,IACpCA,EAASD,EAAWC,EAAQC,EAAO,YAAcL,EAAWL,EAAoBY,KAAKF,EAAM,IAAMkB,EAAOlB,EAAM,GAAKiB,EAAOjB,EAAM,IAAIH,KAAO,KAG5Ie,EAAWb,OAASlB,EAA0B+B,EAAWhB,IAAKG,IAE/DqB,QAAS,SAASR,GACjB,IAAIS,EAAU5C,EAAS6C,cAAc,eAAiBV,EAAWW,GAAK,MAElEF,KACHA,EAAe5C,EAASU,cAAc,UAC9BuB,KAAO,WAEfW,EAAQG,aAAa,YAAaZ,EAAWW,IAC7CvC,EAAOyC,YAAYJ,IAGG,UAApBA,EAAQK,UACPL,EAAQM,WACVN,EAAQM,WAAWC,QAAUhB,EAAWb,OAExCsB,EAAQQ,YAAcjB,EAAWb,QAInCrB,SAAQ,WAAa,OAAO2C,OAIvB,IAAKjB,EAAW0B,QAAQlD,OA3FjC,CA+FEH","file":"css.js","sourcesContent":["(function(document) {\n\t'use strict';\n\n\tfunction definition(path, abstractHandler, functionResolveSourcemaps, isObject, merge) {\n\t\tvar target              = document.getElementsByTagName('head')[0],\n\t\t\tresolver            = document.createElement('a'),\n\t\t\tregexMatchUrl       = /url\\s*\\(\\s*[\"']?(.+?)[\"']?\\s*\\)/gi,\n\t\t\tregexMatchImport    = /@import\\s+[\"'](.+?)[\"']/gi,\n\t\t\tregexIsAbsolutePath = /^\\//i,\n\t\t\tregexIsAbsoluteUri  = /^data:|http(s?):|\\/\\//i,\n\t\t\tregexMatchType      = /^text\\/css/,\n\t\t\tsettings            = { suffix: '.css' };\n\n\t\tdemand\n\t\t\t.on('postConfigure:' + path, function(options) {\n\t\t\t\tif(isObject(options)) {\n\t\t\t\t\tmerge(settings, options);\n\t\t\t\t}\n\t\t\t});\n\n\t\tfunction resolveUrl(url) {\n\t\t\tresolver.href = url;\n\n\t\t\treturn resolver;\n\t\t}\n\n\t\tfunction replaceUri(source, match, replacement) {\n\t\t\tif(!regexIsAbsoluteUri.test(match[1])) {\n\t\t\t\tsource = source.replace(match[0], replacement);\n\t\t\t}\n\n\t\t\treturn source;\n\t\t}\n\n\t\tfunction HandlerCss() {}\n\n\t\tHandlerCss.prototype = {\n\t\t\tvalidate: function(type) {\n\t\t\t\treturn regexMatchType.test(type);\n\t\t\t},\n\t\t\tonPreRequest: function(dependency, suffix) {\n\t\t\t\tvar pathname;\n\n\t\t\t\tsuffix = (typeof suffix !== 'undefined') ? suffix : settings.suffix;\n\n\t\t\t\tif(suffix) {\n\t\t\t\t\tpathname = dependency.url.pathname;\n\n\t\t\t\t\tdependency.url.pathname = pathname.slice(-suffix.length) !== suffix ? pathname + suffix : pathname;\n\t\t\t\t}\n\t\t\t},\n\t\t\tonPostRequest: function(dependency) {\n\t\t\t\tvar url     = resolveUrl(dependency.url + '/..'),\n\t\t\t\t\tbase    = url.href,\n\t\t\t\t\thost    = '//' + url.host,\n\t\t\t\t\tsource  = dependency.source,\n\t\t\t\t\tmatch;\n\n\t\t\t\twhile((match = regexMatchUrl.exec(source))) {\n\t\t\t\t\tsource = replaceUri(source, match, 'url(\"' + resolveUrl(regexIsAbsolutePath.test(match[1]) ? host + match[1] : base + match[1]).href + '\")');\n\t\t\t\t}\n\n\t\t\t\twhile((match = regexMatchImport.exec(source))) {\n\t\t\t\t\tsource = replaceUri(source, match, '@import \"' + resolveUrl(regexIsAbsolutePath.test(match[1]) ? host + match[1] : base + match[1]).href + '\"');\n\t\t\t\t}\n\n\t\t\t\tdependency.source = functionResolveSourcemaps(dependency.url, source);\n\t\t\t},\n\t\t\tprocess: function(dependency) {\n\t\t\t\tvar element = document.querySelector('[demand-id=\"' + dependency.id + '\"]');\n\n\t\t\t\tif(!element) {\n\t\t\t\t\telement      = document.createElement('style');\n\t\t\t\t\telement.type = 'text/css';\n\n\t\t\t\t\telement.setAttribute('demand-id', dependency.id);\n\t\t\t\t\ttarget.appendChild(element);\n\t\t\t\t}\n\n\t\t\t\tif(element.tagName === 'STYLE') {\n\t\t\t\t\tif(element.styleSheet) {\n\t\t\t\t\t\telement.styleSheet.cssText = dependency.source;\n\t\t\t\t\t} else {\n\t\t\t\t\t\telement.textContent = dependency.source;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tprovide(function() { return element; });\n\t\t\t}\n\t\t};\n\n\t\treturn new (HandlerCss.extends(abstractHandler));\n\t}\n\n\tprovide([ 'path', '/demand/abstract/handler', '/demand/function/resolveSourcemaps', '/demand/validator/isObject', '/demand/function/merge' ], definition);\n}(document));\n"]}