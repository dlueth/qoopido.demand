{"version":3,"sources":["handler/css.js"],"names":["document","provide","abstractHandler","functionResolveSourcemaps","target","getElementsByTagName","resolver","createElement","regexMatchUrl","regexMatchImport","regexIsAbsolutePath","regexIsAbsoluteUri","regexMatchType","resolveUrl","url","href","replaceUri","source","match","replacement","test","replace","HandlerCss","prototype","validate","type","onPreRequest","dependency","pathname","slice","length","onPostRequest","base","host","exec","process","element","querySelector","id","setAttribute","appendChild","tagName","styleSheet","cssText","textContent","extends"],"mappings":";CAAC,SAASA,GACT,aAgFAC,QAAQ,CAAE,2BAA4B,sCA9EtC,SAAoBC,EAAiBC,GACpC,IACCC,EAAsBJ,EAASK,qBAAqB,QAAQ,GAC5DC,EAAsBN,EAASO,cAAc,KAC7CC,EAAsB,oCACtBC,EAAsB,4BACtBC,EAAsB,OACtBC,EAAsB,yBACtBC,EAAsB,aAEvB,SAASC,EAAWC,GAGnB,OAFAR,EAASS,KAAOD,EAETR,EAGR,SAASU,EAAWC,EAAQC,EAAOC,GAKlC,OAJIR,EAAmBS,KAAKF,EAAM,MACjCD,EAASA,EAAOI,QAAQH,EAAM,GAAIC,IAG5BF,EAGR,SAASK,KAmDT,OAjDAA,EAAWC,UAAY,CACtBC,SAAU,SAASC,GAClB,OAAOb,EAAeQ,KAAKK,IAE5BC,aAAc,SAASC,GACtB,IAAIC,EAAWD,EAAWb,IAAIc,SAE9BD,EAAWb,IAAIc,SAhCS,SAgCEA,EAASC,OAhCX,OAgCyBC,QAAqBF,EAhC9C,OAgCkEA,GAE3FG,cAAe,SAASJ,GAOvB,IANA,IAICT,EAJGJ,EAAUD,EAAWc,EAAWb,IAAM,OACzCkB,EAAUlB,EAAIC,KACdkB,EAAU,KAAOnB,EAAImB,KACrBhB,EAAUU,EAAWV,OAGfC,EAAQV,EAAc0B,KAAKjB,IACjCA,EAASD,EAAWC,EAAQC,EAAO,QAAUL,EAAWH,EAAoBU,KAAKF,EAAM,IAAMe,EAAOf,EAAM,GAAKc,EAAOd,EAAM,IAAIH,KAAO,MAGxI,KAAOG,EAAQT,EAAiByB,KAAKjB,IACpCA,EAASD,EAAWC,EAAQC,EAAO,YAAcL,EAAWH,EAAoBU,KAAKF,EAAM,IAAMe,EAAOf,EAAM,GAAKc,EAAOd,EAAM,IAAIH,KAAO,KAG5IY,EAAWV,OAASd,EAA0BwB,EAAWb,IAAKG,IAE/DkB,QAAS,SAASR,GACjB,IAAIS,EAAUpC,EAASqC,cAAc,eAAiBV,EAAWW,GAAK,MAElEF,KACHA,EAAepC,EAASO,cAAc,UAC9BkB,KAAO,WAEfW,EAAQG,aAAa,YAAaZ,EAAWW,IAC7ClC,EAAOoC,YAAYJ,IAGG,UAApBA,EAAQK,UACPL,EAAQM,WACVN,EAAQM,WAAWC,QAAUhB,EAAWV,OAExCmB,EAAQQ,YAAcjB,EAAWV,QAInChB,QAAQ,WAAa,OAAOmC,MAIvB,IAAKd,EAAWuB,QAAQ3C,MA9EjC,CAkFEF","file":"css.js","sourcesContent":["(function(document) {\n\t'use strict';\n\n\tfunction definition(abstractHandler, functionResolveSourcemaps) {\n\t\tvar suffix              = '.css',\n\t\t\ttarget              = document.getElementsByTagName('head')[0],\n\t\t\tresolver            = document.createElement('a'),\n\t\t\tregexMatchUrl       = /url\\s*\\(\\s*[\"']?(.+?)[\"']?\\s*\\)/gi,\n\t\t\tregexMatchImport    = /@import\\s+[\"'](.+?)[\"']/gi,\n\t\t\tregexIsAbsolutePath = /^\\//i,\n\t\t\tregexIsAbsoluteUri  = /^data:|http(s?):|\\/\\//i,\n\t\t\tregexMatchType      = /^text\\/css/;\n\n\t\tfunction resolveUrl(url) {\n\t\t\tresolver.href = url;\n\n\t\t\treturn resolver;\n\t\t}\n\n\t\tfunction replaceUri(source, match, replacement) {\n\t\t\tif(!regexIsAbsoluteUri.test(match[1])) {\n\t\t\t\tsource = source.replace(match[0], replacement);\n\t\t\t}\n\n\t\t\treturn source;\n\t\t}\n\n\t\tfunction HandlerCss() {}\n\n\t\tHandlerCss.prototype = {\n\t\t\tvalidate: function(type) {\n\t\t\t\treturn regexMatchType.test(type);\n\t\t\t},\n\t\t\tonPreRequest: function(dependency) {\n\t\t\t\tvar pathname = dependency.url.pathname;\n\t\t\t\t\n\t\t\t\tdependency.url.pathname = pathname.slice(-suffix.length) !== suffix ? pathname + suffix : pathname;\n\t\t\t},\n\t\t\tonPostRequest: function(dependency) {\n\t\t\t\tvar url     = resolveUrl(dependency.url + '/..'),\n\t\t\t\t\tbase    = url.href,\n\t\t\t\t\thost    = '//' + url.host,\n\t\t\t\t\tsource  = dependency.source,\n\t\t\t\t\tmatch;\n\n\t\t\t\twhile((match = regexMatchUrl.exec(source))) {\n\t\t\t\t\tsource = replaceUri(source, match, 'url(\"' + resolveUrl(regexIsAbsolutePath.test(match[1]) ? host + match[1] : base + match[1]).href + '\")');\n\t\t\t\t}\n\n\t\t\t\twhile((match = regexMatchImport.exec(source))) {\n\t\t\t\t\tsource = replaceUri(source, match, '@import \"' + resolveUrl(regexIsAbsolutePath.test(match[1]) ? host + match[1] : base + match[1]).href + '\"');\n\t\t\t\t}\n\n\t\t\t\tdependency.source = functionResolveSourcemaps(dependency.url, source);\n\t\t\t},\n\t\t\tprocess: function(dependency) {\n\t\t\t\tvar element = document.querySelector('[demand-id=\"' + dependency.id + '\"]');\n\n\t\t\t\tif(!element) {\n\t\t\t\t\telement      = document.createElement('style');\n\t\t\t\t\telement.type = 'text/css';\n\n\t\t\t\t\telement.setAttribute('demand-id', dependency.id);\n\t\t\t\t\ttarget.appendChild(element);\n\t\t\t\t}\n\n\t\t\t\tif(element.tagName === 'STYLE') {\n\t\t\t\t\tif(element.styleSheet) {\n\t\t\t\t\t\telement.styleSheet.cssText = dependency.source;\n\t\t\t\t\t} else {\n\t\t\t\t\t\telement.textContent = dependency.source;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tprovide(function() { return element; });\n\t\t\t}\n\t\t};\n\n\t\treturn new (HandlerCss.extends(abstractHandler));\n\t}\n\n\tprovide([ '/demand/abstract/handler', '/demand/function/resolveSourcemaps' ], definition);\n}(document));"]}