{"version":3,"sources":["handler/css.js"],"names":["document","provide","abstractHandler","functionResolveSourcemaps","resolveUrl","url","resolver","href","replaceUri","source","match","replacement","regexIsAbsoluteUri","test","replace","HandlerCss","suffix","target","getElementsByTagName","createElement","regexMatchUrl","regexMatchImport","regexIsAbsolutePath","regexMatchType","prototype","validate","type","onPreRequest","dependency","pathname","slice","length","onPostRequest","base","host","exec","process","element","querySelector","id","setAttribute","appendChild","tagName","styleSheet","cssText","textContent","extends"],"mappings":";CAAA,SAAAA,GACA,aA2DAC,QAAA,CAAA,2BAAA,sCAzDA,SAAAC,EAAAC,GACA,SAAAC,EAAAC,GAEA,OADAC,EAAAC,KAAAF,EACAC,EAGA,SAAAE,EAAAC,EAAAC,EAAAC,GAEA,OADAC,EAAAC,KAAAH,EAAA,MAAAD,EAAAA,EAAAK,QAAAJ,EAAA,GAAAC,IACAF,EAGA,SAAAM,KACA,IAAAC,EAAA,OACAC,EAAAjB,EAAAkB,qBAAA,QAAA,GACAZ,EAAAN,EAAAmB,cAAA,KACAC,EAAA,oCACAC,EAAA,4BACAC,EAAA,OACAV,EAAA,yBACAW,EAAA,aAoCA,OAnCAR,EAAAS,UAAA,CACAC,SAAA,SAAAC,GACA,OAAAH,EAAAV,KAAAa,IAEAC,aAAA,SAAAC,GACA,IAAAC,EAAAD,EAAAvB,IAAAwB,SACAD,EAAAvB,IAAAwB,SAAAA,EAAAC,OAAAd,EAAAe,UAAAf,EAAAa,EAAAb,EAAAa,GAEAG,cAAA,SAAAJ,GAKA,IAJA,IAAAlB,EAAAL,EAAAD,EAAAwB,EAAAvB,IAAA,OACA4B,EAAA5B,EAAAE,KACA2B,EAAA,KAAA7B,EAAA6B,KACAzB,EAAAmB,EAAAnB,OACAC,EAAAU,EAAAe,KAAA1B,IAAAA,EAAAD,EAAAC,EAAAC,EAAA,QAAAN,EAAAkB,EAAAT,KAAAH,EAAA,IAAAwB,EAAAxB,EAAA,GAAAuB,EAAAvB,EAAA,IACAH,KAAA,MACA,KAAAG,EAAAW,EAAAc,KAAA1B,IAAAA,EAAAD,EAAAC,EAAAC,EAAA,YAAAN,EAAAkB,EAAAT,KAAAH,EAAA,IAAAwB,EAAAxB,EAAA,GAAAuB,EAAAvB,EAAA,IACAH,KAAA,KACAqB,EAAAnB,OAAAN,EAAAyB,EAAAvB,IAAAI,IAEA2B,QAAA,SAAAR,GACA,IAAAS,EAAArC,EAAAsC,cAAA,eAAAV,EAAAW,GAAA,MACAF,KACAA,EAAArC,EAAAmB,cAAA,UACAO,KAAA,WACAW,EAAAG,aAAA,YAAAZ,EAAAW,IACAtB,EAAAwB,YAAAJ,IAEA,UAAAA,EAAAK,UACAL,EAAAM,WAAAN,EAAAM,WAAAC,QAAAhB,EAAAnB,OACA4B,EAAAQ,YAAAjB,EAAAnB,QACAR,QAAA,WACA,OAAAoC,MAIA,IAAAtB,EAAA+B,QAAA5C,MA1DA,CA6DAF","file":"css.js","sourcesContent":["/**! Qoopido.demand 5.1.1 | https://github.com/dlueth/qoopido.demand | (c) 2018 Dirk Lueth */\n(function (document) {\n\t\"use strict\";\n\n\tfunction definition(abstractHandler, functionResolveSourcemaps) {\n\t\tfunction resolveUrl(url) {\n\t\t\tresolver.href = url;\n\t\t\treturn resolver\n\t\t}\n\n\t\tfunction replaceUri(source, match, replacement) {\n\t\t\tif (!regexIsAbsoluteUri.test(match[1])) source = source.replace(match[0], replacement);\n\t\t\treturn source\n\t\t}\n\n\t\tfunction HandlerCss() {}\n\t\tvar suffix = \".css\",\n\t\t\ttarget = document.getElementsByTagName(\"head\")[0],\n\t\t\tresolver = document.createElement(\"a\"),\n\t\t\tregexMatchUrl = /url\\s*\\(\\s*[\"']?(.+?)[\"']?\\s*\\)/gi,\n\t\t\tregexMatchImport = /@import\\s+[\"'](.+?)[\"']/gi,\n\t\t\tregexIsAbsolutePath = /^\\//i,\n\t\t\tregexIsAbsoluteUri = /^data:|http(s?):|\\/\\//i,\n\t\t\tregexMatchType = /^text\\/css/;\n\t\tHandlerCss.prototype = {\n\t\t\tvalidate: function (type) {\n\t\t\t\treturn regexMatchType.test(type)\n\t\t\t},\n\t\t\tonPreRequest: function (dependency) {\n\t\t\t\tvar pathname = dependency.url.pathname;\n\t\t\t\tdependency.url.pathname = pathname.slice(-suffix.length) !== suffix ? pathname + suffix : pathname\n\t\t\t},\n\t\t\tonPostRequest: function (dependency) {\n\t\t\t\tvar match, url = resolveUrl(dependency.url + \"/..\"),\n\t\t\t\t\tbase = url.href,\n\t\t\t\t\thost = \"//\" + url.host,\n\t\t\t\t\tsource = dependency.source;\n\t\t\t\twhile (match = regexMatchUrl.exec(source)) source = replaceUri(source, match, 'url(\"' + resolveUrl(regexIsAbsolutePath.test(match[1]) ? host + match[1] : base + match[1])\n\t\t\t\t\t.href + '\")');\n\t\t\t\twhile (match = regexMatchImport.exec(source)) source = replaceUri(source, match, '@import \"' + resolveUrl(regexIsAbsolutePath.test(match[1]) ? host + match[1] : base + match[1])\n\t\t\t\t\t.href + '\"');\n\t\t\t\tdependency.source = functionResolveSourcemaps(dependency.url, source)\n\t\t\t},\n\t\t\tprocess: function (dependency) {\n\t\t\t\tvar element = document.querySelector('[demand-id=\"' + dependency.id + '\"]');\n\t\t\t\tif (!element) {\n\t\t\t\t\t(element = document.createElement(\"style\"))\n\t\t\t\t\t.type = \"text/css\";\n\t\t\t\t\telement.setAttribute(\"demand-id\", dependency.id);\n\t\t\t\t\ttarget.appendChild(element)\n\t\t\t\t}\n\t\t\t\tif (\"STYLE\" === element.tagName)\n\t\t\t\t\tif (element.styleSheet) element.styleSheet.cssText = dependency.source;\n\t\t\t\t\telse element.textContent = dependency.source;\n\t\t\t\tprovide(function () {\n\t\t\t\t\treturn element\n\t\t\t\t})\n\t\t\t}\n\t\t};\n\t\treturn new(HandlerCss.extends(abstractHandler))\n\t}\n\tprovide([\"/demand/abstract/handler\", \"/demand/function/resolveSourcemaps\"], definition)\n})(document);\n"]}