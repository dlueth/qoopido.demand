{"version":3,"sources":["handler/legacy.js"],"names":["provide","path","Failure","handlerModule","isObject","HandlerLegacy","settings","demand","on","options","prototype","onPreRequest","dependency","dependencies","enqueue","apply","onPreProcess","process","boundResolve","result","self","this","dfd","probe","reject","bind","then","arguments","extends"],"mappings":";CAAA,WACA,aAuCAA,SAAA,OAAA,kBAAA,yBAAA,8BArCA,SAAAC,EAAAC,EAAAC,EAAAC,GAYA,SAAAC,KACA,IAAAC,KAsBA,OArBAC,OAAAC,GAAA,iBAAAP,EAAA,SAAAQ,GACAH,EAAAF,EAAAK,GAAAA,OAEAJ,EAAAK,WACAC,aAAA,SAAAC,GACA,IAAAC,EAAAP,EAAAM,EAAAX,OAAAK,EAAAM,EAAAX,MAAAY,aACAV,EAAAQ,aAAAC,GACAC,IAAAD,EAAAE,QAAAP,OAAAQ,MAAA,KAAAF,KAEAG,aAAA,SAAAJ,GACA,IAAAC,EAAAP,EAAAM,EAAAX,OAAAK,EAAAM,EAAAX,MAAAY,aACAA,GAAA,kBAAAD,EAAAE,UAAAF,EAAAE,QAAAP,OAAAQ,MAAA,KAAAF,KAEAI,QAAA,SAAAL,GACA,IAAAM,EA3BA,WACA,IAAAC,EAAAC,EAAAC,KACAC,EAAAF,EAAAE,IACAC,EAAAjB,EAAAc,EAAAnB,OAAAK,EAAAc,EAAAnB,MAAAsB,MACApB,EAAAc,QAAAG,GACAG,IAAAJ,EAAAI,KAAAvB,QAAA,WACA,OAAAmB,IAEAG,EAAAE,OAAA,IAAAtB,EAAA,gBAAAkB,EAAAnB,QAmBAwB,KAAAb,IACA,IAAAA,EAAAE,QAAAI,IACAN,EAAAE,QAAAY,KAAAR,EAAA,WACAN,EAAAU,IAAAE,OAAA,IAAAtB,EAAA,kBAAAU,EAAAX,KAAA0B,gBAIA,IAAAtB,EAAAuB,QAAAzB,MAtCA","file":"legacy.js","sourcesContent":["/**! Qoopido.demand 5.0.2 | https://github.com/dlueth/qoopido.demand | (c) 2018 Dirk Lueth */\n(function () {\n\t\"use strict\";\n\n\tfunction definition(path, Failure, handlerModule, isObject) {\n\t\tfunction resolve() {\n\t\t\tvar result, self = this,\n\t\t\t\tdfd = self.dfd,\n\t\t\t\tprobe = settings[self.path] && settings[self.path].probe;\n\t\t\thandlerModule.process(self);\n\t\t\tif (probe && (result = probe())) provide(function () {\n\t\t\t\treturn result\n\t\t\t});\n\t\t\telse dfd.reject(new Failure(\"error probing\", self.path))\n\t\t}\n\n\t\tfunction HandlerLegacy() {}\n\t\tvar settings = {};\n\t\tdemand.on(\"postConfigure:\" + path, function (options) {\n\t\t\tsettings = isObject(options) ? options : {}\n\t\t});\n\t\tHandlerLegacy.prototype = {\n\t\t\tonPreRequest: function (dependency) {\n\t\t\t\tvar dependencies = settings[dependency.path] && settings[dependency.path].dependencies;\n\t\t\t\thandlerModule.onPreRequest(dependency);\n\t\t\t\tif (dependencies) dependency.enqueue = demand.apply(null, dependencies)\n\t\t\t},\n\t\t\tonPreProcess: function (dependency) {\n\t\t\t\tvar dependencies = settings[dependency.path] && settings[dependency.path].dependencies;\n\t\t\t\tif (dependencies && \"boolean\" === typeof dependency.enqueue) dependency.enqueue = demand.apply(null, dependencies)\n\t\t\t},\n\t\t\tprocess: function (dependency) {\n\t\t\t\tvar boundResolve = resolve.bind(dependency);\n\t\t\t\tif (true === dependency.enqueue) boundResolve();\n\t\t\t\telse dependency.enqueue.then(boundResolve, function () {\n\t\t\t\t\tdependency.dfd.reject(new Failure(\"error resolving\", dependency.path, arguments))\n\t\t\t\t})\n\t\t\t}\n\t\t};\n\t\treturn new(HandlerLegacy.extends(handlerModule))\n\t}\n\tprovide([\"path\", \"/demand/failure\", \"/demand/handler/module\", \"/demand/validator/isObject\"], definition)\n})();\n"]}