{"version":3,"sources":["handler/legacy.js"],"names":["provide","path","Failure","handlerModule","isObject","settings","HandlerLegacy","demand","on","options","prototype","onPreRequest","dependency","dependencies","enqueue","apply","onPreProcess","process","boundResolve","result","dfd","this","probe","reject","bind","then","arguments","extends"],"mappings":";CAAA,WACI,aAmDAA,SAAS,OAAQ,kBAAmB,yBAA0B,8BAjD9D,SAAoBC,EAAMC,EAASC,EAAeC,GAC9C,IAAIC,KAoBJ,SAASC,KA0BT,OA7CAC,OAAOC,GAAG,iBAAmBP,EAAM,SAASQ,GACxCJ,EAAWD,EAASK,GAAWA,OAmBnCH,EAAcI,WACVC,aAAc,SAASC,GACnB,IAAIC,EAAeR,EAASO,EAAWX,OAASI,EAASO,EAAWX,MAAMY,aAC1EV,EAAcQ,aAAaC,GACvBC,IACAD,EAAWE,QAAUP,OAAOQ,MAAM,KAAMF,KAGhDG,aAAc,SAASJ,GACnB,IAAIC,EAAeR,EAASO,EAAWX,OAASI,EAASO,EAAWX,MAAMY,aACtEA,GAA8C,kBAAvBD,EAAWE,UAClCF,EAAWE,QAAUP,OAAOQ,MAAM,KAAMF,KAGhDI,QAAS,SAASL,GACd,IAAIM,EA/BZ,WACI,IAGIC,EAFAC,EADOC,KACID,IACXE,EAAQjB,EAFDgB,KAEepB,OAASI,EAFxBgB,KAEsCpB,MAAMqB,MAEvDnB,EAAcc,QAJHI,MAKPC,IAAUH,EAASG,KACnBtB,QAAQ,WACJ,OAAOmB,IAGXC,EAAIG,OAAO,IAAIrB,EAAQ,gBAVhBmB,KAUsCpB,QAoBlBuB,KAAKZ,IACL,IAAvBA,EAAWE,QACXI,IAEAN,EAAWE,QAAQW,KAAKP,EAAc,WAClCN,EAAWQ,IAAIG,OAAO,IAAIrB,EAAQ,kBAAmBU,EAAWX,KAAMyB,gBAK/E,IAAIpB,EAAcqB,QAAQxB,MAlDzC","file":"legacy.js","sourcesContent":["(function() {\n    \"use strict\";\n\n    function definition(path, Failure, handlerModule, isObject) {\n        var settings = {};\n        demand.on(\"postConfigure:\" + path, function(options) {\n            settings = isObject(options) ? options : {}\n        });\n\n        function resolve() {\n            var self = this,\n                dfd = self.dfd,\n                probe = settings[self.path] && settings[self.path].probe,\n                result;\n            handlerModule.process(self);\n            if (probe && (result = probe())) {\n                provide(function() {\n                    return result\n                })\n            } else {\n                dfd.reject(new Failure(\"error probing\", self.path))\n            }\n        }\n\n        function HandlerLegacy() {}\n        HandlerLegacy.prototype = {\n            onPreRequest: function(dependency) {\n                var dependencies = settings[dependency.path] && settings[dependency.path].dependencies;\n                handlerModule.onPreRequest(dependency);\n                if (dependencies) {\n                    dependency.enqueue = demand.apply(null, dependencies)\n                }\n            },\n            onPreProcess: function(dependency) {\n                var dependencies = settings[dependency.path] && settings[dependency.path].dependencies;\n                if (dependencies && typeof dependency.enqueue === \"boolean\") {\n                    dependency.enqueue = demand.apply(null, dependencies)\n                }\n            },\n            process: function(dependency) {\n                var boundResolve = resolve.bind(dependency);\n                if (dependency.enqueue === true) {\n                    boundResolve()\n                } else {\n                    dependency.enqueue.then(boundResolve, function() {\n                        dependency.dfd.reject(new Failure(\"error resolving\", dependency.path, arguments))\n                    })\n                }\n            }\n        };\n        return new(HandlerLegacy.extends(handlerModule))\n    }\n    provide([\"path\", \"/demand/failure\", \"/demand/handler/module\", \"/demand/validator/isObject\"], definition)\n})();"]}