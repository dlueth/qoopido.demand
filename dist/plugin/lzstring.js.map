{"version":3,"sources":["plugin/lzstring.js"],"names":["definition","path","iterate","isObject","isTypeOf","compressUTF16","uncompressed","bitsPerChar","subprocess","contextDataPosition","contextData","push","getCharFromInt","contextDataVal","process","objectPrototypeHasOwnProperty","call","contextDictionaryToCreate","contextW","charCodeAt","i","contextNumBits","value","contextEnlargeIn","Math","pow","contextDictionary","contextC","contextWc","contextDictSize","ii","charAt","String","join","decompressUTF16","compressed","length","resetValue","maxpower","bits","power","resb","data","val","position","getNextValue","index","w","c","dictionary","enlargeIn","dictSize","numBits","entry","result","mathPow22","mathPow28","stringFormCharCode","mathPow216","a","compress","input","decompress","isEnabled","pointer","match","pattern","indexOf","weight","state","fromCharCode","Object","prototype","hasOwnProperty","storage","demand","on","options","key","dependency","id","source","provide"],"mappings":"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","file":"lzstring.js","sourcesContent":["/**\n * Based on lz-string:\n *   Repo:    https://github.com/pieroxy/lz-string\n *   License: https://github.com/pieroxy/lz-string/blob/master/LICENSE.txt\n */\n\n(function() {\n\t'use strict';\n\n\tfunction definition(path, iterate, isObject, isTypeOf) {\n\t\tvar stringFormCharCode            = String.fromCharCode,\n\t\t\tobjectPrototypeHasOwnProperty = Object.prototype.hasOwnProperty,\n\t\t\tmathPow22                     = Math.pow(2, 2),\n\t\t\tmathPow28                     = Math.pow(2, 8),\n\t\t\tmathPow216                    = Math.pow(2, 16),\n\t\t\tpattern                       = [ { pattern: path, weight: path.length, state: false }],\n\t\t\tstorage                       = {};\n\n\t\tdemand\n\t\t\t.on('postConfigure:' + path, function(options) {\n\t\t\t\tif(isObject(options)) {\n\t\t\t\t\tpattern.length = 0;\n\n\t\t\t\t\titerate(options, function(key, value) {\n\t\t\t\t\t\tpattern.push({ pattern: key, weight: key.length, state: value });\n\t\t\t\t\t});\n\t\t\t\t} else if(isTypeOf(options, 'boolean')) {\n\t\t\t\t\tpattern.push({ pattern: '', weight: 0, state: options });\n\t\t\t\t}\n\t\t\t})\n\t\t\t.on('cacheHit', function(dependency) {\n\t\t\t\tif(isEnabled(dependency.path)) {\n\t\t\t\t\tstorage[dependency.id] = true;\n\t\t\t\t}\n\t\t\t})\n\t\t\t.on('preCache', function(dependency) {\n\t\t\t\tif(isEnabled(dependency.path)) {\n\t\t\t\t\tdependency.source = compress(dependency.source);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.on('preProcess', function(dependency) {\n\t\t\t\tif(storage[dependency.id]) {\n\t\t\t\t\tdependency.source = decompress(dependency.source);\n\t\t\t\t}\n\t\t\t});\n\n\t\tfunction compressUTF16(uncompressed, bitsPerChar) {\n\t\t\tvar contextDictionary         = {},\n\t\t\t\tcontextDictionaryToCreate = {},\n\t\t\t\tcontextC                  = '',\n\t\t\t\tcontextWc                 = '',\n\t\t\t\tcontextW                  = '',\n\t\t\t\tcontextEnlargeIn          = 2,\n\t\t\t\tcontextDictSize           = 3,\n\t\t\t\tcontextNumBits            = 2,\n\t\t\t\tcontextData               = [],\n\t\t\t\tcontextDataVal            = 0,\n\t\t\t\tcontextDataPosition       = 0,\n\t\t\t\tii = 0, i, value;\n\n\t\t\tbitsPerChar -= 1;\n\n\t\t\tfunction subprocess() {\n\t\t\t\tif(contextDataPosition === bitsPerChar) {\n\t\t\t\t\tcontextData.push(getCharFromInt(contextDataVal));\n\n\t\t\t\t\tcontextDataPosition = 0;\n\t\t\t\t\tcontextDataVal      = 0;\n\t\t\t\t} else {\n\t\t\t\t\tcontextDataPosition++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction process() {\n\t\t\t\tif(objectPrototypeHasOwnProperty.call(contextDictionaryToCreate, contextW)) {\n\t\t\t\t\tif(contextW.charCodeAt(0) < 256) {\n\t\t\t\t\t\tfor(i = 0; i < contextNumBits; i++) {\n\t\t\t\t\t\t\tcontextDataVal = (contextDataVal << 1);\n\n\t\t\t\t\t\t\tsubprocess();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvalue = contextW.charCodeAt(0);\n\n\t\t\t\t\t\tfor(i = 0; i < 8; i++) {\n\t\t\t\t\t\t\tcontextDataVal = (contextDataVal << 1) | (value & 1);\n\n\t\t\t\t\t\t\tsubprocess();\n\n\t\t\t\t\t\t\tvalue = value >> 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue = 1;\n\n\t\t\t\t\t\tfor(i = 0; i < contextNumBits; i++) {\n\t\t\t\t\t\t\tcontextDataVal = (contextDataVal << 1) | value;\n\n\t\t\t\t\t\t\tsubprocess();\n\n\t\t\t\t\t\t\tvalue = 0;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvalue = contextW.charCodeAt(0);\n\n\t\t\t\t\t\tfor(i = 0; i < 16; i++) {\n\t\t\t\t\t\t\tcontextDataVal = (contextDataVal << 1) | (value & 1);\n\n\t\t\t\t\t\t\tsubprocess();\n\n\t\t\t\t\t\t\tvalue = value >> 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcontextEnlargeIn--;\n\n\t\t\t\t\tif(contextEnlargeIn === 0) {\n\t\t\t\t\t\tcontextEnlargeIn = Math.pow(2, contextNumBits);\n\n\t\t\t\t\t\tcontextNumBits++;\n\t\t\t\t\t}\n\n\t\t\t\t\tdelete contextDictionaryToCreate[contextW];\n\t\t\t\t} else {\n\t\t\t\t\tvalue = contextDictionary[contextW];\n\n\t\t\t\t\tfor(i = 0; i < contextNumBits; i++) {\n\t\t\t\t\t\tcontextDataVal = (contextDataVal << 1) | (value & 1);\n\n\t\t\t\t\t\tsubprocess();\n\n\t\t\t\t\t\tvalue = value >> 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcontextEnlargeIn--;\n\t\t\t}\n\n\t\t\tfor(; uncompressed[ii]; ii++) {\n\t\t\t\tcontextC = uncompressed.charAt(ii);\n\n\t\t\t\tif(!objectPrototypeHasOwnProperty.call(contextDictionary, contextC)) {\n\t\t\t\t\tcontextDictionary[contextC]         = contextDictSize++;\n\t\t\t\t\tcontextDictionaryToCreate[contextC] = true;\n\t\t\t\t}\n\n\t\t\t\tcontextWc = contextW + contextC;\n\n\t\t\t\tif(objectPrototypeHasOwnProperty.call(contextDictionary, contextWc)) {\n\t\t\t\t\tcontextW = contextWc;\n\t\t\t\t} else {\n\t\t\t\t\tprocess();\n\n\t\t\t\t\tif(contextEnlargeIn === 0) {\n\t\t\t\t\t\tcontextEnlargeIn = Math.pow(2, contextNumBits);\n\n\t\t\t\t\t\tcontextNumBits++;\n\t\t\t\t\t}\n\n\t\t\t\t\tcontextDictionary[contextWc] = contextDictSize++;\n\t\t\t\t\tcontextW                      = String(contextC);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (contextW !== '') {\n\t\t\t\tprocess();\n\n\t\t\t\tif(contextEnlargeIn === 0) {\n\t\t\t\t\tcontextNumBits++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvalue = 2;\n\n\t\t\tfor(i = 0 ; i < contextNumBits ; i++) {\n\t\t\t\tcontextDataVal = (contextDataVal << 1) | (value&1);\n\n\t\t\t\tsubprocess();\n\n\t\t\t\tvalue = value >> 1;\n\t\t\t}\n\n\t\t\twhile(true) { // eslint-disable-line no-constant-condition\n\t\t\t\tcontextDataVal = (contextDataVal << 1);\n\n\t\t\t\tif(contextDataPosition === bitsPerChar) {\n\t\t\t\t\tcontextData.push(getCharFromInt(contextDataVal));\n\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tcontextDataPosition++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn contextData.join('');\n\t\t}\n\n\t\tfunction decompressUTF16(compressed, length, resetValue) {\n\t\t\tvar dictionary = [],\n\t\t\t\tenlargeIn  = 4,\n\t\t\t\tdictSize   = 4,\n\t\t\t\tnumBits    = 3,\n\t\t\t\tentry      = '',\n\t\t\t\tresult     = [],\n\t\t\t\tdata       = { val: getNextValue(compressed, 0), position: resetValue, index: 1 },\n\t\t\t\tbits       = 0,\n\t\t\t\tmaxpower   = mathPow22,\n\t\t\t\tpower      = 1,\n\t\t\t\tnext, i, w, resb, c;\n\n\t\t\tfunction process(maxpower) {\n\t\t\t\tbits  = 0;\n\t\t\t\tpower = 1;\n\n\t\t\t\twhile(power !== maxpower) {\n\t\t\t\t\tresb = data.val & data.position;\n\n\t\t\t\t\tdata.position >>= 1;\n\n\t\t\t\t\tif(data.position === 0) {\n\t\t\t\t\t\tdata.position = resetValue;\n\t\t\t\t\t\tdata.val      = getNextValue(compressed, data.index++);\n\t\t\t\t\t}\n\n\t\t\t\t\tbits |= (resb > 0 ? 1 : 0) * power;\n\t\t\t\t\tpower <<= 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor(i = 0; i < 3; i++) {\n\t\t\t\tdictionary[i] = i;\n\t\t\t}\n\n\t\t\tprocess(maxpower);\n\n\t\t\tnext = bits;\n\n\t\t\tswitch(next) {\n\t\t\t\tcase 0:\n\t\t\t\t\tprocess(mathPow28);\n\n\t\t\t\t\tc = stringFormCharCode(bits);\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:\n\t\t\t\t\tprocess(mathPow216);\n\n\t\t\t\t\tc = stringFormCharCode(bits);\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\tdictionary[3] = c;\n\t\t\tw             = c;\n\n\t\t\tresult.push(c);\n\n\t\t\twhile(true) { // eslint-disable-line no-constant-condition\n\t\t\t\tif(data.index > length) {\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\n\t\t\t\tprocess(Math.pow(2, numBits));\n\n\t\t\t\tswitch(c = bits) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tprocess(mathPow28);\n\n\t\t\t\t\t\tdictionary[dictSize++] = stringFormCharCode(bits);\n\t\t\t\t\t\tc                      = dictSize - 1;\n\n\t\t\t\t\t\tenlargeIn--;\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tprocess(mathPow216);\n\n\t\t\t\t\t\tdictionary[dictSize++] = stringFormCharCode(bits);\n\t\t\t\t\t\tc                      = dictSize - 1;\n\n\t\t\t\t\t\tenlargeIn--;\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\treturn result.join('');\n\t\t\t\t}\n\n\t\t\t\tif(enlargeIn === 0) {\n\t\t\t\t\tenlargeIn = Math.pow(2, numBits);\n\n\t\t\t\t\tnumBits++;\n\t\t\t\t}\n\n\t\t\t\tif(dictionary[c]) {\n\t\t\t\t\tentry = dictionary[c];\n\t\t\t\t} else {\n\t\t\t\t\tif(c === dictSize) {\n\t\t\t\t\t\tentry = w + w.charAt(0);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tresult.push(entry);\n\n\t\t\t\tdictionary[dictSize++] = w + entry.charAt(0);\n\n\t\t\t\tenlargeIn--;\n\n\t\t\t\tw = entry;\n\n\t\t\t\tif(enlargeIn === 0) {\n\t\t\t\t\tenlargeIn = Math.pow(2, numBits);\n\n\t\t\t\t\tnumBits++;\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t\tfunction getCharFromInt(a) {\n\t\t\treturn stringFormCharCode(a + 32);\n\t\t}\n\n\t\tfunction getNextValue(compressed, index) {\n\t\t\treturn compressed.charCodeAt(index) - 32;\n\t\t}\n\n\t\tfunction compress(input) {\n\t\t\treturn input ? compressUTF16(input, 15) + ' ' : '';\n\t\t}\n\n\t\tfunction decompress(compressed) {\n\t\t\treturn compressed ? decompressUTF16(compressed, compressed.length, 16384) : '';\n\t\t}\n\n\t\tfunction isEnabled(path) {\n\t\t\tvar i = 0, pointer, match;\n\n\t\t\tfor(; (pointer = pattern[i]); i++) {\n\t\t\t\tif(path.indexOf(pointer.pattern) === 0 && (!match || pointer.weight > match.weight)) {\n\t\t\t\t\tmatch = pointer;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn match ? match.state : false;\n\t\t}\n\n\t\treturn {\n\t\t\tcompress:   compress,\n\t\t\tdecompress: decompress\n\t\t};\n\t}\n\n\tprovide([ 'path', '/demand/function/iterate', '/demand/validator/isObject', '/demand/validator/isTypeOf' ], definition);\n}());"]}